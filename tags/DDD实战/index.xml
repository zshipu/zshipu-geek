<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>DDD实战 on 知识铺的博客</title>
    <link>https://geek.zshipu.com/tags/DDD%E5%AE%9E%E6%88%98/</link>
    <description>Recent content in DDD实战 on 知识铺的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Tue, 22 Mar 2022 17:22:10 +0000</lastBuildDate><atom:link href="https://geek.zshipu.com/tags/DDD%E5%AE%9E%E6%88%98/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>DDD实战：20 总结（二）：分布式架构关键设计10问</title>
      <link>https://geek.zshipu.com/post/DDDxx/DDD%E5%AE%9E%E6%88%9820-%E6%80%BB%E7%BB%93%E4%BA%8C%E5%88%86%E5%B8%83%E5%BC%8F%E6%9E%B6%E6%9E%84%E5%85%B3%E9%94%AE%E8%AE%BE%E8%AE%A110%E9%97%AE/</link>
      <pubDate>Tue, 22 Mar 2022 17:22:10 +0000</pubDate>
      
      <guid>https://geek.zshipu.com/post/DDDxx/DDD%E5%AE%9E%E6%88%9820-%E6%80%BB%E7%BB%93%E4%BA%8C%E5%88%86%E5%B8%83%E5%BC%8F%E6%9E%B6%E6%9E%84%E5%85%B3%E9%94%AE%E8%AE%BE%E8%AE%A110%E9%97%AE/</guid>
      <description>前面我们重点讲述了领域建模、微服务设计和前端设计方法，它们组合在一起就可以形成中台建设的整体解决方案。而中台大多基于分布式微服务架构，这种企业级的数字化转型有很多地方值得我们关注和思考。 我们不仅要关注企业商业模式、业务边界以及前中台的融合，还要关注数据技术体系、微服务设计、多活等</description>
    </item>
    
    <item>
      <title>DDD实战：19 总结（一）：微服务设计和拆分要坚持哪些原则</title>
      <link>https://geek.zshipu.com/post/DDDxx/DDD%E5%AE%9E%E6%88%9819-%E6%80%BB%E7%BB%93%E4%B8%80%E5%BE%AE%E6%9C%8D%E5%8A%A1%E8%AE%BE%E8%AE%A1%E5%92%8C%E6%8B%86%E5%88%86%E8%A6%81%E5%9D%9A%E6%8C%81%E5%93%AA%E4%BA%9B%E5%8E%9F%E5%88%99/</link>
      <pubDate>Tue, 22 Mar 2022 16:22:10 +0000</pubDate>
      
      <guid>https://geek.zshipu.com/post/DDDxx/DDD%E5%AE%9E%E6%88%9819-%E6%80%BB%E7%BB%93%E4%B8%80%E5%BE%AE%E6%9C%8D%E5%8A%A1%E8%AE%BE%E8%AE%A1%E5%92%8C%E6%8B%86%E5%88%86%E8%A6%81%E5%9D%9A%E6%8C%81%E5%93%AA%E4%BA%9B%E5%8E%9F%E5%88%99/</guid>
      <description>我们前面已经讲了很多 DDD 的设计方法和实践案例。虽然 DDD 的设计思想和方法很好，但由于企业发展历程以及企业技术和文化的不同，DDD 和微服务的实施策略也会有差异。那么面对这种差异，我们应该如何落地 DDD 和微服务呢？今天我们就来聊聊微服务的设计原则和演进策略。 微服务的演进策略 在从单体向微服务演进</description>
    </item>
    
    <item>
      <title>DDD实战：18 知识点串讲：基于DDD的微服务设计实例</title>
      <link>https://geek.zshipu.com/post/DDDxx/DDD%E5%AE%9E%E6%88%9818-%E7%9F%A5%E8%AF%86%E7%82%B9%E4%B8%B2%E8%AE%B2%E5%9F%BA%E4%BA%8EDDD%E7%9A%84%E5%BE%AE%E6%9C%8D%E5%8A%A1%E8%AE%BE%E8%AE%A1%E5%AE%9E%E4%BE%8B/</link>
      <pubDate>Tue, 22 Mar 2022 15:22:10 +0000</pubDate>
      
      <guid>https://geek.zshipu.com/post/DDDxx/DDD%E5%AE%9E%E6%88%9818-%E7%9F%A5%E8%AF%86%E7%82%B9%E4%B8%B2%E8%AE%B2%E5%9F%BA%E4%BA%8EDDD%E7%9A%84%E5%BE%AE%E6%9C%8D%E5%8A%A1%E8%AE%BE%E8%AE%A1%E5%AE%9E%E4%BE%8B/</guid>
      <description>为了更好地理解 DDD 的设计流程，今天我会用一个项目来带你了解 DDD 的战略设计和战术设计，走一遍从领域建模到微服务设计的全过程，一起掌握 DDD 的主要设计流程和关键点。 项目基本信息 项目的目标是实现在线请假和考勤管理。功能描述如下： 请假人填写请假单提交审批，根据请假人身份、请假类型和请假天数进行校</description>
    </item>
    
    <item>
      <title>DDD实战：17 从后端到前端：微服务后，前端如何设计</title>
      <link>https://geek.zshipu.com/post/DDDxx/DDD%E5%AE%9E%E6%88%9817-%E4%BB%8E%E5%90%8E%E7%AB%AF%E5%88%B0%E5%89%8D%E7%AB%AF%E5%BE%AE%E6%9C%8D%E5%8A%A1%E5%90%8E%E5%89%8D%E7%AB%AF%E5%A6%82%E4%BD%95%E8%AE%BE%E8%AE%A1/</link>
      <pubDate>Tue, 22 Mar 2022 14:22:10 +0000</pubDate>
      
      <guid>https://geek.zshipu.com/post/DDDxx/DDD%E5%AE%9E%E6%88%9817-%E4%BB%8E%E5%90%8E%E7%AB%AF%E5%88%B0%E5%89%8D%E7%AB%AF%E5%BE%AE%E6%9C%8D%E5%8A%A1%E5%90%8E%E5%89%8D%E7%AB%AF%E5%A6%82%E4%BD%95%E8%AE%BE%E8%AE%A1/</guid>
      <description>微服务架构通常采用前后端分离的设计方式。作为企业级的中台，在完成单体应用拆分和微服务建设后，前端项目团队会同时面对多个中台微服务项目团队，这时候的前端人员就犹如维修电工一样了。 面对如此多的微服务暴露出来的 API 服务，如何进行正确的连接和拼装，才能保证不出错？这显然不是一件很容易的事情</description>
    </item>
    
    <item>
      <title>DDD实战：16 视图：如何实现服务和数据在微服务各层的协作</title>
      <link>https://geek.zshipu.com/post/DDDxx/DDD%E5%AE%9E%E6%88%9816-%E8%A7%86%E5%9B%BE%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E6%9C%8D%E5%8A%A1%E5%92%8C%E6%95%B0%E6%8D%AE%E5%9C%A8%E5%BE%AE%E6%9C%8D%E5%8A%A1%E5%90%84%E5%B1%82%E7%9A%84%E5%8D%8F%E4%BD%9C/</link>
      <pubDate>Tue, 22 Mar 2022 13:22:10 +0000</pubDate>
      
      <guid>https://geek.zshipu.com/post/DDDxx/DDD%E5%AE%9E%E6%88%9816-%E8%A7%86%E5%9B%BE%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E6%9C%8D%E5%8A%A1%E5%92%8C%E6%95%B0%E6%8D%AE%E5%9C%A8%E5%BE%AE%E6%9C%8D%E5%8A%A1%E5%90%84%E5%B1%82%E7%9A%84%E5%8D%8F%E4%BD%9C/</guid>
      <description>在 DDD 分层架构和微服务代码模型里，我们根据领域对象的属性和依赖关系，将领域对象进行分层，定义了与之对应的代码对象和代码目录结构。分层架构确定了微服务的总体架构，微服务内的主要对象有服务和实体等，它们一起协作完成业务逻辑。 那在运行过程中，这些服务和实体在微服务各层是如何协作的呢？今天</description>
    </item>
    
    <item>
      <title>DDD实战：15 边界：微服务的各种边界在架构演进中的作用</title>
      <link>https://geek.zshipu.com/post/DDDxx/DDD%E5%AE%9E%E6%88%9815-%E8%BE%B9%E7%95%8C%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%9A%84%E5%90%84%E7%A7%8D%E8%BE%B9%E7%95%8C%E5%9C%A8%E6%9E%B6%E6%9E%84%E6%BC%94%E8%BF%9B%E4%B8%AD%E7%9A%84%E4%BD%9C%E7%94%A8/</link>
      <pubDate>Sun, 20 Mar 2022 13:22:10 +0000</pubDate>
      
      <guid>https://geek.zshipu.com/post/DDDxx/DDD%E5%AE%9E%E6%88%9815-%E8%BE%B9%E7%95%8C%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%9A%84%E5%90%84%E7%A7%8D%E8%BE%B9%E7%95%8C%E5%9C%A8%E6%9E%B6%E6%9E%84%E6%BC%94%E8%BF%9B%E4%B8%AD%E7%9A%84%E4%BD%9C%E7%94%A8/</guid>
      <description>前几讲我们已经介绍过了，在用 DDD 进行微服务设计时，我们可以通过事件风暴来确定领域模型边界，划定微服务边界，定义业务和系统运行边界，从而保证微服务的单一职责和随需而变的架构演进能力。 那重点落到边界的时候，总结一下就是，微服务的设计要涉及到逻辑边界、物理边界和代码边界等等。 那么这些边界</description>
    </item>
    
    <item>
      <title>DDD实战：14 代码模型（下）：如何保证领域模型与代码模型的一致性</title>
      <link>https://geek.zshipu.com/post/DDDxx/DDD%E5%AE%9E%E6%88%9814-%E4%BB%A3%E7%A0%81%E6%A8%A1%E5%9E%8B%E4%B8%8B%E5%A6%82%E4%BD%95%E4%BF%9D%E8%AF%81%E9%A2%86%E5%9F%9F%E6%A8%A1%E5%9E%8B%E4%B8%8E%E4%BB%A3%E7%A0%81%E6%A8%A1%E5%9E%8B%E7%9A%84%E4%B8%80%E8%87%B4%E6%80%A7/</link>
      <pubDate>Sat, 19 Mar 2022 15:22:10 +0000</pubDate>
      
      <guid>https://geek.zshipu.com/post/DDDxx/DDD%E5%AE%9E%E6%88%9814-%E4%BB%A3%E7%A0%81%E6%A8%A1%E5%9E%8B%E4%B8%8B%E5%A6%82%E4%BD%95%E4%BF%9D%E8%AF%81%E9%A2%86%E5%9F%9F%E6%A8%A1%E5%9E%8B%E4%B8%8E%E4%BB%A3%E7%A0%81%E6%A8%A1%E5%9E%8B%E7%9A%84%E4%B8%80%E8%87%B4%E6%80%A7/</guid>
      <description>在 [第 12 讲] 中，我们了解了如何用事件风暴来构建领域模型，在构建领域模型的过程中，我们会提取出很多的领域对象，比如聚合、实体、命令和领域事件等。到了 [第 13 讲]，我们又根据 DDD 分层架构模型，建立了标准的微服务代码模型，为代码对象定义好了分层和目录结构。 那要想完成微服务的设计和落地，这之</description>
    </item>
    
    <item>
      <title>DDD实战：13 代码模型（上）：如何使用DDD设计微服务代码模型</title>
      <link>https://geek.zshipu.com/post/DDDxx/DDD%E5%AE%9E%E6%88%9813-%E4%BB%A3%E7%A0%81%E6%A8%A1%E5%9E%8B%E4%B8%8A%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8DDD%E8%AE%BE%E8%AE%A1%E5%BE%AE%E6%9C%8D%E5%8A%A1%E4%BB%A3%E7%A0%81%E6%A8%A1%E5%9E%8B/</link>
      <pubDate>Sat, 19 Mar 2022 14:22:10 +0000</pubDate>
      
      <guid>https://geek.zshipu.com/post/DDDxx/DDD%E5%AE%9E%E6%88%9813-%E4%BB%A3%E7%A0%81%E6%A8%A1%E5%9E%8B%E4%B8%8A%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8DDD%E8%AE%BE%E8%AE%A1%E5%BE%AE%E6%9C%8D%E5%8A%A1%E4%BB%A3%E7%A0%81%E6%A8%A1%E5%9E%8B/</guid>
      <description>上一讲我们完成了领域模型的设计，接下来我们就要开始微服务的设计和落地了。那微服务落地时首先要确定的就是微服务的代码结构，也就是我今天要讲的微服务代码模型。 只有建立了标准的微服务代码模型和代码规范后，我们才可以将领域对象所对应的代码对象放在合适的软件包的目录结构中。标准的代码模型可</description>
    </item>
    
    <item>
      <title>DDD实战：12 领域建模：如何用事件风暴构建领域模型</title>
      <link>https://geek.zshipu.com/post/DDDxx/DDD%E5%AE%9E%E6%88%9812-%E9%A2%86%E5%9F%9F%E5%BB%BA%E6%A8%A1%E5%A6%82%E4%BD%95%E7%94%A8%E4%BA%8B%E4%BB%B6%E9%A3%8E%E6%9A%B4%E6%9E%84%E5%BB%BA%E9%A2%86%E5%9F%9F%E6%A8%A1%E5%9E%8B/</link>
      <pubDate>Sat, 19 Mar 2022 13:22:10 +0000</pubDate>
      
      <guid>https://geek.zshipu.com/post/DDDxx/DDD%E5%AE%9E%E6%88%9812-%E9%A2%86%E5%9F%9F%E5%BB%BA%E6%A8%A1%E5%A6%82%E4%BD%95%E7%94%A8%E4%BA%8B%E4%BB%B6%E9%A3%8E%E6%9A%B4%E6%9E%84%E5%BB%BA%E9%A2%86%E5%9F%9F%E6%A8%A1%E5%9E%8B/</guid>
      <description>还记得我在 [第 01 讲] 中说过，微服务设计为什么要选择 DDD 吗？其中有一个非常重要的原因，就是采用 DDD 方法建立的领域模型，可以清晰地划分微服务的逻辑边界和物理边界。可以说，在 DDD 的实践中，好的领域模型直接关乎微服务的设计水平。因此，我认为 DDD 的战略设计是比战术设计更为重要的，也正是这个原因，我</description>
    </item>
    
    <item>
      <title>DDD实战：10 DDD、中台和微服务：它们是如何协作的</title>
      <link>https://geek.zshipu.com/post/DDDxx/DDD%E5%AE%9E%E6%88%9810-DDD%E4%B8%AD%E5%8F%B0%E5%92%8C%E5%BE%AE%E6%9C%8D%E5%8A%A1%E5%AE%83%E4%BB%AC%E6%98%AF%E5%A6%82%E4%BD%95%E5%8D%8F%E4%BD%9C%E7%9A%84/</link>
      <pubDate>Mon, 14 Mar 2022 14:22:10 +0000</pubDate>
      
      <guid>https://geek.zshipu.com/post/DDDxx/DDD%E5%AE%9E%E6%88%9810-DDD%E4%B8%AD%E5%8F%B0%E5%92%8C%E5%BE%AE%E6%9C%8D%E5%8A%A1%E5%AE%83%E4%BB%AC%E6%98%AF%E5%A6%82%E4%BD%95%E5%8D%8F%E4%BD%9C%E7%9A%84/</guid>
      <description>DDD 和微服务来源于西方，而中台诞生于中国的阿里巴巴。DDD 在二十多年前提出后一直默默前行，中台和微服务的理念近几年才出现，提出后就非常火爆。这三者看似风马牛不相及，实则缘分匪浅。中台是抽象出来的业务模型，微服务是业务模型的系统实现，DDD 作为方法论可以同时指导中台业务建模和微服务建</description>
    </item>
    
    <item>
      <title>DDD实战：09 中台：数字转型后到底应该共享什么</title>
      <link>https://geek.zshipu.com/post/DDDxx/DDD%E5%AE%9E%E6%88%9809-%E4%B8%AD%E5%8F%B0%E6%95%B0%E5%AD%97%E8%BD%AC%E5%9E%8B%E5%90%8E%E5%88%B0%E5%BA%95%E5%BA%94%E8%AF%A5%E5%85%B1%E4%BA%AB%E4%BB%80%E4%B9%88/</link>
      <pubDate>Mon, 14 Mar 2022 13:22:10 +0000</pubDate>
      
      <guid>https://geek.zshipu.com/post/DDDxx/DDD%E5%AE%9E%E6%88%9809-%E4%B8%AD%E5%8F%B0%E6%95%B0%E5%AD%97%E8%BD%AC%E5%9E%8B%E5%90%8E%E5%88%B0%E5%BA%95%E5%BA%94%E8%AF%A5%E5%85%B1%E4%BA%AB%E4%BB%80%E4%B9%88/</guid>
      <description>在上一讲中我们了解了分层架构的设计思想，并提到了这种设计思想对中台建设十分有利，那么今天我就来讲一讲中台。 中台是数字化转型的一个热门话题。继阿里提出中台概念后，很多人又提出了各种各样的中台。今天我们主要讨论业务中台和数据中台。作为企业数字化中台转型的整体，我也会顺带聊一聊前台和后</description>
    </item>
    
    <item>
      <title>DDD实战：08 微服务架构模型：几种常见模型的对比和分析</title>
      <link>https://geek.zshipu.com/post/DDDxx/DDD%E5%AE%9E%E6%88%9808-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84%E6%A8%A1%E5%9E%8B%E5%87%A0%E7%A7%8D%E5%B8%B8%E8%A7%81%E6%A8%A1%E5%9E%8B%E7%9A%84%E5%AF%B9%E6%AF%94%E5%92%8C%E5%88%86%E6%9E%90/</link>
      <pubDate>Sat, 12 Mar 2022 13:22:10 +0000</pubDate>
      
      <guid>https://geek.zshipu.com/post/DDDxx/DDD%E5%AE%9E%E6%88%9808-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84%E6%A8%A1%E5%9E%8B%E5%87%A0%E7%A7%8D%E5%B8%B8%E8%A7%81%E6%A8%A1%E5%9E%8B%E7%9A%84%E5%AF%B9%E6%AF%94%E5%92%8C%E5%88%86%E6%9E%90/</guid>
      <description>在上一讲中我重点介绍了 DDD 分层架构，同时我也提到了微服务架构模型其实还有好多种，不知道你注意到了没？这些架构模型在我们的实际应用中都具有很高的借鉴价值。 那么今天我们就把 DDD 分层架构（详情介绍如有遗忘可回看 [第 07 讲] ）、整洁架构、六边形架构这三种架构模型放到一起，对比分析，看看如何利用</description>
    </item>
    
    <item>
      <title>DDD实战：07 DDD分层架构：有效降低层与层之间的依赖</title>
      <link>https://geek.zshipu.com/post/DDDxx/DDD%E5%AE%9E%E6%88%9807-DDD%E5%88%86%E5%B1%82%E6%9E%B6%E6%9E%84%E6%9C%89%E6%95%88%E9%99%8D%E4%BD%8E%E5%B1%82%E4%B8%8E%E5%B1%82%E4%B9%8B%E9%97%B4%E7%9A%84%E4%BE%9D%E8%B5%96/</link>
      <pubDate>Fri, 11 Mar 2022 13:22:10 +0000</pubDate>
      
      <guid>https://geek.zshipu.com/post/DDDxx/DDD%E5%AE%9E%E6%88%9807-DDD%E5%88%86%E5%B1%82%E6%9E%B6%E6%9E%84%E6%9C%89%E6%95%88%E9%99%8D%E4%BD%8E%E5%B1%82%E4%B8%8E%E5%B1%82%E4%B9%8B%E9%97%B4%E7%9A%84%E4%BE%9D%E8%B5%96/</guid>
      <description>微服务架构模型有好多种，例如整洁架构、CQRS 和六边形架构等等。每种架构模式虽然提出的时代和背景不同，但其核心理念都是为了设计出“高内聚低耦合”的架构，轻松实现架构演进。而 DDD 分层架构的出现，使架构边界变得越来越清晰，它在微服务架构模型中，占有非常重要的位置。 那 DDD 分层架构到底长什么</description>
    </item>
    
    <item>
      <title>DDD实战：06 领域事件：解耦微服务的关键</title>
      <link>https://geek.zshipu.com/post/DDDxx/DDD%E5%AE%9E%E6%88%9806-%E9%A2%86%E5%9F%9F%E4%BA%8B%E4%BB%B6%E8%A7%A3%E8%80%A6%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%9A%84%E5%85%B3%E9%94%AE/</link>
      <pubDate>Thu, 10 Mar 2022 13:27:10 +0000</pubDate>
      
      <guid>https://geek.zshipu.com/post/DDDxx/DDD%E5%AE%9E%E6%88%9806-%E9%A2%86%E5%9F%9F%E4%BA%8B%E4%BB%B6%E8%A7%A3%E8%80%A6%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%9A%84%E5%85%B3%E9%94%AE/</guid>
      <description>在事件风暴（Event Storming）时，我们发现除了命令和操作等业务行为以外，还有一种非常重要的事件，这种事件发生后通常会导致进一步的业务操作，在 DDD 中这种事件被称为领域事件。 这只是最简单的定义，并不能让我们真正理解它。那到底什么是领域事件？领域事件的技术实现机制是怎样的？这一</description>
    </item>
    
    <item>
      <title>DDD实战：05 聚合和聚合根：怎样设计聚合</title>
      <link>https://geek.zshipu.com/post/DDDxx/DDD%E5%AE%9E%E6%88%9805-%E8%81%9A%E5%90%88%E5%92%8C%E8%81%9A%E5%90%88%E6%A0%B9%E6%80%8E%E6%A0%B7%E8%AE%BE%E8%AE%A1%E8%81%9A%E5%90%88/</link>
      <pubDate>Thu, 10 Mar 2022 13:26:10 +0000</pubDate>
      
      <guid>https://geek.zshipu.com/post/DDDxx/DDD%E5%AE%9E%E6%88%9805-%E8%81%9A%E5%90%88%E5%92%8C%E8%81%9A%E5%90%88%E6%A0%B9%E6%80%8E%E6%A0%B7%E8%AE%BE%E8%AE%A1%E8%81%9A%E5%90%88/</guid>
      <description>我们先回顾下上一讲，在事件风暴中，我们会根据一些业务操作和行为找出实体（Entity）或值对象（ValueObject），进而将业务关联紧密的实体和值对象进行组合，构成聚合，再根据业务语义将多个聚合划定到同一个限界上下文（Bounded Context）中，并在限界上下文内完成领域</description>
    </item>
    
    <item>
      <title>DDD实战：04 实体和值对象：从领域模型的基础单元看系统设计</title>
      <link>https://geek.zshipu.com/post/DDDxx/DDD%E5%AE%9E%E6%88%9804-%E5%AE%9E%E4%BD%93%E5%92%8C%E5%80%BC%E5%AF%B9%E8%B1%A1%E4%BB%8E%E9%A2%86%E5%9F%9F%E6%A8%A1%E5%9E%8B%E7%9A%84%E5%9F%BA%E7%A1%80%E5%8D%95%E5%85%83%E7%9C%8B%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/</link>
      <pubDate>Thu, 10 Mar 2022 13:25:10 +0000</pubDate>
      
      <guid>https://geek.zshipu.com/post/DDDxx/DDD%E5%AE%9E%E6%88%9804-%E5%AE%9E%E4%BD%93%E5%92%8C%E5%80%BC%E5%AF%B9%E8%B1%A1%E4%BB%8E%E9%A2%86%E5%9F%9F%E6%A8%A1%E5%9E%8B%E7%9A%84%E5%9F%BA%E7%A1%80%E5%8D%95%E5%85%83%E7%9C%8B%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/</guid>
      <description>这两个概念都是领域模型中的领域对象。它们在领域模型中起什么作用，战术设计时如何将它们映射到代码和数据模型中去？就是我们这一讲重点要关注的问题。 另外，在战略设计向战术设计过渡的这个过程中，理解和区分实体和值对象在不同阶段的形态是很重要的，毕竟阶段不同，它们的形态也会发生变化，这与我</description>
    </item>
    
    <item>
      <title>DDD实战： 03 限界上下文：定义领域边界的利器</title>
      <link>https://geek.zshipu.com/post/DDDxx/DDD%E5%AE%9E%E6%88%9803-%E9%99%90%E7%95%8C%E4%B8%8A%E4%B8%8B%E6%96%87%E5%AE%9A%E4%B9%89%E9%A2%86%E5%9F%9F%E8%BE%B9%E7%95%8C%E7%9A%84%E5%88%A9%E5%99%A8/</link>
      <pubDate>Thu, 10 Mar 2022 13:24:10 +0000</pubDate>
      
      <guid>https://geek.zshipu.com/post/DDDxx/DDD%E5%AE%9E%E6%88%9803-%E9%99%90%E7%95%8C%E4%B8%8A%E4%B8%8B%E6%96%87%E5%AE%9A%E4%B9%89%E9%A2%86%E5%9F%9F%E8%BE%B9%E7%95%8C%E7%9A%84%E5%88%A9%E5%99%A8/</guid>
      <description>在 DDD 领域建模和系统建设过程中，有很多的参与者，包括领域专家、产品经理、项目经理、架构师、开发经理和测试经理等。 对同样的领域知识，不同的参与角色可能会有不同的理解，那大家交流起来就会有障碍，怎么办呢？因此，在 DDD 中就出现了“通用语言”和“限界上下文”这两个重要的概念。 什么是通用语言？</description>
    </item>
    
    <item>
      <title>DDD实战：02 领域、子域、核心域、通用域和支撑域</title>
      <link>https://geek.zshipu.com/post/DDDxx/DDD%E5%AE%9E%E6%88%9802-%E9%A2%86%E5%9F%9F%E5%AD%90%E5%9F%9F%E6%A0%B8%E5%BF%83%E5%9F%9F%E9%80%9A%E7%94%A8%E5%9F%9F%E5%92%8C%E6%94%AF%E6%92%91%E5%9F%9F/</link>
      <pubDate>Thu, 10 Mar 2022 13:23:10 +0000</pubDate>
      
      <guid>https://geek.zshipu.com/post/DDDxx/DDD%E5%AE%9E%E6%88%9802-%E9%A2%86%E5%9F%9F%E5%AD%90%E5%9F%9F%E6%A0%B8%E5%BF%83%E5%9F%9F%E9%80%9A%E7%94%A8%E5%9F%9F%E5%92%8C%E6%94%AF%E6%92%91%E5%9F%9F/</guid>
      <description>DDD 的知识体系提出了很多的名词，像：领域、子域、核心域、通用域、支撑域、限界上下文、聚合、聚合根、实体、值对象等等，非常多。这些名词，都是关键概念，但它们实在有些晦涩难懂，可能导致你还没开始实践 DDD 就打起了退堂鼓。因此，在基础篇中，我希望能带着你一起做好实践前的准备工作。 除此之外，我</description>
    </item>
    
    <item>
      <title>DDD实战：答疑：有关3个典型问题的讲解</title>
      <link>https://geek.zshipu.com/post/DDDxx/DDD%E5%AE%9E%E6%88%98%E7%AD%94%E7%96%91%E6%9C%89%E5%85%B33%E4%B8%AA%E5%85%B8%E5%9E%8B%E9%97%AE%E9%A2%98%E7%9A%84%E8%AE%B2%E8%A7%A3/</link>
      <pubDate>Thu, 10 Mar 2022 13:22:10 +0000</pubDate>
      
      <guid>https://geek.zshipu.com/post/DDDxx/DDD%E5%AE%9E%E6%88%98%E7%AD%94%E7%96%91%E6%9C%89%E5%85%B33%E4%B8%AA%E5%85%B8%E5%9E%8B%E9%97%AE%E9%A2%98%E7%9A%84%E8%AE%B2%E8%A7%A3/</guid>
      <description>截至今天这一讲，我们的基础篇和进阶篇的内容就结束了。在这个过程中，我一直有关注大家提的问题。那在实战篇正式开始之前啊，我想针对 3 个比较典型的问题，做一个讲解，希望你也能同步思考，调动自己已学过的内容，这对我们后面实战篇的学习也是有一定帮助的。 问题 1：有关于领域可以划分为核心域、通</description>
    </item>
    
    <item>
      <title>DDD实战：01 领域驱动设计：微服务设计为什么要选择DDD</title>
      <link>https://geek.zshipu.com/post/DDDxx/DDD%E5%AE%9E%E6%88%9801-%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E5%BE%AE%E6%9C%8D%E5%8A%A1%E8%AE%BE%E8%AE%A1%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E9%80%89%E6%8B%A9DDD/</link>
      <pubDate>Thu, 10 Mar 2022 12:22:10 +0000</pubDate>
      
      <guid>https://geek.zshipu.com/post/DDDxx/DDD%E5%AE%9E%E6%88%9801-%E9%A2%86%E5%9F%9F%E9%A9%B1%E5%8A%A8%E8%AE%BE%E8%AE%A1%E5%BE%AE%E6%9C%8D%E5%8A%A1%E8%AE%BE%E8%AE%A1%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E9%80%89%E6%8B%A9DDD/</guid>
      <description>我们知道，微服务设计过程中往往会面临边界如何划定的问题，我经常看到项目团队为微服务到底应该拆多小而争得面红耳赤。不同的人会根据自己对微服务的理解而拆分出不同的微服务，于是大家各执一词，谁也说服不了谁，都觉得自己很有道理。 那在实际落地过程中，我也确实见过不少项目在面临这种微服务设计</description>
    </item>
    
    <item>
      <title>DDD实战：00 开篇词</title>
      <link>https://geek.zshipu.com/post/DDDxx/DDD%E5%AE%9E%E6%88%9800-%E5%BC%80%E7%AF%87%E8%AF%8D/</link>
      <pubDate>Thu, 10 Mar 2022 11:22:10 +0000</pubDate>
      
      <guid>https://geek.zshipu.com/post/DDDxx/DDD%E5%AE%9E%E6%88%9800-%E5%BC%80%E7%AF%87%E8%AF%8D/</guid>
      <description>目前热衷于采用领域驱动设计（DDD）实现中台业务建模，专注基于 DDD 的微服务设计和开发等。另外，我也正在深入探索传统企业中台数字化转型的技术和方法体系。很高兴在这个专栏和你见面！ 说起 DDD 的实践，那就不得不提微服务了。2015 年，我刚开始接触微服务，那时候和别人去介绍微服务的设计理念，接</description>
    </item>
    
  </channel>
</rss>
