<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>LearningExperience on 知识铺的博客</title>
    <link>https://geek.zshipu.com/tags/LearningExperience/</link>
    <description>Recent content in LearningExperience on 知识铺的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Wed, 06 Mar 2024 11:10:00 +0000</lastBuildDate>
    <atom:link href="https://geek.zshipu.com/tags/LearningExperience/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>初级开发者应该从spring源码中学什么</title>
      <link>https://geek.zshipu.com/post/code/docs/LearningExperience/PersonalExperience/%E5%88%9D%E7%BA%A7%E5%BC%80%E5%8F%91%E8%80%85%E5%BA%94%E8%AF%A5%E4%BB%8Espring%E6%BA%90%E7%A0%81%E4%B8%AD%E5%AD%A6%E4%BB%80%E4%B9%88/</link>
      <pubDate>Wed, 06 Mar 2024 11:10:00 +0000</pubDate>
      <guid>https://geek.zshipu.com/post/code/docs/LearningExperience/PersonalExperience/%E5%88%9D%E7%BA%A7%E5%BC%80%E5%8F%91%E8%80%85%E5%BA%94%E8%AF%A5%E4%BB%8Espring%E6%BA%90%E7%A0%81%E4%B8%AD%E5%AD%A6%E4%BB%80%E4%B9%88/</guid>
      <description>作为一名初入职场的开发者，最开始是在逛 B 站刷视频时看到的一个 Spring 源码阅读解析，当时作为一个只知道 SSH 和 CRUD 的 boy，看完后心里就两个词儿“卧槽！牛 B 啊！”而且在去年秋招面试阿里时几乎每次都会被面试官问道“有阅读过什么开源框架吗？”每次我都只能一脸便秘的“嗯…，呃…，啊…，木得…”。这在</description>
    </item>
    <item>
      <title>一个程序员的自我修养</title>
      <link>https://geek.zshipu.com/post/code/docs/LearningExperience/EncodingSpecification/%E4%B8%80%E4%B8%AA%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84%E8%87%AA%E6%88%91%E4%BF%AE%E5%85%BB/</link>
      <pubDate>Wed, 06 Mar 2024 11:09:00 +0000</pubDate>
      <guid>https://geek.zshipu.com/post/code/docs/LearningExperience/EncodingSpecification/%E4%B8%80%E4%B8%AA%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84%E8%87%AA%E6%88%91%E4%BF%AE%E5%85%BB/</guid>
      <description>本文用于总结《阿里 Java 开发手册》、《用友技术 review 手册》及个人 Java 开发工作经验，并结合这半年来的源码阅读经验进行编写。回顾那些写过的和读过的代码，回顾自己。 第一章 基础编码规范 1.1 命名规范 代码中的命名均不能以下划线或美元符号开始，也不能以下划线或美元符号结束。 tips：JDK 动态代理生成的代</description>
    </item>
    <item>
      <title>从框架源码中学习设计模式的感悟</title>
      <link>https://geek.zshipu.com/post/code/docs/LearningExperience/DesignPattern/%E4%BB%8E%E6%A1%86%E6%9E%B6%E6%BA%90%E7%A0%81%E4%B8%AD%E5%AD%A6%E4%B9%A0%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E7%9A%84%E6%84%9F%E6%82%9F/</link>
      <pubDate>Wed, 06 Mar 2024 11:08:00 +0000</pubDate>
      <guid>https://geek.zshipu.com/post/code/docs/LearningExperience/DesignPattern/%E4%BB%8E%E6%A1%86%E6%9E%B6%E6%BA%90%E7%A0%81%E4%B8%AD%E5%AD%A6%E4%B9%A0%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E7%9A%84%E6%84%9F%E6%82%9F/</guid>
      <description>从框架源码中学习设计模式是一种非常有效的学习方式，可以帮助我们更好地理解设计模式的应用场景和实现方式。以 Spring 框架为例，它是一个非常成熟的 Java 框架，里面广泛应用了各种设计模式。在学习 Spring 框架源码的过程中，我们可以得到以下一些感悟： 单例模式是 Spring 框架中最常用的设计模式之一。Spring 框架中</description>
    </item>
    <item>
      <title>从Spring及Mybatis框架源码中学习设计模式(行为型)</title>
      <link>https://geek.zshipu.com/post/code/docs/LearningExperience/DesignPattern/%E4%BB%8ESpring%E5%8F%8AMybatis%E6%A1%86%E6%9E%B6%E6%BA%90%E7%A0%81%E4%B8%AD%E5%AD%A6%E4%B9%A0%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E8%A1%8C%E4%B8%BA%E5%9E%8B/</link>
      <pubDate>Wed, 06 Mar 2024 11:07:00 +0000</pubDate>
      <guid>https://geek.zshipu.com/post/code/docs/LearningExperience/DesignPattern/%E4%BB%8ESpring%E5%8F%8AMybatis%E6%A1%86%E6%9E%B6%E6%BA%90%E7%A0%81%E4%B8%AD%E5%AD%A6%E4%B9%A0%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E8%A1%8C%E4%B8%BA%E5%9E%8B/</guid>
      <description>设计模式是解决问题的方案，从大神的代码中学习对设计模式的使用，可以有效提升个人编码及设计代码的能力。本系列博文用于总结阅读过的框架源码（Spring 系列、Mybatis）及 JDK 源码中 所使用过的设计模式，并结合个人工作经验，重新理解设计模式。 本篇博文主要看一下行为型的几个设计模式，即</description>
    </item>
    <item>
      <title>从Spring及Mybatis框架源码中学习设计模式(结构型)</title>
      <link>https://geek.zshipu.com/post/code/docs/LearningExperience/DesignPattern/%E4%BB%8ESpring%E5%8F%8AMybatis%E6%A1%86%E6%9E%B6%E6%BA%90%E7%A0%81%E4%B8%AD%E5%AD%A6%E4%B9%A0%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E7%BB%93%E6%9E%84%E5%9E%8B/</link>
      <pubDate>Wed, 06 Mar 2024 11:06:00 +0000</pubDate>
      <guid>https://geek.zshipu.com/post/code/docs/LearningExperience/DesignPattern/%E4%BB%8ESpring%E5%8F%8AMybatis%E6%A1%86%E6%9E%B6%E6%BA%90%E7%A0%81%E4%B8%AD%E5%AD%A6%E4%B9%A0%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E7%BB%93%E6%9E%84%E5%9E%8B/</guid>
      <description>设计模式是解决问题的方案，从大神的代码中学习对设计模式的使用，可以有效提升个人编码及设计代码的能力。本系列博文用于总结阅读过的框架源码（Spring 系列、Mybatis）及 JDK 源码中 所使用过的设计模式，并结合个人工作经验，重新理解设计模式。 本篇博文主要看一下结构型的几个设计模式，即</description>
    </item>
    <item>
      <title>从Spring及Mybatis框架源码中学习设计模式(创建型)</title>
      <link>https://geek.zshipu.com/post/code/docs/LearningExperience/DesignPattern/%E4%BB%8ESpring%E5%8F%8AMybatis%E6%A1%86%E6%9E%B6%E6%BA%90%E7%A0%81%E4%B8%AD%E5%AD%A6%E4%B9%A0%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E5%88%9B%E5%BB%BA%E5%9E%8B/</link>
      <pubDate>Wed, 06 Mar 2024 11:05:00 +0000</pubDate>
      <guid>https://geek.zshipu.com/post/code/docs/LearningExperience/DesignPattern/%E4%BB%8ESpring%E5%8F%8AMybatis%E6%A1%86%E6%9E%B6%E6%BA%90%E7%A0%81%E4%B8%AD%E5%AD%A6%E4%B9%A0%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E5%88%9B%E5%BB%BA%E5%9E%8B/</guid>
      <description>设计模式是解决问题的方案，从大神的代码中学习对设计模式的使用，可以有效提升个人编码及设计代码的能力。本系列博文用于总结阅读过的框架源码（Spring 系列、Mybatis）及 JDK 源码中 所使用过的设计模式，并结合个人工作经验，重新理解设计模式。 本篇博文主要看一下创建型的几个设计模式，即</description>
    </item>
    <item>
      <title>Java并发编程在各主流框架中的应用</title>
      <link>https://geek.zshipu.com/post/code/docs/LearningExperience/ConcurrentProgramming/Java%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E5%9C%A8%E5%90%84%E4%B8%BB%E6%B5%81%E6%A1%86%E6%9E%B6%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8/</link>
      <pubDate>Wed, 06 Mar 2024 11:04:00 +0000</pubDate>
      <guid>https://geek.zshipu.com/post/code/docs/LearningExperience/ConcurrentProgramming/Java%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E5%9C%A8%E5%90%84%E4%B8%BB%E6%B5%81%E6%A1%86%E6%9E%B6%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8/</guid>
      <description>Spring、Netty、Mybatis 等框架的代码中大量运用了 Java 多线程编程技巧。并发编程处理的恰当与否，将直接影响架构的性能。本章通过对 这些框架源码 的分析，结合并发编程的常用技巧，来讲解多线程编程在这些主流框架中的应用。 Java 内存模型 JVM 规范 定义了 Java 内存模型 来屏蔽掉各种操作系统、虚拟</description>
    </item>
  </channel>
</rss>
