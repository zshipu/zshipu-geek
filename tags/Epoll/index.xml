<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Epoll on 知识铺的博客</title>
    <link>https://geek.zshipu.com/tags/Epoll/</link>
    <description>Recent content in Epoll on 知识铺的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Tue, 15 Mar 2022 09:23:58 +0800</lastBuildDate>
    <atom:link href="https://geek.zshipu.com/tags/Epoll/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>深入剖析源码设计一深入理解机制</title>
      <link>https://geek.zshipu.com/post/%E4%BA%92%E8%81%94%E7%BD%91/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90%E6%BA%90%E7%A0%81%E8%AE%BE%E8%AE%A1%E4%B8%80%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E6%9C%BA%E5%88%B6/</link>
      <pubDate>Tue, 15 Mar 2022 09:23:58 +0800</pubDate>
      <guid>https://geek.zshipu.com/post/%E4%BA%92%E8%81%94%E7%BD%91/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90%E6%BA%90%E7%A0%81%E8%AE%BE%E8%AE%A1%E4%B8%80%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E6%9C%BA%E5%88%B6/</guid>
      <description>前言 打算输出一系列 Netty 源码分析与实践的文章，也作为后端开发学习过程中的沉淀，此文章为第一篇，从操作系统底层的IO讲起，为 Netty 的出场做下知识准备。 一些概念 文件描述符 文件描述符在形式上是一个非负整数。实际上，它是一个索引值，指向为每一个进程所维护的该进程打开文件的记录表。当程序打开一个现</description>
    </item>
    <item>
      <title>大话机制</title>
      <link>https://geek.zshipu.com/post/%E4%BA%92%E8%81%94%E7%BD%91/%E5%A4%A7%E8%AF%9D%E6%9C%BA%E5%88%B6/</link>
      <pubDate>Tue, 15 Mar 2022 09:02:24 +0800</pubDate>
      <guid>https://geek.zshipu.com/post/%E4%BA%92%E8%81%94%E7%BD%91/%E5%A4%A7%E8%AF%9D%E6%9C%BA%E5%88%B6/</guid>
      <description>转载自： https://cloud.tencent.com/developer/article/1005481 作者： 黄日成 提到select、poll、epoll相信大家都耳熟能详了，三个都是IO多路复用的机制，可以监视多个描述符的读/写等事件，一旦某个描述符就绪（一般是读或者写事件发生了），就能够将发生的事件通知给关心的应用程序去处理该事件。本质上，select、poll、ep</description>
    </item>
    <item>
      <title>如果这篇文章说不清的本质那就过来掐死我吧</title>
      <link>https://geek.zshipu.com/post/%E4%BA%92%E8%81%94%E7%BD%91/%E5%A6%82%E6%9E%9C%E8%BF%99%E7%AF%87%E6%96%87%E7%AB%A0%E8%AF%B4%E4%B8%8D%E6%B8%85%E7%9A%84%E6%9C%AC%E8%B4%A8%E9%82%A3%E5%B0%B1%E8%BF%87%E6%9D%A5%E6%8E%90%E6%AD%BB%E6%88%91%E5%90%A7/</link>
      <pubDate>Tue, 15 Mar 2022 09:02:21 +0800</pubDate>
      <guid>https://geek.zshipu.com/post/%E4%BA%92%E8%81%94%E7%BD%91/%E5%A6%82%E6%9E%9C%E8%BF%99%E7%AF%87%E6%96%87%E7%AB%A0%E8%AF%B4%E4%B8%8D%E6%B8%85%E7%9A%84%E6%9C%AC%E8%B4%A8%E9%82%A3%E5%B0%B1%E8%BF%87%E6%9D%A5%E6%8E%90%E6%AD%BB%E6%88%91%E5%90%A7/</guid>
      <description>作者：罗培羽 从事服务端开发，少不了要接触网络编程。epoll作为linux下高性能网络服务器的必备技术至关重要，nginx、redis、skynet和大部分游戏服务器都使用到这一多路复用技术。 文/罗培羽 因为epoll的重要性，不少游戏公司（如某某九九）在招聘服务端同学时，可能会问</description>
    </item>
  </channel>
</rss>
