<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>scala on 知识铺的博客</title>
    <link>https://geek.zshipu.com/tags/scala/</link>
    <description>Recent content in scala on 知识铺的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Tue, 15 Mar 2022 06:18:25 +0800</lastBuildDate>
    <atom:link href="https://geek.zshipu.com/tags/scala/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>一文解说所有用法</title>
      <link>https://geek.zshipu.com/post/%E4%BA%92%E8%81%94%E7%BD%91/%E4%B8%80%E6%96%87%E8%A7%A3%E8%AF%B4%E6%89%80%E6%9C%89%E7%94%A8%E6%B3%95/</link>
      <pubDate>Tue, 15 Mar 2022 06:18:25 +0800</pubDate>
      <guid>https://geek.zshipu.com/post/%E4%BA%92%E8%81%94%E7%BD%91/%E4%B8%80%E6%96%87%E8%A7%A3%E8%AF%B4%E6%89%80%E6%9C%89%E7%94%A8%E6%B3%95/</guid>
      <description>Trait基础 在Scala中，Trait是一种特殊概念。首先，Trait可以被作为接口来使用，此时Trait与Java的接口非常类似。同时在Trait可以定义抽象方法，其与抽象类中的抽象方法一样，不给出方法的具体实现。 _注意：_类使用extends继承Trait，与Java不同，</description>
    </item>
    <item>
      <title>面向对象编程之类和对象</title>
      <link>https://geek.zshipu.com/post/%E4%BA%92%E8%81%94%E7%BD%91/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B%E4%B9%8B%E7%B1%BB%E5%92%8C%E5%AF%B9%E8%B1%A1/</link>
      <pubDate>Tue, 15 Mar 2022 03:10:39 +0800</pubDate>
      <guid>https://geek.zshipu.com/post/%E4%BA%92%E8%81%94%E7%BD%91/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B%E4%B9%8B%E7%B1%BB%E5%92%8C%E5%AF%B9%E8%B1%A1/</guid>
      <description>定义一个类 1 // 定义类，包含field及方法 2 scala&amp;gt; :paste 3 // Entering paste mode (ctrl-D to finish) 4 class HelloWorld { 5 private var name = &amp;#34;leo&amp;#34; 6 def sayHello() {print(&amp;#34;Hello, &amp;#34; + name)} 7 def getName = name 8 } 9 // Exiting paste mode, now interpreting. 10 defined class HelloWorld 11 // 创建类的对象，并调用其方法 12 scala&amp;gt; val helloWorld = new HelloWorld 13 helloWorld: HelloWorld = HelloWorld@380e4452 14 // 如果方法无参，可以不加括号，如果定义方法时不带括号，则调用方法时也不能带括号 15 scala&amp;gt; helloWorld.sayHello() 16 Hello, leo</description>
    </item>
  </channel>
</rss>
