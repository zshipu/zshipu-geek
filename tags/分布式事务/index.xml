<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>分布式事务 on 知识铺的博客</title>
    <link>https://geek.zshipu.com/tags/%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1/</link>
    <description>Recent content in 分布式事务 on 知识铺的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Tue, 15 Mar 2022 09:20:48 +0800</lastBuildDate>
    <atom:link href="https://geek.zshipu.com/tags/%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>沈剑分布式事务原来可以这么玩</title>
      <link>https://geek.zshipu.com/post/%E4%BA%92%E8%81%94%E7%BD%91/%E6%B2%88%E5%89%91%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1%E5%8E%9F%E6%9D%A5%E5%8F%AF%E4%BB%A5%E8%BF%99%E4%B9%88%E7%8E%A9/</link>
      <pubDate>Tue, 15 Mar 2022 09:20:48 +0800</pubDate>
      <guid>https://geek.zshipu.com/post/%E4%BA%92%E8%81%94%E7%BD%91/%E6%B2%88%E5%89%91%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1%E5%8E%9F%E6%9D%A5%E5%8F%AF%E4%BB%A5%E8%BF%99%E4%B9%88%E7%8E%A9/</guid>
      <description>多个数据要同时操作，如何保证数据的完整性，以及一致性？ 答：事务，是常见的做法。 举个 栗子： 用户下了一个订单，需要修改余额表，订单表，流水表，于是会有类似的伪代码： start transaction; CURD table t_account; any Exception rollback; CURD table t_order; any Exception rollback; CURD table t_flow; any Exception rollback; commit; 如果对余额表，订单表，流水表的SQL操作全部成功，则全部提交 如果任何一个出现问</description>
    </item>
    <item>
      <title>事务与分布式事务中一些关键问题</title>
      <link>https://geek.zshipu.com/post/%E4%BA%92%E8%81%94%E7%BD%91/%E4%BA%8B%E5%8A%A1%E4%B8%8E%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1%E4%B8%AD%E4%B8%80%E4%BA%9B%E5%85%B3%E9%94%AE%E9%97%AE%E9%A2%98/</link>
      <pubDate>Tue, 15 Mar 2022 09:05:13 +0800</pubDate>
      <guid>https://geek.zshipu.com/post/%E4%BA%92%E8%81%94%E7%BD%91/%E4%BA%8B%E5%8A%A1%E4%B8%8E%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1%E4%B8%AD%E4%B8%80%E4%BA%9B%E5%85%B3%E9%94%AE%E9%97%AE%E9%A2%98/</guid>
      <description>事务特性 ？ • 原子性： 事务是最小的执行单位，不允许分割。事务的原子性确保动作要么全部完成，要么完全不起作用； • 一致性： 执行事务前后，数据保持一致； • 隔离性： 并发访问数据库时，一个用户的事物不被其他事物所干扰，各并发事务之间数据库是独立的； • 持久性: 一个事务被提交之后。它对数据库中数</description>
    </item>
    <item>
      <title>分布式事务的实现原理事务</title>
      <link>https://geek.zshipu.com/post/%E4%BA%92%E8%81%94%E7%BD%91/%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1%E7%9A%84%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%E4%BA%8B%E5%8A%A1/</link>
      <pubDate>Tue, 15 Mar 2022 05:44:47 +0800</pubDate>
      <guid>https://geek.zshipu.com/post/%E4%BA%92%E8%81%94%E7%BD%91/%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1%E7%9A%84%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%E4%BA%8B%E5%8A%A1/</guid>
      <description>本文转载自 架构文摘 公众号 事务是数据库系统中非常有趣也非常重要的概念，它是数据库管理系统执行过程中的一个逻辑单元，它能够保证一个事务中的所有操作要么全部执行，要么全不执行；在 SOA 与微服务架构大行其道的今天，在分布式的多个服务中保证业务的一致性就需要我们实现分布式事务。 在这篇文章中，我</description>
    </item>
    <item>
      <title>干货蚂蚁金服科技一篇文章带你学习分布式事务</title>
      <link>https://geek.zshipu.com/post/%E4%BA%92%E8%81%94%E7%BD%91/%E5%B9%B2%E8%B4%A7%E8%9A%82%E8%9A%81%E9%87%91%E6%9C%8D%E7%A7%91%E6%8A%80%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0%E5%B8%A6%E4%BD%A0%E5%AD%A6%E4%B9%A0%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1/</link>
      <pubDate>Mon, 14 Mar 2022 17:43:35 +0800</pubDate>
      <guid>https://geek.zshipu.com/post/%E4%BA%92%E8%81%94%E7%BD%91/%E5%B9%B2%E8%B4%A7%E8%9A%82%E8%9A%81%E9%87%91%E6%9C%8D%E7%A7%91%E6%8A%80%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0%E5%B8%A6%E4%BD%A0%E5%AD%A6%E4%B9%A0%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1/</guid>
      <description>分布式事务是企业集成中的一个技术难点，也是每一个分布式系统架构中都会涉及到的一个东西，特别是在这几年越来越火的微服务架构中，几乎可以说是无法避免，本文就围绕分布式事务各方面与大家进行介绍。 一. 事务 1.1 什么是事务 数据库事务（简称：事务，Transaction）是指数据库执行过程中的一</description>
    </item>
  </channel>
</rss>
