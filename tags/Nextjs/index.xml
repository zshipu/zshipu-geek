<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>nextjs on 知识铺的博客</title>
    <link>https://geek.zshipu.com/tags/nextjs/</link>
    <description>Recent content in nextjs on 知识铺的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sat, 21 May 2022 10:03:00 +0800</lastBuildDate><atom:link href="https://geek.zshipu.com/tags/nextjs/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>nexp-level-001 04 Next 的最佳样式选项</title>
      <link>https://geek.zshipu.com/post/nexp/level001/nexp-level-001-04-Next-%E7%9A%84%E6%9C%80%E4%BD%B3%E6%A0%B7%E5%BC%8F%E9%80%89%E9%A1%B9/</link>
      <pubDate>Sat, 21 May 2022 10:03:00 +0800</pubDate>
      
      <guid>https://geek.zshipu.com/post/nexp/level001/nexp-level-001-04-Next-%E7%9A%84%E6%9C%80%E4%BD%B3%E6%A0%B7%E5%BC%8F%E9%80%89%E9%A1%B9/</guid>
      <description>鲜为人知的是，Next.js提供了许多在应用程序中支持CSS的方法。无论你喜欢实用程序CSS及其类还是更喜欢CSS-in-JS，Next.js都能满足您的需求。在本教程中，您将发现在 Next.js 应用程序中实现样式设置的几种方法。让我们实现一个样式文本，当用户将其悬停在一起时，该文本将变为红</description>
    </item>
    
    <item>
      <title>nexp-level-001 03 服务器端渲染与客户端渲染</title>
      <link>https://geek.zshipu.com/post/nexp/level001/nexp-level-001-03-%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AB%AF%E6%B8%B2%E6%9F%93%E4%B8%8E%E5%AE%A2%E6%88%B7%E7%AB%AF%E6%B8%B2%E6%9F%93/</link>
      <pubDate>Sat, 21 May 2022 10:02:00 +0800</pubDate>
      
      <guid>https://geek.zshipu.com/post/nexp/level001/nexp-level-001-03-%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AB%AF%E6%B8%B2%E6%9F%93%E4%B8%8E%E5%AE%A2%E6%88%B7%E7%AB%AF%E6%B8%B2%E6%9F%93/</guid>
      <description>最近在准备技术面试时，我偶然发现了服务器端渲染 (SSR) 和客户端渲染 (CSR) 的概念，我并不清楚它的含义，也不知道它们之间的区别是什么两种方法。 在我的研究中，我意识到在选择在您的网站上实施哪种方法时，这不是一个简单的决定。出于所有这些原因，我决定写一篇关于什么是 SSR 和 SCR 以及它们的优缺点的博文。 长期</description>
    </item>
    
    <item>
      <title>nexp-level-001 02 Next.js 与 React：差异和最佳前端框架</title>
      <link>https://geek.zshipu.com/post/nexp/level001/nexp-level-001-02-Next.js-%E4%B8%8E-React%E5%B7%AE%E5%BC%82%E5%92%8C%E6%9C%80%E4%BD%B3%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6/</link>
      <pubDate>Sat, 21 May 2022 10:01:00 +0800</pubDate>
      
      <guid>https://geek.zshipu.com/post/nexp/level001/nexp-level-001-02-Next.js-%E4%B8%8E-React%E5%B7%AE%E5%BC%82%E5%92%8C%E6%9C%80%E4%BD%B3%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6/</guid>
      <description>随着每年都有新的 JavaScript 框架和库出现，很难跟上不断变化的 JS 生态系统的步伐。 但即使在JavaScript 框架和库的汪洋大海中，React 和 Next.js 也能脱颖而出。React 是最受前端开发人员欢迎的 JavaScript 库。Next.js 虽然比 React 小，但多年来一直在稳步增长，并有望成为最常用的 JavaScript 框架。 React 的 UI 库非常健壮，</description>
    </item>
    
    <item>
      <title>nexp-level-001 01 Next.js 功能及介绍</title>
      <link>https://geek.zshipu.com/post/nexp/level001/nexp-level-001-01-Next.js-%E5%8A%9F%E8%83%BD%E5%8F%8A%E4%BB%8B%E7%BB%8D/</link>
      <pubDate>Sat, 21 May 2022 10:00:00 +0800</pubDate>
      
      <guid>https://geek.zshipu.com/post/nexp/level001/nexp-level-001-01-Next.js-%E5%8A%9F%E8%83%BD%E5%8F%8A%E4%BB%8B%E7%BB%8D/</guid>
      <description>介绍 在设定一个 React 项目时候，通常会使用 create-React-app 这个套件来快速产出开发样板环境，而另外一个选择 Next.js 则包好了许多功能，例如Server Side Render （SSR），Webpack，Router&amp;hellip;. 不需要额外再多花时间在设定方面，但同时又有弹性可以扩充，非常的快速可以马上开发项目，在使用next</description>
    </item>
    
    <item>
      <title>2.3 拓展知识了解 TypeScript 中的高级概念</title>
      <link>https://geek.zshipu.com/post/nextjs/storybooktailwindnextjs/2.4-%E6%8B%93%E5%B1%95%E7%9F%A5%E8%AF%86%E4%BA%86%E8%A7%A3-TypeScript-%E4%B8%AD%E7%9A%84%E9%AB%98%E7%BA%A7%E6%A6%82%E5%BF%B5/</link>
      <pubDate>Sat, 14 May 2022 23:22:10 +0000</pubDate>
      
      <guid>https://geek.zshipu.com/post/nextjs/storybooktailwindnextjs/2.4-%E6%8B%93%E5%B1%95%E7%9F%A5%E8%AF%86%E4%BA%86%E8%A7%A3-TypeScript-%E4%B8%AD%E7%9A%84%E9%AB%98%E7%BA%A7%E6%A6%82%E5%BF%B5/</guid>
      <description>什么是打字稿？ TypeScript 由 Microsoft 创建和维护，是 JavaScript 的超集，这意味着所有功能性 JavaScript 代码在 TypeScript 下都是有效的。该语言可以理解为“用于应用程序级开发的 JavaScript”，主要关注两个方面： 提供从未来 JavaScript 引擎到当前 JavaScript 引擎的功能 为 JavaScript 提供类型系统 TypeScript 的组件通常是语言本身，本质上是 JavaScript 加上附加的功能和语法，将代码转</description>
    </item>
    
    <item>
      <title>2.3 拓展知识学习 TypeScript 指南</title>
      <link>https://geek.zshipu.com/post/nextjs/storybooktailwindnextjs/2.3-%E6%8B%93%E5%B1%95%E7%9F%A5%E8%AF%86%E5%AD%A6%E4%B9%A0-TypeScript-%E5%85%A8%E9%9D%A2%E6%8C%87%E5%8D%97/</link>
      <pubDate>Sat, 14 May 2022 22:22:10 +0000</pubDate>
      
      <guid>https://geek.zshipu.com/post/nextjs/storybooktailwindnextjs/2.3-%E6%8B%93%E5%B1%95%E7%9F%A5%E8%AF%86%E5%AD%A6%E4%B9%A0-TypeScript-%E5%85%A8%E9%9D%A2%E6%8C%87%E5%8D%97/</guid>
      <description>什么是 Typescript？ Typescript是JavaScript的类型化超集，由Microsoft于2012年创建，旨在帮助Javascript开发人员使用大规模应用程序。Typescript旨在作为大型代码库的结构机制提供帮助，因为它有助于避免会减慢您速度的常见错误。它使</description>
    </item>
    
    <item>
      <title>2.2 拓展知识构建自己的 UI 组件库</title>
      <link>https://geek.zshipu.com/post/nextjs/storybooktailwindnextjs/2.2-%E6%8B%93%E5%B1%95%E7%9F%A5%E8%AF%86%E6%9E%84%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84-UI-%E7%BB%84%E4%BB%B6%E5%BA%93/</link>
      <pubDate>Sat, 14 May 2022 21:22:10 +0000</pubDate>
      
      <guid>https://geek.zshipu.com/post/nextjs/storybooktailwindnextjs/2.2-%E6%8B%93%E5%B1%95%E7%9F%A5%E8%AF%86%E6%9E%84%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84-UI-%E7%BB%84%E4%BB%B6%E5%BA%93/</guid>
      <description>UI 组件库是一组现成的 UI 组件，例如按钮、输入、对话框等。它们用作布局的构建块。由于它们的模块化特性，我们可以以多种不同的方式排列组件以实现独特的效果。每个库都有独特的外观和感觉，但它们中的大多数都提供主题，并且它们的组件是可定制和可重用的。 我将引导您完成创建自己的 UI 组件库的过程： React</description>
    </item>
    
    <item>
      <title>2.1 拓展知识_document.js 如何在 Next.js 中改进 SEO</title>
      <link>https://geek.zshipu.com/post/nextjs/storybooktailwindnextjs/2.1-%E6%8B%93%E5%B1%95%E7%9F%A5%E8%AF%86_document.js-%E5%A6%82%E4%BD%95%E5%9C%A8-Next.js-%E4%B8%AD%E6%94%B9%E8%BF%9B-SEO/</link>
      <pubDate>Sat, 14 May 2022 20:22:10 +0000</pubDate>
      
      <guid>https://geek.zshipu.com/post/nextjs/storybooktailwindnextjs/2.1-%E6%8B%93%E5%B1%95%E7%9F%A5%E8%AF%86_document.js-%E5%A6%82%E4%BD%95%E5%9C%A8-Next.js-%E4%B8%AD%E6%94%B9%E8%BF%9B-SEO/</guid>
      <description>首先，我们需要创建 Next.js 应用程序。如果您是 Next.js 新手，请按照这篇文章生成 Next.js 应用程序脚手架。 你在这里。公平地假设您已经设置了 Next.js 框架，并且您的应用程序正在http://localhost:300上运行。 此时，如果您查看源代码页面，那么您会看到 HTML 和 CSS。您还可以看到元标记、标题和元描述。但是</description>
    </item>
    
    <item>
      <title>2.搭建 Next.js 应用程序</title>
      <link>https://geek.zshipu.com/post/nextjs/storybooktailwindnextjs/2.%E6%90%AD%E5%BB%BA-Next.js-%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F/</link>
      <pubDate>Sat, 14 May 2022 19:22:10 +0000</pubDate>
      
      <guid>https://geek.zshipu.com/post/nextjs/storybooktailwindnextjs/2.%E6%90%AD%E5%BB%BA-Next.js-%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F/</guid>
      <description>在本文中，我们将介绍 如何配置故事书 配置 TailwindCSS 添加 SEO 友好的 _document.js 创建基本组件 配置故事书 在上一篇文章中，我们在 Next.js 应用程序中安装和设置了故事书。安装过程会创建一个名为 stories 的文件夹。并且，在该文件夹下，有安装过程中附带的 JavaScript 文件。删除 stories 文件夹下的所有文件。它会在 6006 端口打破故事书。 安装以下内容： npm install @storybook/addon-postcss</description>
    </item>
    
    <item>
      <title>1.使用 Storybook、Tailwindcss 和 Apollo 客户端设置 Next.Js</title>
      <link>https://geek.zshipu.com/post/nextjs/storybooktailwindnextjs/1.%E4%BD%BF%E7%94%A8-StorybookTailwindcss-%E5%92%8C-Apollo-%E5%AE%A2%E6%88%B7%E7%AB%AF%E8%AE%BE%E7%BD%AE-Next.Js/</link>
      <pubDate>Sat, 14 May 2022 18:22:10 +0000</pubDate>
      
      <guid>https://geek.zshipu.com/post/nextjs/storybooktailwindnextjs/1.%E4%BD%BF%E7%94%A8-StorybookTailwindcss-%E5%92%8C-Apollo-%E5%AE%A2%E6%88%B7%E7%AB%AF%E8%AE%BE%E7%BD%AE-Next.Js/</guid>
      <description>要使用的技术堆栈 前端 作为 CSS 框架的 Tailwind NextJS storybook GraphQL 后端 作为 Perl 爱好者，我将使用 Mojolicious (Mic Drop)。 设置项目前端 在本文的这一部分，我们将设置 NextJs 项目 安装 Tailwind CSS 框架 设置storybook 使用 Apollo 客户端设置 GraphQL 一个 Git 存储库 设置 Next.js 项目 要在 Next.js 中创建新项目，请执行以下命令： npx create-next-app 在下一步中，它将询问应用程序名称，我们</description>
    </item>
    
    <item>
      <title>起步：如何为您的Next.js项目构建可扩展的架构</title>
      <link>https://geek.zshipu.com/post/nextjs/nextjsbase/%E5%A6%82%E4%BD%95%E4%B8%BA%E6%82%A8%E7%9A%84Next.js%E9%A1%B9%E7%9B%AE%E6%9E%84%E5%BB%BA%E5%8F%AF%E6%89%A9%E5%B1%95%E7%9A%84%E6%9E%B6%E6%9E%84/</link>
      <pubDate>Tue, 22 Mar 2022 18:22:10 +0000</pubDate>
      
      <guid>https://geek.zshipu.com/post/nextjs/nextjsbase/%E5%A6%82%E4%BD%95%E4%B8%BA%E6%82%A8%E7%9A%84Next.js%E9%A1%B9%E7%9B%AE%E6%9E%84%E5%BB%BA%E5%8F%AF%E6%89%A9%E5%B1%95%E7%9A%84%E6%9E%B6%E6%9E%84/</guid>
      <description>什么是Next.js？ &amp;ldquo;Next.js为您提供了最佳的开发人员体验，其中包含生产所需的所有功能：混合静态和服务器渲染，TypeScript支持，智能捆绑，路由预取等。无需配置。 正如他们上面所说的那样，Next.js是一个多合一的全栈现代应用程序构建解决方案。它包括对T</description>
    </item>
    
    <item>
      <title>Next.js学习系列：资源、metadata和 CSS 4</title>
      <link>https://geek.zshipu.com/post/nextjs/nextjsbase/Next.js%E5%AD%A6%E4%B9%A0%E7%B3%BB%E5%88%97%E8%B5%84%E6%BA%90metadata%E5%92%8C-CSS-4/</link>
      <pubDate>Mon, 28 Feb 2022 10:04:19 +0800</pubDate>
      
      <guid>https://geek.zshipu.com/post/nextjs/nextjsbase/Next.js%E5%AD%A6%E4%B9%A0%E7%B3%BB%E5%88%97%E8%B5%84%E6%BA%90metadata%E5%92%8C-CSS-4/</guid>
      <description>元素 如果我们想修改页面的元数据（如 HTML 标记），该怎么办？&amp;lt;title&amp;gt; &amp;lt;title&amp;gt;是 HTML 标记的一部分，因此让我们深入了解如何在 Next.js 页面中修改标记。&amp;lt;head&amp;gt;``````&amp;lt;head&amp;gt; 在编辑器中打开并找到以下行：pages/index.j</description>
    </item>
    
    <item>
      <title>Next.js学习系列：资源、metadata和 CSS 3</title>
      <link>https://geek.zshipu.com/post/nextjs/nextjsbase/Next.js%E5%AD%A6%E4%B9%A0%E7%B3%BB%E5%88%97%E8%B5%84%E6%BA%90metadata%E5%92%8C-CSS-3/</link>
      <pubDate>Mon, 28 Feb 2022 09:52:44 +0800</pubDate>
      
      <guid>https://geek.zshipu.com/post/nextjs/nextjsbase/Next.js%E5%AD%A6%E4%B9%A0%E7%B3%BB%E5%88%97%E8%B5%84%E6%BA%90metadata%E5%92%8C-CSS-3/</guid>
      <description>资产 Next.js可以在顶级public目录下提供静态资产，如图像。内部文件可以从应用程序的根目录引用，类似于pages。public 该目录还可用于 、Google 站点验证和任何其他静态资产。查看静态文件服务文档以了解更多信息。public``````robots.txt 下载您的个</description>
    </item>
    
    <item>
      <title>Next.js学习系列：资源、metadata和 CSS 2</title>
      <link>https://geek.zshipu.com/post/nextjs/nextjsbase/Next.js%E5%AD%A6%E4%B9%A0%E7%B3%BB%E5%88%97%E8%B5%84%E6%BA%90metadata%E5%92%8C-CSS-2/</link>
      <pubDate>Mon, 28 Feb 2022 09:12:49 +0800</pubDate>
      
      <guid>https://geek.zshipu.com/post/nextjs/nextjsbase/Next.js%E5%AD%A6%E4%B9%A0%E7%B3%BB%E5%88%97%E8%B5%84%E6%BA%90metadata%E5%92%8C-CSS-2/</guid>
      <description>下载入门代码（可选） 如果您不打算继续上一课，可以在下面下载、安装和运行本课程的入门代码。这将设置一个目录，使其与上一课的结果相同。nextjs-blog 同样，如果您刚刚完成上一课，则不需要这样做。 npx create-next-app nextjs-blog &amp;ndash;use-npm &amp;ndash;example &amp;ldquo;https://github.com/vercel/next</description>
    </item>
    
    <item>
      <title>Next.js学习系列：资源、metadata和 CSS</title>
      <link>https://geek.zshipu.com/post/nextjs/nextjsbase/Next.js%E5%AD%A6%E4%B9%A0%E7%B3%BB%E5%88%97%E8%B5%84%E6%BA%90metadata%E5%92%8C-CSS/</link>
      <pubDate>Mon, 28 Feb 2022 09:07:03 +0800</pubDate>
      
      <guid>https://geek.zshipu.com/post/nextjs/nextjsbase/Next.js%E5%AD%A6%E4%B9%A0%E7%B3%BB%E5%88%97%E8%B5%84%E6%BA%90metadata%E5%92%8C-CSS/</guid>
      <description>我们添加的第二个页面当前没有样式。让我们添加一些 CSS 来设置页面样式。 Next.js内置了对 CSS 和 Sass 的支持。在本课程中，我们将使用 CSS。 本 节 课 还将 讨论 Next.js 如何处理静态资产（如图像）和页面metadata（如标记）。&amp;lt;title&amp;gt; 您将在本课中学到什么 在本课中，您将学习： 如何将</description>
    </item>
    
    <item>
      <title>Next.js学习系列：在页面之间导航4</title>
      <link>https://geek.zshipu.com/post/nextjs/nextjsbase/Next.js%E5%AD%A6%E4%B9%A0%E7%B3%BB%E5%88%97%E5%9C%A8%E9%A1%B5%E9%9D%A2%E4%B9%8B%E9%97%B4%E5%AF%BC%E8%88%AA4/</link>
      <pubDate>Fri, 25 Feb 2022 16:21:47 +0800</pubDate>
      
      <guid>https://geek.zshipu.com/post/nextjs/nextjsbase/Next.js%E5%AD%A6%E4%B9%A0%E7%B3%BB%E5%88%97%E5%9C%A8%E9%A1%B5%E9%9D%A2%E4%B9%8B%E9%97%B4%E5%AF%BC%E8%88%AA4/</guid>
      <description>客户端导航 &amp;quot;链接&amp;ldquo;组件支持在同一 Next.js 应用中的两个页面之间进行客户端导航。 客户端导航意味着_使用JavaScript_进行页面转换，这比浏览器完成的默认导航更快。 以下是验证它的简单方法： 使用浏览器的开发人员工具将 的 CSS 属性更改为 。background``````&amp;</description>
    </item>
    
    <item>
      <title>Next.js学习系列：在页面之间导航3</title>
      <link>https://geek.zshipu.com/post/nextjs/nextjsbase/Next.js%E5%AD%A6%E4%B9%A0%E7%B3%BB%E5%88%97%E5%9C%A8%E9%A1%B5%E9%9D%A2%E4%B9%8B%E9%97%B4%E5%AF%BC%E8%88%AA3/</link>
      <pubDate>Fri, 25 Feb 2022 15:45:29 +0800</pubDate>
      
      <guid>https://geek.zshipu.com/post/nextjs/nextjsbase/Next.js%E5%AD%A6%E4%B9%A0%E7%B3%BB%E5%88%97%E5%9C%A8%E9%A1%B5%E9%9D%A2%E4%B9%8B%E9%97%B4%E5%AF%BC%E8%88%AA3/</guid>
      <description>链接组件 在网站上的页面之间链接时，请使用 HTML 标记。&amp;lt;a&amp;gt; 在&amp;quot;Next.js&amp;quot;中，使用&amp;quot;来自下一个组件/链接&amp;ldquo;来包装标记。 允许您执行客户端导航到应用程序中的其他页面。Link``````&amp;lt;a&amp;gt;``````&amp;lt;Lin</description>
    </item>
    
    <item>
      <title>Next.js学习系列：在页面之间导航2</title>
      <link>https://geek.zshipu.com/post/nextjs/nextjsbase/Next.js%E5%AD%A6%E4%B9%A0%E7%B3%BB%E5%88%97%E5%9C%A8%E9%A1%B5%E9%9D%A2%E4%B9%8B%E9%97%B4%E5%AF%BC%E8%88%AA2/</link>
      <pubDate>Fri, 25 Feb 2022 15:40:57 +0800</pubDate>
      
      <guid>https://geek.zshipu.com/post/nextjs/nextjsbase/Next.js%E5%AD%A6%E4%B9%A0%E7%B3%BB%E5%88%97%E5%9C%A8%E9%A1%B5%E9%9D%A2%E4%B9%8B%E9%97%B4%E5%AF%BC%E8%88%AA2/</guid>
      <description>**如果要继续上一课，**可以跳过此页面。单击下面的按钮转到下一页。 下载入门代码（可选） 如果您不打算继续上一课，可以在下面下载、安装和运行本课程的入门代码。这将设置一个目录，使其与上一课的结果相同。nextjs-blog 同样，如果您刚刚完成上一课，则不需要这样做。 npx create-next-app nextjs-blog &amp;ndash;use-npm &amp;ndash;example &amp;ld</description>
    </item>
    
    <item>
      <title>Next.js学习系列：在页面之间导航</title>
      <link>https://geek.zshipu.com/post/nextjs/nextjsbase/Next.js%E5%AD%A6%E4%B9%A0%E7%B3%BB%E5%88%97%E5%9C%A8%E9%A1%B5%E9%9D%A2%E4%B9%8B%E9%97%B4%E5%AF%BC%E8%88%AA1/</link>
      <pubDate>Fri, 25 Feb 2022 15:38:11 +0800</pubDate>
      
      <guid>https://geek.zshipu.com/post/nextjs/nextjsbase/Next.js%E5%AD%A6%E4%B9%A0%E7%B3%BB%E5%88%97%E5%9C%A8%E9%A1%B5%E9%9D%A2%E4%B9%8B%E9%97%B4%E5%AF%BC%E8%88%AA1/</guid>
      <description>到目前为止，我们创建的Next.js应用只有一个页面。网站和Web应用程序通常具有许多不同的页面。 让我们探讨一下如何向应用程序添加更多页面。 您将在本课中学到什么 在本课中，您将： 使用集成文件系统路由创建新页面。 了解如何使用链接组件在页面之间启用客户端导航。 了解对代码拆分和预取的内置</description>
    </item>
    
    <item>
      <title>Next.js学习系列：在页面之间导航</title>
      <link>https://geek.zshipu.com/post/nextjs/nextjsbase/Next.js%E5%AD%A6%E4%B9%A0%E7%B3%BB%E5%88%97%E5%9C%A8%E9%A1%B5%E9%9D%A2%E4%B9%8B%E9%97%B4%E5%AF%BC%E8%88%AA/</link>
      <pubDate>Fri, 25 Feb 2022 15:33:00 +0800</pubDate>
      
      <guid>https://geek.zshipu.com/post/nextjs/nextjsbase/Next.js%E5%AD%A6%E4%B9%A0%E7%B3%BB%E5%88%97%E5%9C%A8%E9%A1%B5%E9%9D%A2%E4%B9%8B%E9%97%B4%E5%AF%BC%E8%88%AA/</guid>
      <description>到目前为止，我们创建的Next.js应用只有一个页面。网站和Web应用程序通常具有许多不同的页面。 让我们探讨一下如何向应用程序添加更多页面。 您将在本课中学到什么 在本课中，您将： 使用集成文件系统路由创建新页面。 了解如何使用链接组件在页面之间启用客户端导航。 了解对代码拆分和预取的内置</description>
    </item>
    
    <item>
      <title>Next.js学习系列：创建Next.js应用4</title>
      <link>https://geek.zshipu.com/post/nextjs/nextjsbase/Next.js%E5%AD%A6%E4%B9%A0%E7%B3%BB%E5%88%97%E5%88%9B%E5%BB%BANext.js%E5%BA%94%E7%94%A84/</link>
      <pubDate>Fri, 25 Feb 2022 15:26:03 +0800</pubDate>
      
      <guid>https://geek.zshipu.com/post/nextjs/nextjsbase/Next.js%E5%AD%A6%E4%B9%A0%E7%B3%BB%E5%88%97%E5%88%9B%E5%BB%BANext.js%E5%BA%94%E7%94%A84/</guid>
      <description>编辑页面 让我们尝试编辑初学者页面。 确保 Next.js 开发服务器仍在运行。 使用文本编辑器打开。pages/index.js 找到标签下显示**&amp;ldquo;欢迎加入&amp;rdquo;**的文本，并将其更改为**&amp;ldquo;学习&amp;rdquo;**。&amp;lt;h1&amp;gt; 保存文件。 保存文件后，浏览器会自</description>
    </item>
    
    <item>
      <title>Next.js学习系列：创建Next.js应用3</title>
      <link>https://geek.zshipu.com/post/nextjs/nextjsbase/Next.js%E5%AD%A6%E4%B9%A0%E7%B3%BB%E5%88%97%E5%88%9B%E5%BB%BANext.js%E5%BA%94%E7%94%A83/</link>
      <pubDate>Fri, 25 Feb 2022 15:22:36 +0800</pubDate>
      
      <guid>https://geek.zshipu.com/post/nextjs/nextjsbase/Next.js%E5%AD%A6%E4%B9%A0%E7%B3%BB%E5%88%97%E5%88%9B%E5%BB%BANext.js%E5%BA%94%E7%94%A83/</guid>
      <description>欢迎来到 Next.js 当您访问 http://localhost:3000 时，您应该会看到这样的页面。这是初学者模板页面，其中显示了有关Next.js的一些有用信息。 **可获得帮助：**如果您遇到困难，可以在GitHub讨论中联系社区。 让我们尝试接下来编辑此页面！</description>
    </item>
    
    <item>
      <title>Next.js学习系列：创建Next.js应用2</title>
      <link>https://geek.zshipu.com/post/nextjs/nextjsbase/Next.js%E5%AD%A6%E4%B9%A0%E7%B3%BB%E5%88%97%E5%88%9B%E5%BB%BANext.js%E5%BA%94%E7%94%A82/</link>
      <pubDate>Fri, 25 Feb 2022 15:19:10 +0800</pubDate>
      
      <guid>https://geek.zshipu.com/post/nextjs/nextjsbase/Next.js%E5%AD%A6%E4%B9%A0%E7%B3%BB%E5%88%97%E5%88%9B%E5%BB%BANext.js%E5%BA%94%E7%94%A82/</guid>
      <description>设置 首先，让我们确保您的开发环境已准备就绪。 如果您没有安装 Node.js，请从此处安装它。您需要 Node.js版本 10.13 或更高版本。 在本教程中，你将使用自己的文本编辑器和终端应用。 如果您使用的是 Windows，我们建议您下载 Git for Windows 并使用随附的 Git Bash，它支持本教程中特定于 UNIX 的命令。</description>
    </item>
    
    <item>
      <title>Next.js学习系列：创建Next.js应用</title>
      <link>https://geek.zshipu.com/post/nextjs/nextjsbase/Next.js%E5%AD%A6%E4%B9%A0%E7%B3%BB%E5%88%97%E5%88%9B%E5%BB%BANext.js%E5%BA%94%E7%94%A8/</link>
      <pubDate>Fri, 25 Feb 2022 15:12:33 +0800</pubDate>
      
      <guid>https://geek.zshipu.com/post/nextjs/nextjsbase/Next.js%E5%AD%A6%E4%B9%A0%E7%B3%BB%E5%88%97%E5%88%9B%E5%BB%BANext.js%E5%BA%94%E7%94%A8/</guid>
      <description>要使用 React 从头开始构建一个完整的 Web 应用程序，您需要考虑许多重要的细节： 代码必须使用像webpack这样的捆绑器捆绑在一起，并使用像Babel这样的编译器进行转换。 您需要执行生产优化，例如代码拆分。 您可能希望静态预呈现某些页面以提高性能和 SEO。您可能还希望使用服务器端呈现或客户端呈</description>
    </item>
    
  </channel>
</rss>
