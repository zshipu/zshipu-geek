<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>remote on 知识铺的博客</title>
    <link>https://geek.zshipu.com/tags/remote/</link>
    <description>Recent content in remote on 知识铺的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Wed, 06 Mar 2024 10:48:00 +0000</lastBuildDate>
    <atom:link href="https://geek.zshipu.com/tags/remote/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>基于Netty实现远程通信</title>
      <link>https://geek.zshipu.com/post/code/docs/Dubbo/remote/%E5%9F%BA%E4%BA%8ENetty%E5%AE%9E%E7%8E%B0%E8%BF%9C%E7%A8%8B%E9%80%9A%E4%BF%A1/</link>
      <pubDate>Wed, 06 Mar 2024 10:48:00 +0000</pubDate>
      <guid>https://geek.zshipu.com/post/code/docs/Dubbo/remote/%E5%9F%BA%E4%BA%8ENetty%E5%AE%9E%E7%8E%B0%E8%BF%9C%E7%A8%8B%E9%80%9A%E4%BF%A1/</guid>
      <description>Dubbo Remote 支持多种传输协议，其中之一就是基于 Netty 的远程通信。在 Dubbo Remote 中，基于 Netty 的远程通信是通过 NettyServer 和 NettyClient 两个实现类来完成的。 以下是 Dubbo Remote 中基于 Netty 的远程通信的工作原理： 服务提供方在启动时创建 NettyServer 对象，并绑定到指定的端口上。 服务提供方在 NettyServer 上注册服务处理器，用于处理客户端的请求。 服务消费方在调用服务时创</description>
    </item>
    <item>
      <title>基于HTTP实现远程通信</title>
      <link>https://geek.zshipu.com/post/code/docs/Dubbo/remote/%E5%9F%BA%E4%BA%8EHTTP%E5%AE%9E%E7%8E%B0%E8%BF%9C%E7%A8%8B%E9%80%9A%E4%BF%A1/</link>
      <pubDate>Wed, 06 Mar 2024 10:47:00 +0000</pubDate>
      <guid>https://geek.zshipu.com/post/code/docs/Dubbo/remote/%E5%9F%BA%E4%BA%8EHTTP%E5%AE%9E%E7%8E%B0%E8%BF%9C%E7%A8%8B%E9%80%9A%E4%BF%A1/</guid>
      <description>Dubbo Remote 支持多种传输协议，其中之一就是基于 HTTP 的远程通信。在 Dubbo Remote 中，基于 HTTP 的远程通信是通过 HttpServer 和 HttpClient 两个实现类来完成的。 以下是 Dubbo Remote 中基于 HTTP 的远程通信的工作原理： 服务提供方在启动时创建 HttpServer 对象，并绑定到指定的端口上。 服务提供方在 HttpServer 上注册服务处理器，用于处理客户端的请求。 服务消费方在调用服务时创</description>
    </item>
    <item>
      <title>Transport组件</title>
      <link>https://geek.zshipu.com/post/code/docs/Dubbo/remote/Transport%E7%BB%84%E4%BB%B6/</link>
      <pubDate>Wed, 06 Mar 2024 10:46:00 +0000</pubDate>
      <guid>https://geek.zshipu.com/post/code/docs/Dubbo/remote/Transport%E7%BB%84%E4%BB%B6/</guid>
      <description>Dubbo Remote Transport 是 Dubbo 远程通信的基础组件，它提供了基于各种传输协议的通信能力，如 TCP、HTTP 等。Dubbo Remote Transport 的主要作用是负责建立和维护客户端和服务端之间的连接，并进行数据的发送和接收。 Dubbo Remote Transport 的核心接口是 Transporter，它定义了传输协议需要实现的方法，包括创建服务器、连接客户端和</description>
    </item>
    <item>
      <title>Exchange组件</title>
      <link>https://geek.zshipu.com/post/code/docs/Dubbo/remote/Exchange%E7%BB%84%E4%BB%B6/</link>
      <pubDate>Wed, 06 Mar 2024 10:45:00 +0000</pubDate>
      <guid>https://geek.zshipu.com/post/code/docs/Dubbo/remote/Exchange%E7%BB%84%E4%BB%B6/</guid>
      <description>Exchange组件 Dubbo Remote Exchange 是一个基于 Dubbo 框架的远程通信组件，它提供了一系列的远程通信协议和序列化协议，用于实现微服务之间的通信和数据交换。 Dubbo Remote Exchange 支持多种通信协议，包括 Dubbo 协议、HTTP 协议、WebSocket 协议等，用户可以根据自己的需求选择不同的协议进行通信。同时，Dubbo Remote Exchange 还</description>
    </item>
    <item>
      <title>Dubbo远程通信模块简析</title>
      <link>https://geek.zshipu.com/post/code/docs/Dubbo/remote/Dubbo%E8%BF%9C%E7%A8%8B%E9%80%9A%E4%BF%A1%E6%A8%A1%E5%9D%97%E7%AE%80%E6%9E%90/</link>
      <pubDate>Wed, 06 Mar 2024 10:44:00 +0000</pubDate>
      <guid>https://geek.zshipu.com/post/code/docs/Dubbo/remote/Dubbo%E8%BF%9C%E7%A8%8B%E9%80%9A%E4%BF%A1%E6%A8%A1%E5%9D%97%E7%AE%80%E6%9E%90/</guid>
      <description>dubbo-remoting 模块整体结构设计 服务治理框架 大致可分为 “服务通信” 和 “服务管理” 两部分，前面我们分析了有关注册中心的源码，也就是服务管理，接下来要分析的就是跟服务通信有关的源码，也就是远程通讯模块。该模块中提供了多种客户端和服务端通信的功能，而在对 NIO 框架选型上，dubbo 交由用户选择，它集成了</description>
    </item>
    <item>
      <title>Buffer组件</title>
      <link>https://geek.zshipu.com/post/code/docs/Dubbo/remote/Buffer%E7%BB%84%E4%BB%B6/</link>
      <pubDate>Wed, 06 Mar 2024 10:43:00 +0000</pubDate>
      <guid>https://geek.zshipu.com/post/code/docs/Dubbo/remote/Buffer%E7%BB%84%E4%BB%B6/</guid>
      <description>Buffer 序列化和反序列化 Dubbo 是一个高性能、轻量级的开源 Java RPC 框架，它提供了许多组件来帮助开发者实现分布式服务调用。其中，Dubbo 的远程通信模块使用了 Netty 作为网络通信框架，而 Netty 中的 Buffer 组件则是 Dubbo 远程通信中非常重要的一个部分。 在 Dubbo 中，Buffer 组件主要用于数据的序列化和反序列化。当客户端发送请</description>
    </item>
  </channel>
</rss>
