<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>message on 知识铺的博客</title>
    <link>https://geek.zshipu.com/tags/message/</link>
    <description>Recent content in message on 知识铺的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Wed, 06 Mar 2024 13:26:00 +0000</lastBuildDate>
    <atom:link href="https://geek.zshipu.com/tags/message/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Spring-MessageConverter</title>
      <link>https://geek.zshipu.com/post/code/docs/Spring/message/Spring-MessageConverter/</link>
      <pubDate>Wed, 06 Mar 2024 13:26:00 +0000</pubDate>
      <guid>https://geek.zshipu.com/post/code/docs/Spring/message/Spring-MessageConverter/</guid>
      <description>Spring MessageConverter Author: HuiFer 源码阅读仓库: SourceHot-spring 源码路径: org.springframework.messaging.converter.MessageConverter MessageConverter 消息转换接口 类图如下 两个方法 fromMessage: 从消息转换到 Object 1 Object fromMessage(Message&amp;lt;?&amp;gt; message, Class&amp;lt;?&amp;gt; targetClass); toMessage: 从 Object 转换到消息 1 Message&amp;lt;?&amp;gt; toMessage(Object payload, @Nullable MessageHeaders headers); 序号 class 作用 1 ByteArrayMessageConverter byte 数组消息转换器 2 MappingJackson2MessageConverter jackson2 的消息转换器 3 MarshallingMessageConverter xml 的消息转换器 4 StringMessageConverter 字符串消息转换器 AbstractMessageConverter 类图: fromMessage 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 @Override @Nullable public final Object fromMessage(Message&amp;lt;?&amp;gt; message,</description>
    </item>
    <item>
      <title>Spring-JmsTemplate</title>
      <link>https://geek.zshipu.com/post/code/docs/Spring/message/Spring-JmsTemplate/</link>
      <pubDate>Wed, 06 Mar 2024 13:25:00 +0000</pubDate>
      <guid>https://geek.zshipu.com/post/code/docs/Spring/message/Spring-JmsTemplate/</guid>
      <description>Spring JmsTemplate Author: HuiFer 源码阅读仓库: SourceHot-spring 源码路径: org.springframework.jms.core.JmsTemplate 源码分析 send 发送消息 1 2 3 4 5 6 7 8 9 @Override public void send(final String destinationName, final MessageCreator messageCreator) throws JmsException { // 执行. execute(session -&amp;gt; { Destination destination = resolveDestinationName(session, destinationName); doSend(session, destination, messageCreator); return null; }, false); } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 @Nullable public &amp;lt;T&amp;gt; T execute(SessionCallback&amp;lt;T&amp;gt; action, boolean startConnection) throws JmsException { Assert.notNull(action, &amp;#34;Callback object must not be null&amp;#34;); Connection conToClose = null; Session sessionToClose = null; try { Session sessionToUse = ConnectionFactoryUtils.doGetTransactionalSession( obtainConnectionFactory(), this.transactionalResourceFactory, startConnection); if (sessionToUse ==</description>
    </item>
    <item>
      <title>Spring-EnableJms</title>
      <link>https://geek.zshipu.com/post/code/docs/Spring/message/Spring-EnableJms/</link>
      <pubDate>Wed, 06 Mar 2024 13:24:00 +0000</pubDate>
      <guid>https://geek.zshipu.com/post/code/docs/Spring/message/Spring-EnableJms/</guid>
      <description>Spring EnableJms 注解 Author: HuiFer 源码阅读仓库: SourceHot-spring 源码路径: org.springframework.jms.annotation.EnableJms 源码分析 1 2 3 4 5 6 @Target(ElementType.TYPE) @Retention(RetentionPolicy.RUNTIME) @Documented @Import(JmsBootstrapConfiguration.class) public @interface EnableJms { } 该类的切入点在@Import(JmsBootstrapConfiguration.class) , 直接看JmsBootstrapConfiguration就可以了 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21</description>
    </item>
  </channel>
</rss>
