<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>python on 知识铺的博客</title>
    <link>https://geek.zshipu.com/tags/python/</link>
    <description>Recent content in python on 知识铺的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sun, 25 Oct 2020 16:31:24 +0800</lastBuildDate><atom:link href="https://geek.zshipu.com/tags/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Python基础：Python tuples</title>
      <link>https://geek.zshipu.com/post/Python%E5%9F%BA%E7%A1%80Python-tuples/</link>
      <pubDate>Sun, 25 Oct 2020 16:31:24 +0800</pubDate>
      
      <guid>https://geek.zshipu.com/post/Python%E5%9F%BA%E7%A1%80Python-tuples/</guid>
      <description>Python tuples tuples tuples组是有序且不可更改的集合。在 Python tuples对中，用圆形括号书写。 例子 创建tuples组： thistuple = (&amp;quot;apple&amp;quot;, &amp;quot;banana&amp;quot;, &amp;quot;cherry&amp;quot;) print(thistuple) 访问tuples组项目 您可以通过引用方括号内的索引号来访问tuples组项： 例子 打印tuples组中的第二个项目： thistuple = (&amp;quot;apple&amp;quot;, &amp;quot;banana&amp;quot;, &amp;quot;cherry&amp;quot;) print(thistuple[1]) 负索引 负索引表示从末尾开始，指最后一</description>
    </item>
    
    <item>
      <title>Python基础：Python列表</title>
      <link>https://geek.zshipu.com/post/Python%E5%9F%BA%E7%A1%80Python%E5%88%97%E8%A1%A8/</link>
      <pubDate>Sun, 25 Oct 2020 16:28:55 +0800</pubDate>
      
      <guid>https://geek.zshipu.com/post/Python%E5%9F%BA%E7%A1%80Python%E5%88%97%E8%A1%A8/</guid>
      <description>Python列表 Python 集合（数组） Python 编程语言有四种集合数据类型： 列表是一个有序且可更改的集合。允许重复的成员。 元组是一个有序且不可更改的集合。允许重复的成员。 Set是无序和未编制索引的集合。没有重复的成员。 字典是无序、可更改和索引的集合。没有重复的成员。 选择集合类型时，了解该类型的属</description>
    </item>
    
    <item>
      <title>Python基础：Python运算符</title>
      <link>https://geek.zshipu.com/post/Python%E5%9F%BA%E7%A1%80Python%E8%BF%90%E7%AE%97%E7%AC%A6/</link>
      <pubDate>Sun, 25 Oct 2020 15:53:03 +0800</pubDate>
      
      <guid>https://geek.zshipu.com/post/Python%E5%9F%BA%E7%A1%80Python%E8%BF%90%E7%AE%97%E7%AC%A6/</guid>
      <description>Python运算符 Python 运算符 运算符用于对变量和值执行操作。 Python 将运算符分为以下组： 算术运算符 分配运算符 比较运算符 逻辑运算符 标识运算符 会员运算符 位运算符 Python 算术运算符 算术运算符与数值一起使用，以执行常见的数学运算： | Operator | Name | Example | | + | Addition | x + y | | - | Subtraction | x - y | | * | Multiplication | x * y | | / |</description>
    </item>
    
    <item>
      <title>Python基础：Python 布尔</title>
      <link>https://geek.zshipu.com/post/Python%E5%9F%BA%E7%A1%80Python-%E5%B8%83%E5%B0%94/</link>
      <pubDate>Sun, 25 Oct 2020 14:44:34 +0800</pubDate>
      
      <guid>https://geek.zshipu.com/post/Python%E5%9F%BA%E7%A1%80Python-%E5%B8%83%E5%B0%94/</guid>
      <description>Python 布尔 布尔表示两个值之一： 或 。True``````False 布尔值 在编程中，您经常需要知道表达式是 或 。True``````False 您可以计算 Python 中的任何表达式，并获取两个答案之一，或 。True``````False 比较两个值时，将计算表达式，Python 返回布尔答案： 例子 print(10 &amp;gt; 9) print(10</description>
    </item>
    
    <item>
      <title>Python基础：Python字符串</title>
      <link>https://geek.zshipu.com/post/Python%E5%9F%BA%E7%A1%80Python%E5%AD%97%E7%AC%A6%E4%B8%B2/</link>
      <pubDate>Sun, 25 Oct 2020 14:42:57 +0800</pubDate>
      
      <guid>https://geek.zshipu.com/post/Python%E5%9F%BA%E7%A1%80Python%E5%AD%97%E7%AC%A6%E4%B8%B2/</guid>
      <description>Python字符串 字符串 python 中的字符串文本由单个引号或双引号包围。 &amp;ldquo;你好&amp;quot;和&amp;rsquo;你好&amp;rsquo;是一样的。 您可以使用 以下函数显示字符串文本：print() 例子 print(&amp;quot;Hello&amp;quot;) print(&#39;Hello&#39;) 将字符串分配给变量 将字符串分配给变量使用变量名称后跟一个等号和字符串完成： 例子 a = &amp;quot;Hello&amp;quot; print(a)</description>
    </item>
    
    <item>
      <title>Python基础：Python强转</title>
      <link>https://geek.zshipu.com/post/Python%E5%9F%BA%E7%A1%80Python%E5%BC%BA%E8%BD%AC/</link>
      <pubDate>Sun, 25 Oct 2020 14:39:17 +0800</pubDate>
      
      <guid>https://geek.zshipu.com/post/Python%E5%9F%BA%E7%A1%80Python%E5%BC%BA%E8%BD%AC/</guid>
      <description>Python强转 指定变量类型 有时可能需要为变量指定类型。这可以通过强转完成。Python 是一种面向对象的语言，因此它使用类来定义数据类型，包括其基元类型。 因此，使用构造函数在 python 中强制转换： int（） - 从整数文本、浮数字（通过向下舍入到上一个整数）或字符串文本（提供字符串表示整数）</description>
    </item>
    
    <item>
      <title>Python基础：Python Numbers</title>
      <link>https://geek.zshipu.com/post/Python%E5%9F%BA%E7%A1%80Python-Numbers/</link>
      <pubDate>Sun, 25 Oct 2020 14:36:11 +0800</pubDate>
      
      <guid>https://geek.zshipu.com/post/Python%E5%9F%BA%E7%A1%80Python-Numbers/</guid>
      <description>Python Numbers Python Numbers Python 中有三种数字类型： int float complex 向数值分配值时，将创建数值类型的变量： 例子 x = 1 # int y = 2.8 # float z = 1j # complex 若要验证 Python 中任何对象的类型，请使用 以下函数：type() 例子 print(type(x)) print(type(y)) print(type(z)) Int int 或整数是长度无限的整数，正数或负数。没有小数。 例子 整数： x = 1 y = 35656222554887711 z = -3255522 print(type(x)) print(type(y)) print(type(z)) Float 浮动或&amp;quot;浮点</description>
    </item>
    
    <item>
      <title>Python基础：Python数据类型</title>
      <link>https://geek.zshipu.com/post/Python%E5%9F%BA%E7%A1%80Python%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</link>
      <pubDate>Sun, 25 Oct 2020 14:34:10 +0800</pubDate>
      
      <guid>https://geek.zshipu.com/post/Python%E5%9F%BA%E7%A1%80Python%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</guid>
      <description>Python数据类型 内置数据类型 在编程中，数据类型是一个重要的概念。 变量可以存储不同类型的数据，不同类型的变量可以处理不同的事情。 默认情况下，Python 具有以下内置的数据类型，这些类别： | 文本类型： | str | | 数字类型： | int, ,float``````complex | | 序列类型： | list, ,tuple``````range | | 映射类型： | dict | | 设置类型： | set,frozenset</description>
    </item>
    
    <item>
      <title>Python基础：Python变量</title>
      <link>https://geek.zshipu.com/post/Python%E5%9F%BA%E7%A1%80Python%E5%8F%98%E9%87%8F/</link>
      <pubDate>Sun, 25 Oct 2020 14:32:32 +0800</pubDate>
      
      <guid>https://geek.zshipu.com/post/Python%E5%9F%BA%E7%A1%80Python%E5%8F%98%E9%87%8F/</guid>
      <description>Python变量 创建变量 变量是用于存储数据值的容器。 与其他编程语言不同，Python 没有声明变量的命令。 变量在您首次为其分配值时创建。 例子 x = 5 y = &amp;quot;John&amp;quot; print(x) print(y) 变量不需要用任何特定类型声明_，_甚至可以在设置后更改类型。 例子 x = 4 # x is of type int x = &amp;quot;Sally&amp;quot; # x is now of type str print(x) 可以使用单引号或双引号</description>
    </item>
    
    <item>
      <title>Python基础：Python注释</title>
      <link>https://geek.zshipu.com/post/Python%E5%9F%BA%E7%A1%80Python%E6%B3%A8%E9%87%8A/</link>
      <pubDate>Sun, 25 Oct 2020 14:29:22 +0800</pubDate>
      
      <guid>https://geek.zshipu.com/post/Python%E5%9F%BA%E7%A1%80Python%E6%B3%A8%E9%87%8A/</guid>
      <description>Python注释 注释可用于解释 Python 代码。 注释可用于使代码更具可读性。 注释可用于在测试代码时阻止执行。 创建注释 注释以 开头，Python 将忽略它们：# 例子 #This is a comment print(&amp;quot;Hello, World!&amp;quot;) 注释可以放在行的末尾，Python 将忽略行的其余部分： 例子 print(&amp;quot;Hello, World!&amp;quot;) #This is a comment 注释不必是文本来解释代码，它也可以用来防止 Python 执行代</description>
    </item>
    
    <item>
      <title>Python基础：Python语法</title>
      <link>https://geek.zshipu.com/post/Python%E5%9F%BA%E7%A1%80Python%E8%AF%AD%E6%B3%95/</link>
      <pubDate>Sun, 25 Oct 2020 14:27:46 +0800</pubDate>
      
      <guid>https://geek.zshipu.com/post/Python%E5%9F%BA%E7%A1%80Python%E8%AF%AD%E6%B3%95/</guid>
      <description>Python语法 执行 Python 语法 Python 缩进 Python 变量 Python 注释 练习 执行 Python 语法 正如我们在上一页中学到的，Python 语法可以通过直接在命令行中写入来执行： &amp;gt;&amp;gt;&amp;gt; print(&amp;quot;Hello, World!&amp;quot;) Hello, World! 或者，在服务器上创建 python 文件，使用 .py 文件扩展名，并在命令行中运行该文件： C:\Users\_Your Name_&amp;gt;python myfile.py Python 缩进 缩进是指代码行开头的空格。 在其他编程语言中，代码中的缩</description>
    </item>
    
    <item>
      <title>Python基础：Python 入门</title>
      <link>https://geek.zshipu.com/post/Python%E5%9F%BA%E7%A1%80Python-%E5%85%A5%E9%97%A8/</link>
      <pubDate>Sun, 25 Oct 2020 14:25:39 +0800</pubDate>
      
      <guid>https://geek.zshipu.com/post/Python%E5%9F%BA%E7%A1%80Python-%E5%85%A5%E9%97%A8/</guid>
      <description>Python 入门 Python 安装 许多 PC 和 Mac 将安装 python。 要检查是否安装了 Python 在 Windows PC 上，请在开始栏中搜索 Python 或在命令行 （cmd.exe） 上运行以下内容： C:\Users\_Your Name_&amp;gt;python --version 要检查您是否在 Linux 或 Mac 上安装了 python，然后在 linux 上打开命令行或在 Mac 上打开终端并键入： python --version 如果您发现您的计算机上没有安装 python，那么您可</description>
    </item>
    
    <item>
      <title>Python基础：Python 语法</title>
      <link>https://geek.zshipu.com/post/Python%E5%9F%BA%E7%A1%80Python-%E8%AF%AD%E6%B3%95/</link>
      <pubDate>Sun, 25 Oct 2020 14:02:27 +0800</pubDate>
      
      <guid>https://geek.zshipu.com/post/Python%E5%9F%BA%E7%A1%80Python-%E8%AF%AD%E6%B3%95/</guid>
      <description>Python 语法 与其他编程语言相比，Python 语法 Python 旨在实现可读性，与受数学影响的英语有一些相似之处。 Python 使用新行来完成命令，而不是经常使用分号或括号的其他编程语言。 Python 依靠缩进，使用空格来定义范围;例如循环、函数和类的范围。其他编程语言通常使用大括号来用于此目的。 Python 缩进 在其他编程语言中，代</description>
    </item>
    
    <item>
      <title>Python基础：什么是 Python</title>
      <link>https://geek.zshipu.com/post/Python%E5%9F%BA%E7%A1%80%E4%BB%80%E4%B9%88%E6%98%AF-Python/</link>
      <pubDate>Sun, 25 Oct 2020 13:50:05 +0800</pubDate>
      
      <guid>https://geek.zshipu.com/post/Python%E5%9F%BA%E7%A1%80%E4%BB%80%E4%B9%88%E6%98%AF-Python/</guid>
      <description>什么是 Python Python 是一种流行的编程语言。它由吉多·范·罗森于1991年创建。 Python 是一种易于学习、功能强大的编程语言。它有高效的高级数据结构，以及一种简单而有效的面向对象的编程方法。Python 优雅的语法和动态类型，加上其解释性，使其成为大多数平台上许多领域脚本编写和快速应用程序开发的理想语</description>
    </item>
    
  </channel>
</rss>
