<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tomcat on 知识铺的博客</title>
    <link>https://geek.zshipu.com/tags/Tomcat/</link>
    <description>Recent content in Tomcat on 知识铺的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Wed, 06 Mar 2024 13:45:00 +0000</lastBuildDate>
    <atom:link href="https://geek.zshipu.com/tags/Tomcat/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>一个简单的servlet容器代码设计</title>
      <link>https://geek.zshipu.com/post/code/docs/Tomcat/%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84servlet%E5%AE%B9%E5%99%A8%E4%BB%A3%E7%A0%81%E8%AE%BE%E8%AE%A1/</link>
      <pubDate>Wed, 06 Mar 2024 13:45:00 +0000</pubDate>
      <guid>https://geek.zshipu.com/post/code/docs/Tomcat/%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84servlet%E5%AE%B9%E5%99%A8%E4%BB%A3%E7%A0%81%E8%AE%BE%E8%AE%A1/</guid>
      <description>一个简单的 Servlet 容器代码设计 Servlet 算是 Java Web 开发请求链路调用栈中底层的一个技术，当客户端发起一个请求后，到达服务器内部，就会先进入 Servlet（这里不讨论更底层的链路），SpringMVC 的请求分发核心也是一个 Servlet，名叫DispatcherServlet，一个请求首先会进入到这</description>
    </item>
    <item>
      <title>一个简单的Web服务器代码设计</title>
      <link>https://geek.zshipu.com/post/code/docs/Tomcat/%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84Web%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BB%A3%E7%A0%81%E8%AE%BE%E8%AE%A1/</link>
      <pubDate>Wed, 06 Mar 2024 13:44:00 +0000</pubDate>
      <guid>https://geek.zshipu.com/post/code/docs/Tomcat/%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84Web%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BB%A3%E7%A0%81%E8%AE%BE%E8%AE%A1/</guid>
      <description>一个简单的 Web 服务器代码设计 在这篇博客中，我们将介绍如何使用 Java 编写一个简单的 Web 服务器。这个 Web 服务器可以接收客户端的 HTTP 请求，并返回一个静态的 HTML 页面。 1. 代码设计 首先，我们需要创建一个 WebServer 类，这个类将负责接收客户端的请求，并返回响应。以下是 WebServer 类的代码： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19</description>
    </item>
    <item>
      <title>servlet容器详解</title>
      <link>https://geek.zshipu.com/post/code/docs/Tomcat/servlet%E5%AE%B9%E5%99%A8%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Wed, 06 Mar 2024 13:43:00 +0000</pubDate>
      <guid>https://geek.zshipu.com/post/code/docs/Tomcat/servlet%E5%AE%B9%E5%99%A8%E8%AF%A6%E8%A7%A3/</guid>
      <description>Servlet 容器详解 Servlet 容器是 Java Web 应用程序的核心组件之一。它负责管理 Servlet 的生命周期、请求分发、会话跟踪等任务。在这篇博客中，我们将详细介绍 Servlet 容器的工作原理和常见实现。 1. Servlet 容器的工作原理 Servlet 容器的工作原理如下： 接收客户端请求：Servlet 容器监听一个或多个端口，等待客户端的请求。 解析请求：Ser</description>
    </item>
    <item>
      <title>servlet-api源码赏析</title>
      <link>https://geek.zshipu.com/post/code/docs/Tomcat/servlet-api%E6%BA%90%E7%A0%81%E8%B5%8F%E6%9E%90/</link>
      <pubDate>Wed, 06 Mar 2024 13:42:00 +0000</pubDate>
      <guid>https://geek.zshipu.com/post/code/docs/Tomcat/servlet-api%E6%BA%90%E7%A0%81%E8%B5%8F%E6%9E%90/</guid>
      <description>Servlet 基础 Servlet 简介 Servlet（Server Applet）是 J2EE 的内容之一，由 Java 编写的服务器端小程序。它是 web 请求的入口，主要功能在于交互式地（Request 和 Response）浏览和修改数据，生成动态 Web 内容。Servlet 运行于支持 Servlet 的 WEB 容器中，如 Tomcat。从实现上讲，Servle</description>
    </item>
  </channel>
</rss>
