<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>nexp on 知识铺的博客</title>
    <link>https://geek.zshipu.com/tags/nexp/</link>
    <description>Recent content in nexp on 知识铺的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sat, 21 May 2022 10:05:00 +0800</lastBuildDate><atom:link href="https://geek.zshipu.com/tags/nexp/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>nexp-level-001 06 添加组件级 CSS</title>
      <link>https://geek.zshipu.com/post/nexp/level001/nexp-level-001-06-%E6%B7%BB%E5%8A%A0%E7%BB%84%E4%BB%B6%E7%BA%A7-CSS/</link>
      <pubDate>Sat, 21 May 2022 10:05:00 +0800</pubDate>
      
      <guid>https://geek.zshipu.com/post/nexp/level001/nexp-level-001-06-%E6%B7%BB%E5%8A%A0%E7%BB%84%E4%BB%B6%E7%BA%A7-CSS/</guid>
      <description>Next.js 通过 [name].module.css 文件命名约定来支持 CSS 模块 。 CSS 模块通过自动创建唯一的类名从而将 CSS 限定在局部范围内。 这使您可以在不同文件中使用相同的 CSS 类名，而不必担心冲突。 此行为使 CSS 模块成为包含组件级 CSS 的理想方法。 CSS 模块文件 可以导入（import）到应用程序中的任何位置。 例如，假设 components/ 目录下有一个可重用 Button 组件</description>
    </item>
    
    <item>
      <title>nexp-level-001 05 学习 Next.js  使用共享组件</title>
      <link>https://geek.zshipu.com/post/nexp/level001/nexp-level-001-05-%E5%AD%A6%E4%B9%A0-Next.js-%E4%BD%BF%E7%94%A8%E5%85%B1%E4%BA%AB%E7%BB%84%E4%BB%B6/</link>
      <pubDate>Sat, 21 May 2022 10:04:00 +0800</pubDate>
      
      <guid>https://geek.zshipu.com/post/nexp/level001/nexp-level-001-05-%E5%AD%A6%E4%B9%A0-Next.js-%E4%BD%BF%E7%94%A8%E5%85%B1%E4%BA%AB%E7%BB%84%E4%BB%B6/</guid>
      <description>使用共享组件 我们知道 Next.js 是和页面相关的. 通过导出一个 React组件创建一个页面, 然后把它放到 pages 目录中, 基于这个文件名, Next.js存在一个固定的URL. 因为导出的页面是Javascript模块, 我们当然也能够导入其他组件进来. 在这节课中, 我们会创建一个共享的页头组件, 并在多个页面</description>
    </item>
    
    <item>
      <title>nexp-level-001 04 Next 的最佳样式选项</title>
      <link>https://geek.zshipu.com/post/nexp/level001/nexp-level-001-04-Next-%E7%9A%84%E6%9C%80%E4%BD%B3%E6%A0%B7%E5%BC%8F%E9%80%89%E9%A1%B9/</link>
      <pubDate>Sat, 21 May 2022 10:03:00 +0800</pubDate>
      
      <guid>https://geek.zshipu.com/post/nexp/level001/nexp-level-001-04-Next-%E7%9A%84%E6%9C%80%E4%BD%B3%E6%A0%B7%E5%BC%8F%E9%80%89%E9%A1%B9/</guid>
      <description>鲜为人知的是，Next.js提供了许多在应用程序中支持CSS的方法。无论你喜欢实用程序CSS及其类还是更喜欢CSS-in-JS，Next.js都能满足您的需求。在本教程中，您将发现在 Next.js 应用程序中实现样式设置的几种方法。让我们实现一个样式文本，当用户将其悬停在一起时，该文本将变为红</description>
    </item>
    
    <item>
      <title>nexp-level-001 03 服务器端渲染与客户端渲染</title>
      <link>https://geek.zshipu.com/post/nexp/level001/nexp-level-001-03-%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AB%AF%E6%B8%B2%E6%9F%93%E4%B8%8E%E5%AE%A2%E6%88%B7%E7%AB%AF%E6%B8%B2%E6%9F%93/</link>
      <pubDate>Sat, 21 May 2022 10:02:00 +0800</pubDate>
      
      <guid>https://geek.zshipu.com/post/nexp/level001/nexp-level-001-03-%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AB%AF%E6%B8%B2%E6%9F%93%E4%B8%8E%E5%AE%A2%E6%88%B7%E7%AB%AF%E6%B8%B2%E6%9F%93/</guid>
      <description>最近在准备技术面试时，我偶然发现了服务器端渲染 (SSR) 和客户端渲染 (CSR) 的概念，我并不清楚它的含义，也不知道它们之间的区别是什么两种方法。 在我的研究中，我意识到在选择在您的网站上实施哪种方法时，这不是一个简单的决定。出于所有这些原因，我决定写一篇关于什么是 SSR 和 SCR 以及它们的优缺点的博文。 长期</description>
    </item>
    
    <item>
      <title>nexp-level-001 02 Next.js 与 React：差异和最佳前端框架</title>
      <link>https://geek.zshipu.com/post/nexp/level001/nexp-level-001-02-Next.js-%E4%B8%8E-React%E5%B7%AE%E5%BC%82%E5%92%8C%E6%9C%80%E4%BD%B3%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6/</link>
      <pubDate>Sat, 21 May 2022 10:01:00 +0800</pubDate>
      
      <guid>https://geek.zshipu.com/post/nexp/level001/nexp-level-001-02-Next.js-%E4%B8%8E-React%E5%B7%AE%E5%BC%82%E5%92%8C%E6%9C%80%E4%BD%B3%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6/</guid>
      <description>随着每年都有新的 JavaScript 框架和库出现，很难跟上不断变化的 JS 生态系统的步伐。 但即使在JavaScript 框架和库的汪洋大海中，React 和 Next.js 也能脱颖而出。React 是最受前端开发人员欢迎的 JavaScript 库。Next.js 虽然比 React 小，但多年来一直在稳步增长，并有望成为最常用的 JavaScript 框架。 React 的 UI 库非常健壮，</description>
    </item>
    
    <item>
      <title>nexp-level-001 01 Next.js 功能及介绍</title>
      <link>https://geek.zshipu.com/post/nexp/level001/nexp-level-001-01-Next.js-%E5%8A%9F%E8%83%BD%E5%8F%8A%E4%BB%8B%E7%BB%8D/</link>
      <pubDate>Sat, 21 May 2022 10:00:00 +0800</pubDate>
      
      <guid>https://geek.zshipu.com/post/nexp/level001/nexp-level-001-01-Next.js-%E5%8A%9F%E8%83%BD%E5%8F%8A%E4%BB%8B%E7%BB%8D/</guid>
      <description>介绍 在设定一个 React 项目时候，通常会使用 create-React-app 这个套件来快速产出开发样板环境，而另外一个选择 Next.js 则包好了许多功能，例如Server Side Render （SSR），Webpack，Router&amp;hellip;. 不需要额外再多花时间在设定方面，但同时又有弹性可以扩充，非常的快速可以马上开发项目，在使用next</description>
    </item>
    
  </channel>
</rss>
