<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>零拷贝 on 知识铺的博客</title>
    <link>https://geek.zshipu.com/tags/%E9%9B%B6%E6%8B%B7%E8%B4%9D/</link>
    <description>Recent content in 零拷贝 on 知识铺的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Tue, 15 Mar 2022 09:08:39 +0800</lastBuildDate>
    <atom:link href="https://geek.zshipu.com/tags/%E9%9B%B6%E6%8B%B7%E8%B4%9D/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>程序员必知必会的零拷贝技术</title>
      <link>https://geek.zshipu.com/post/%E4%BA%92%E8%81%94%E7%BD%91/%E7%A8%8B%E5%BA%8F%E5%91%98%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A%E7%9A%84%E9%9B%B6%E6%8B%B7%E8%B4%9D%E6%8A%80%E6%9C%AF/</link>
      <pubDate>Tue, 15 Mar 2022 09:08:39 +0800</pubDate>
      <guid>https://geek.zshipu.com/post/%E4%BA%92%E8%81%94%E7%BD%91/%E7%A8%8B%E5%BA%8F%E5%91%98%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A%E7%9A%84%E9%9B%B6%E6%8B%B7%E8%B4%9D%E6%8A%80%E6%9C%AF/</guid>
      <description>写在前面 本篇文章我们学习Linux IO中的零拷贝技术，最后的参考链接中介绍的非常好，大家都可以看一下 传统IO过程 考虑这样一个过程：我们从磁盘中读取一个文件数据，然后将数据通过网络传输到另一个机器。对用户来说可能就是简单的理解为两步操作。 File.read(fileDesc, buf, len); Socket.send(socket, buf, len); 但是，如果我们看传输中涉及的内核</description>
    </item>
    <item>
      <title>原理和技术全面揭秘</title>
      <link>https://geek.zshipu.com/post/%E4%BA%92%E8%81%94%E7%BD%91/%E5%8E%9F%E7%90%86%E5%92%8C%E6%8A%80%E6%9C%AF%E5%85%A8%E9%9D%A2%E6%8F%AD%E7%A7%98/</link>
      <pubDate>Tue, 15 Mar 2022 09:05:23 +0800</pubDate>
      <guid>https://geek.zshipu.com/post/%E4%BA%92%E8%81%94%E7%BD%91/%E5%8E%9F%E7%90%86%E5%92%8C%E6%8A%80%E6%9C%AF%E5%85%A8%E9%9D%A2%E6%8F%AD%E7%A7%98/</guid>
      <description>作者：allanpan，腾讯 IEG 后台开发工程师 两万字长文从虚拟内存、I/O 缓冲区，用户态&amp;amp;内核态以及 I/O 模式等等知识点全面而又详尽地剖析 Linux 系统的 I/O 底层原理，分析了 Linux 传统的 I/O 模式的弊端，进而引入 Linux Zero-copy 零拷贝技术的介绍和原理解析，将零拷贝技术和传统的 I/O 模式进行区分和对比，帮助读者理</description>
    </item>
  </channel>
</rss>
