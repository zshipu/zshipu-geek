<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>高并发 on 知识铺的博客</title>
    <link>https://geek.zshipu.com/tags/%E9%AB%98%E5%B9%B6%E5%8F%91/</link>
    <description>Recent content in 高并发 on 知识铺的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Tue, 15 Mar 2022 11:14:58 +0800</lastBuildDate>
    <atom:link href="https://geek.zshipu.com/tags/%E9%AB%98%E5%B9%B6%E5%8F%91/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>阿里是如何应对超大规模集群资源管理挑战的</title>
      <link>https://geek.zshipu.com/post/%E4%BA%92%E8%81%94%E7%BD%91/%E9%98%BF%E9%87%8C%E6%98%AF%E5%A6%82%E4%BD%95%E5%BA%94%E5%AF%B9%E8%B6%85%E5%A4%A7%E8%A7%84%E6%A8%A1%E9%9B%86%E7%BE%A4%E8%B5%84%E6%BA%90%E7%AE%A1%E7%90%86%E6%8C%91%E6%88%98%E7%9A%84/</link>
      <pubDate>Tue, 15 Mar 2022 11:14:58 +0800</pubDate>
      <guid>https://geek.zshipu.com/post/%E4%BA%92%E8%81%94%E7%BD%91/%E9%98%BF%E9%87%8C%E6%98%AF%E5%A6%82%E4%BD%95%E5%BA%94%E5%AF%B9%E8%B6%85%E5%A4%A7%E8%A7%84%E6%A8%A1%E9%9B%86%E7%BE%A4%E8%B5%84%E6%BA%90%E7%AE%A1%E7%90%86%E6%8C%91%E6%88%98%E7%9A%84/</guid>
      <description>文章作者：丁海洋（临石） 本篇文章来自 微信公众号阿里系统软件技术： 独家解密：阿里是如何应对超大规模集群资源管理挑战的？ 欢迎原链接转发，转载请前往 @留德华叫兽 的主页获取信息，盗版必究。 敬请关注和扩散本专栏及同名公众号，会邀请 全球知名学者 陆续发布运筹学、人工智能中优化理论等相关干货、 知</description>
    </item>
    <item>
      <title>美团点评集群管理实践</title>
      <link>https://geek.zshipu.com/post/%E4%BA%92%E8%81%94%E7%BD%91/%E7%BE%8E%E5%9B%A2%E7%82%B9%E8%AF%84%E9%9B%86%E7%BE%A4%E7%AE%A1%E7%90%86%E5%AE%9E%E8%B7%B5/</link>
      <pubDate>Tue, 15 Mar 2022 10:14:15 +0800</pubDate>
      <guid>https://geek.zshipu.com/post/%E4%BA%92%E8%81%94%E7%BD%91/%E7%BE%8E%E5%9B%A2%E7%82%B9%E8%AF%84%E9%9B%86%E7%BE%A4%E7%AE%A1%E7%90%86%E5%AE%9E%E8%B7%B5/</guid>
      <description>以下文章来源于美团技术团队 ，作者国梁 背景 作为国内领先的生活服务平台，美团点评很多业务都具有非常显著、规律的“高峰”和“低谷”特征。尤其遇到节假日或促销活动，流量还会在短时间内出现爆发式的增长。这对集群中心的资源弹性和可用性有非常高的要求，同时也会使系统在支撑业务流量时的复杂度和成</description>
    </item>
    <item>
      <title>淘宝从几百到千万级并发的十四次架构演进之路</title>
      <link>https://geek.zshipu.com/post/%E4%BA%92%E8%81%94%E7%BD%91/%E6%B7%98%E5%AE%9D%E4%BB%8E%E5%87%A0%E7%99%BE%E5%88%B0%E5%8D%83%E4%B8%87%E7%BA%A7%E5%B9%B6%E5%8F%91%E7%9A%84%E5%8D%81%E5%9B%9B%E6%AC%A1%E6%9E%B6%E6%9E%84%E6%BC%94%E8%BF%9B%E4%B9%8B%E8%B7%AF/</link>
      <pubDate>Tue, 15 Mar 2022 10:02:43 +0800</pubDate>
      <guid>https://geek.zshipu.com/post/%E4%BA%92%E8%81%94%E7%BD%91/%E6%B7%98%E5%AE%9D%E4%BB%8E%E5%87%A0%E7%99%BE%E5%88%B0%E5%8D%83%E4%B8%87%E7%BA%A7%E5%B9%B6%E5%8F%91%E7%9A%84%E5%8D%81%E5%9B%9B%E6%AC%A1%E6%9E%B6%E6%9E%84%E6%BC%94%E8%BF%9B%E4%B9%8B%E8%B7%AF/</guid>
      <description>原文地址： https://segmentfault.com/a/1190000018626163 1. 概述 本文以淘宝作为例子，介绍从一百个并发到千万级并发情况下服务端的架构的演进过程，同时列举出每个演进阶段会遇到的相关技术，让大家对架构的演进有一个整体的认知，文章最后汇总了一些架构设计的原则。 2. 基本概念 在介绍架构之前，为了避免部分读者对架构设计中的一些概念不了解，下</description>
    </item>
    <item>
      <title>微服务架构之事件驱动架构</title>
      <link>https://geek.zshipu.com/post/%E4%BA%92%E8%81%94%E7%BD%91/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84%E4%B9%8B%E4%BA%8B%E4%BB%B6%E9%A9%B1%E5%8A%A8%E6%9E%B6%E6%9E%84/</link>
      <pubDate>Tue, 15 Mar 2022 10:02:13 +0800</pubDate>
      <guid>https://geek.zshipu.com/post/%E4%BA%92%E8%81%94%E7%BD%91/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84%E4%B9%8B%E4%BA%8B%E4%BB%B6%E9%A9%B1%E5%8A%A8%E6%9E%B6%E6%9E%84/</guid>
      <description>前言 为了解决传统的单体应用（Monolithic Application）在可扩展性、可靠性、适应性、高部署成本等方面的问题，许多公司（比如Amazon、eBay和NetFlix等）开始使用微服务架构（Microservice Architecture）构建自己的应用。 微服务架构（维</description>
    </item>
    <item>
      <title>冗余数据一致性到底如何保证</title>
      <link>https://geek.zshipu.com/post/%E4%BA%92%E8%81%94%E7%BD%91/%E5%86%97%E4%BD%99%E6%95%B0%E6%8D%AE%E4%B8%80%E8%87%B4%E6%80%A7%E5%88%B0%E5%BA%95%E5%A6%82%E4%BD%95%E4%BF%9D%E8%AF%81/</link>
      <pubDate>Tue, 15 Mar 2022 09:35:15 +0800</pubDate>
      <guid>https://geek.zshipu.com/post/%E4%BA%92%E8%81%94%E7%BD%91/%E5%86%97%E4%BD%99%E6%95%B0%E6%8D%AE%E4%B8%80%E8%87%B4%E6%80%A7%E5%88%B0%E5%BA%95%E5%A6%82%E4%BD%95%E4%BF%9D%E8%AF%81/</guid>
      <description>一，为什么要冗余数据 互联网数据量很大的业务场景，往往数据库需要进行 水平切分 来降低单库数据量。 水平切分会有一个patition key，通过patition key的查询能够直接定位到库，但是非patition key上的查询可能就需要扫描多个库了。 此时常见的架构设计方案，是使用 数据冗余</description>
    </item>
    <item>
      <title>贝壳找房中工作流程解析</title>
      <link>https://geek.zshipu.com/post/%E4%BA%92%E8%81%94%E7%BD%91/%E8%B4%9D%E5%A3%B3%E6%89%BE%E6%88%BF%E4%B8%AD%E5%B7%A5%E4%BD%9C%E6%B5%81%E7%A8%8B%E8%A7%A3%E6%9E%90/</link>
      <pubDate>Tue, 15 Mar 2022 09:25:00 +0800</pubDate>
      <guid>https://geek.zshipu.com/post/%E4%BA%92%E8%81%94%E7%BD%91/%E8%B4%9D%E5%A3%B3%E6%89%BE%E6%88%BF%E4%B8%AD%E5%B7%A5%E4%BD%9C%E6%B5%81%E7%A8%8B%E8%A7%A3%E6%9E%90/</guid>
      <description>本文主要介绍 TNonblockingServer 服务模型，这是thrift框架提供的一种非阻塞式IO服务模型，目前是thrift框架中最好的模型，这也是我们重点介绍的模型。 thrift是Facebook开源的一款开源跨语言的RPC通信框架，主要提供三种服务模型：1）TThreadPoolServer 服务模型，这是</description>
    </item>
    <item>
      <title>翻译存储揭秘</title>
      <link>https://geek.zshipu.com/post/%E4%BA%92%E8%81%94%E7%BD%91/%E7%BF%BB%E8%AF%91%E5%AD%98%E5%82%A8%E6%8F%AD%E7%A7%98/</link>
      <pubDate>Tue, 15 Mar 2022 09:24:02 +0800</pubDate>
      <guid>https://geek.zshipu.com/post/%E4%BA%92%E8%81%94%E7%BD%91/%E7%BF%BB%E8%AF%91%E5%AD%98%E5%82%A8%E6%8F%AD%E7%A7%98/</guid>
      <description>原文地址: http://oldblog.antirez.com/post/redis-persistence-demystified.html 我在Redis的部分工作是阅读博客，论坛消息以及推特上关于Redis的搜索。对于一个开发者来说，社区用户以及非用户的对他开发的产品的看法非常重要。我的感触是Redis的持久化被人误解非常多。 在这篇博客中，我会努力的做到公正：不安利Redis，不跳过可能让Redis有负</description>
    </item>
    <item>
      <title>深入剖析源码设计一深入理解机制</title>
      <link>https://geek.zshipu.com/post/%E4%BA%92%E8%81%94%E7%BD%91/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90%E6%BA%90%E7%A0%81%E8%AE%BE%E8%AE%A1%E4%B8%80%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E6%9C%BA%E5%88%B6/</link>
      <pubDate>Tue, 15 Mar 2022 09:23:58 +0800</pubDate>
      <guid>https://geek.zshipu.com/post/%E4%BA%92%E8%81%94%E7%BD%91/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90%E6%BA%90%E7%A0%81%E8%AE%BE%E8%AE%A1%E4%B8%80%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E6%9C%BA%E5%88%B6/</guid>
      <description>前言 打算输出一系列 Netty 源码分析与实践的文章，也作为后端开发学习过程中的沉淀，此文章为第一篇，从操作系统底层的IO讲起，为 Netty 的出场做下知识准备。 一些概念 文件描述符 文件描述符在形式上是一个非负整数。实际上，它是一个索引值，指向为每一个进程所维护的该进程打开文件的记录表。当程序打开一个现</description>
    </item>
    <item>
      <title>分布式高性能集群线上常见问题</title>
      <link>https://geek.zshipu.com/post/%E4%BA%92%E8%81%94%E7%BD%91/%E5%88%86%E5%B8%83%E5%BC%8F%E9%AB%98%E6%80%A7%E8%83%BD%E9%9B%86%E7%BE%A4%E7%BA%BF%E4%B8%8A%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/</link>
      <pubDate>Tue, 15 Mar 2022 09:20:48 +0800</pubDate>
      <guid>https://geek.zshipu.com/post/%E4%BA%92%E8%81%94%E7%BD%91/%E5%88%86%E5%B8%83%E5%BC%8F%E9%AB%98%E6%80%A7%E8%83%BD%E9%9B%86%E7%BE%A4%E7%BA%BF%E4%B8%8A%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/</guid>
      <description>转载自 ： 杉枫 量变引起质变，这个情况在分布式redis集群下发生的极其明显，当用redis集群规模很小、存取数据很小时，基本上不会遇到任何问题，但是当我们集群规模为数T，并且存在很多业务读写集群各种各样问题都会发生。 线上遇到过一个业务突然tp99飙升，并且性能持续变差，性能看着一点</description>
    </item>
    <item>
      <title>沈剑分布式事务原来可以这么玩</title>
      <link>https://geek.zshipu.com/post/%E4%BA%92%E8%81%94%E7%BD%91/%E6%B2%88%E5%89%91%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1%E5%8E%9F%E6%9D%A5%E5%8F%AF%E4%BB%A5%E8%BF%99%E4%B9%88%E7%8E%A9/</link>
      <pubDate>Tue, 15 Mar 2022 09:20:48 +0800</pubDate>
      <guid>https://geek.zshipu.com/post/%E4%BA%92%E8%81%94%E7%BD%91/%E6%B2%88%E5%89%91%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1%E5%8E%9F%E6%9D%A5%E5%8F%AF%E4%BB%A5%E8%BF%99%E4%B9%88%E7%8E%A9/</guid>
      <description>多个数据要同时操作，如何保证数据的完整性，以及一致性？ 答：事务，是常见的做法。 举个 栗子： 用户下了一个订单，需要修改余额表，订单表，流水表，于是会有类似的伪代码： start transaction; CURD table t_account; any Exception rollback; CURD table t_order; any Exception rollback; CURD table t_flow; any Exception rollback; commit; 如果对余额表，订单表，流水表的SQL操作全部成功，则全部提交 如果任何一个出现问</description>
    </item>
    <item>
      <title>腾讯内容平台系统的架构实践</title>
      <link>https://geek.zshipu.com/post/%E4%BA%92%E8%81%94%E7%BD%91/%E8%85%BE%E8%AE%AF%E5%86%85%E5%AE%B9%E5%B9%B3%E5%8F%B0%E7%B3%BB%E7%BB%9F%E7%9A%84%E6%9E%B6%E6%9E%84%E5%AE%9E%E8%B7%B5/</link>
      <pubDate>Tue, 15 Mar 2022 09:20:45 +0800</pubDate>
      <guid>https://geek.zshipu.com/post/%E4%BA%92%E8%81%94%E7%BD%91/%E8%85%BE%E8%AE%AF%E5%86%85%E5%AE%B9%E5%B9%B3%E5%8F%B0%E7%B3%BB%E7%BB%9F%E7%9A%84%E6%9E%B6%E6%9E%84%E5%AE%9E%E8%B7%B5/</guid>
      <description>作者 | 孙子荀（授权） 编辑 | 小智 随着云结合微服务架构切实的提高了生产效率；深度学习不断深入内容处理的各个领域促进生产力的发展。 在消息系统，数据仓库，计算框架，存储系统等基础架构层建设逐步提升的基础上，大型互联网公司进一步提出了业务基础设施的需求。在基础架构和上层业务之间急需一个中台</description>
    </item>
    <item>
      <title>从高可用架构看高可用架构设计</title>
      <link>https://geek.zshipu.com/post/%E4%BA%92%E8%81%94%E7%BD%91/%E4%BB%8E%E9%AB%98%E5%8F%AF%E7%94%A8%E6%9E%B6%E6%9E%84%E7%9C%8B%E9%AB%98%E5%8F%AF%E7%94%A8%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1/</link>
      <pubDate>Tue, 15 Mar 2022 09:20:15 +0800</pubDate>
      <guid>https://geek.zshipu.com/post/%E4%BA%92%E8%81%94%E7%BD%91/%E4%BB%8E%E9%AB%98%E5%8F%AF%E7%94%A8%E6%9E%B6%E6%9E%84%E7%9C%8B%E9%AB%98%E5%8F%AF%E7%94%A8%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1/</guid>
      <description>选自 架构文摘 公众号 高可用HA（High Availability）是分布式系统架构设计中必须考虑的因素之一，它通常是指，通过设计减少系统不能提供服务的时间。 假设系统一直能够提供服务，我们说系统的可用性是100%。如果系统每运行100个时间单位，会有1个时间单位无法提供服务，我们说系</description>
    </item>
    <item>
      <title>救火必备问题排查与系统优化手册</title>
      <link>https://geek.zshipu.com/post/%E4%BA%92%E8%81%94%E7%BD%91/%E6%95%91%E7%81%AB%E5%BF%85%E5%A4%87%E9%97%AE%E9%A2%98%E6%8E%92%E6%9F%A5%E4%B8%8E%E7%B3%BB%E7%BB%9F%E4%BC%98%E5%8C%96%E6%89%8B%E5%86%8C/</link>
      <pubDate>Tue, 15 Mar 2022 09:17:41 +0800</pubDate>
      <guid>https://geek.zshipu.com/post/%E4%BA%92%E8%81%94%E7%BD%91/%E6%95%91%E7%81%AB%E5%BF%85%E5%A4%87%E9%97%AE%E9%A2%98%E6%8E%92%E6%9F%A5%E4%B8%8E%E7%B3%BB%E7%BB%9F%E4%BC%98%E5%8C%96%E6%89%8B%E5%86%8C/</guid>
      <description>楚衡 阿里技术 阿里妹导读： 软件工程领域存在一个共识：维护代码所花费的时间要远多于写代码。而整个代码维护过程中，最惊心动魄与扣人心弦的部分，莫过于问题排查（Trouble-shooting）了。特别是那些需要 7x24 小时不间断维护在线业务的一线服务端程序员们，大大小小的问题排查线上救火早已</description>
    </item>
    <item>
      <title>互联网架构究竟为啥要做服务化</title>
      <link>https://geek.zshipu.com/post/%E4%BA%92%E8%81%94%E7%BD%91/%E4%BA%92%E8%81%94%E7%BD%91%E6%9E%B6%E6%9E%84%E7%A9%B6%E7%AB%9F%E4%B8%BA%E5%95%A5%E8%A6%81%E5%81%9A%E6%9C%8D%E5%8A%A1%E5%8C%96/</link>
      <pubDate>Tue, 15 Mar 2022 09:13:57 +0800</pubDate>
      <guid>https://geek.zshipu.com/post/%E4%BA%92%E8%81%94%E7%BD%91/%E4%BA%92%E8%81%94%E7%BD%91%E6%9E%B6%E6%9E%84%E7%A9%B6%E7%AB%9F%E4%B8%BA%E5%95%A5%E8%A6%81%E5%81%9A%E6%9C%8D%E5%8A%A1%E5%8C%96/</guid>
      <description>本文转载自 架构师之路 公众号 最近留言问“微服务”的朋友颇多，找历史文章又找不到，故重新优化发布，希望大家有收获，不要被“微服务大潮”误导。 “微服务架构”的话题非常之火，很多朋友都在小窗我，说怎么做服务化？解答“怎么做”之前，先得了解“为什么做”。 画外音：做技术千万不能是这种思路，“</description>
    </item>
    <item>
      <title>设计解析一背景及架构介绍</title>
      <link>https://geek.zshipu.com/post/%E4%BA%92%E8%81%94%E7%BD%91/%E8%AE%BE%E8%AE%A1%E8%A7%A3%E6%9E%90%E4%B8%80%E8%83%8C%E6%99%AF%E5%8F%8A%E6%9E%B6%E6%9E%84%E4%BB%8B%E7%BB%8D/</link>
      <pubDate>Tue, 15 Mar 2022 09:07:58 +0800</pubDate>
      <guid>https://geek.zshipu.com/post/%E4%BA%92%E8%81%94%E7%BD%91/%E8%AE%BE%E8%AE%A1%E8%A7%A3%E6%9E%90%E4%B8%80%E8%83%8C%E6%99%AF%E5%8F%8A%E6%9E%B6%E6%9E%84%E4%BB%8B%E7%BB%8D/</guid>
      <description>原文链接 ： https://www.infoq.cn/article/kafka-analysis-part-1 Kafka 是由 LinkedIn 开发的一个分布式的消息系统，使用 Scala 编写，它以可水平扩展和高吞吐率而被广泛使用。目前越来越多的开源分布式处理系统如 Cloudera、Apache Storm、Spark 都支持与 Kafka 集成。InfoQ 一直在紧密关注 Kafka 的应用以及发展，“Kafka 剖析”专栏将会从架构设计、</description>
    </item>
    <item>
      <title>写吞吐场景资源消耗量化分析及优化</title>
      <link>https://geek.zshipu.com/post/%E4%BA%92%E8%81%94%E7%BD%91/%E5%86%99%E5%90%9E%E5%90%90%E5%9C%BA%E6%99%AF%E8%B5%84%E6%BA%90%E6%B6%88%E8%80%97%E9%87%8F%E5%8C%96%E5%88%86%E6%9E%90%E5%8F%8A%E4%BC%98%E5%8C%96/</link>
      <pubDate>Tue, 15 Mar 2022 09:06:48 +0800</pubDate>
      <guid>https://geek.zshipu.com/post/%E4%BA%92%E8%81%94%E7%BD%91/%E5%86%99%E5%90%9E%E5%90%90%E5%9C%BA%E6%99%AF%E8%B5%84%E6%BA%90%E6%B6%88%E8%80%97%E9%87%8F%E5%8C%96%E5%88%86%E6%9E%90%E5%8F%8A%E4%BC%98%E5%8C%96/</guid>
      <description>一. 概述 HBase 是一个基于 Google BigTable 论文设计的高可靠性、高性能、可伸缩的分布式存储系统。 网上关于 HBase 的文章很多，官方文档介绍的也比较详细，本篇文章不介绍HBase基本的细节。 本文从 HBase 写链路开始分析，然后针对少量随机读和海量随机写入场景入手，全方面量化分析各种资源的开销, 从而做到以下两点： 在给定</description>
    </item>
    <item>
      <title>深入理解之源码</title>
      <link>https://geek.zshipu.com/post/%E4%BA%92%E8%81%94%E7%BD%91/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E4%B9%8B%E6%BA%90%E7%A0%81/</link>
      <pubDate>Tue, 15 Mar 2022 09:06:35 +0800</pubDate>
      <guid>https://geek.zshipu.com/post/%E4%BA%92%E8%81%94%E7%BD%91/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E4%B9%8B%E6%BA%90%E7%A0%81/</guid>
      <description>前言 很久之前分享过 ReetrantLock 的实现 深入剖析ReentrantLock公平锁与非公平锁源码实现，而今再回头去看，对AQS也有了更深刻准确的理解，随即更新了下之前的文章。今天分享利用AQS实现的另一个重要的JUC工具类 Condition。如果上篇理解到位，这个 Condition 的学习就没啥难度的～ 我们应该都</description>
    </item>
    <item>
      <title>真实生产案例消息中间件如何处理消费失败的消息</title>
      <link>https://geek.zshipu.com/post/%E4%BA%92%E8%81%94%E7%BD%91/%E7%9C%9F%E5%AE%9E%E7%94%9F%E4%BA%A7%E6%A1%88%E4%BE%8B%E6%B6%88%E6%81%AF%E4%B8%AD%E9%97%B4%E4%BB%B6%E5%A6%82%E4%BD%95%E5%A4%84%E7%90%86%E6%B6%88%E8%B4%B9%E5%A4%B1%E8%B4%A5%E7%9A%84%E6%B6%88%E6%81%AF/</link>
      <pubDate>Tue, 15 Mar 2022 09:05:42 +0800</pubDate>
      <guid>https://geek.zshipu.com/post/%E4%BA%92%E8%81%94%E7%BD%91/%E7%9C%9F%E5%AE%9E%E7%94%9F%E4%BA%A7%E6%A1%88%E4%BE%8B%E6%B6%88%E6%81%AF%E4%B8%AD%E9%97%B4%E4%BB%B6%E5%A6%82%E4%BD%95%E5%A4%84%E7%90%86%E6%B6%88%E8%B4%B9%E5%A4%B1%E8%B4%A5%E7%9A%84%E6%B6%88%E6%81%AF/</guid>
      <description>爱钓鱼的桌子哥，资深架构师 先后工作于滴滴、百度、字节跳动等国内一线互联网大厂，从事基础架构相关工作。带领团队设计与构建了大规模的分布式存储系统、分布式消息中间件、分布式数据库，对分布式架构设计、系统高可用体系构建、基础中间件架构都有丰富的经验。 1、消息中间件在生产系统中的使用 下图</description>
    </item>
    <item>
      <title>原理和技术全面揭秘</title>
      <link>https://geek.zshipu.com/post/%E4%BA%92%E8%81%94%E7%BD%91/%E5%8E%9F%E7%90%86%E5%92%8C%E6%8A%80%E6%9C%AF%E5%85%A8%E9%9D%A2%E6%8F%AD%E7%A7%98/</link>
      <pubDate>Tue, 15 Mar 2022 09:05:23 +0800</pubDate>
      <guid>https://geek.zshipu.com/post/%E4%BA%92%E8%81%94%E7%BD%91/%E5%8E%9F%E7%90%86%E5%92%8C%E6%8A%80%E6%9C%AF%E5%85%A8%E9%9D%A2%E6%8F%AD%E7%A7%98/</guid>
      <description>作者：allanpan，腾讯 IEG 后台开发工程师 两万字长文从虚拟内存、I/O 缓冲区，用户态&amp;amp;内核态以及 I/O 模式等等知识点全面而又详尽地剖析 Linux 系统的 I/O 底层原理，分析了 Linux 传统的 I/O 模式的弊端，进而引入 Linux Zero-copy 零拷贝技术的介绍和原理解析，将零拷贝技术和传统的 I/O 模式进行区分和对比，帮助读者理</description>
    </item>
    <item>
      <title>阿里浅谈系统实现层面稳定性保障</title>
      <link>https://geek.zshipu.com/post/%E4%BA%92%E8%81%94%E7%BD%91/%E9%98%BF%E9%87%8C%E6%B5%85%E8%B0%88%E7%B3%BB%E7%BB%9F%E5%AE%9E%E7%8E%B0%E5%B1%82%E9%9D%A2%E7%A8%B3%E5%AE%9A%E6%80%A7%E4%BF%9D%E9%9A%9C/</link>
      <pubDate>Tue, 15 Mar 2022 09:03:24 +0800</pubDate>
      <guid>https://geek.zshipu.com/post/%E4%BA%92%E8%81%94%E7%BD%91/%E9%98%BF%E9%87%8C%E6%B5%85%E8%B0%88%E7%B3%BB%E7%BB%9F%E5%AE%9E%E7%8E%B0%E5%B1%82%E9%9D%A2%E7%A8%B3%E5%AE%9A%E6%80%A7%E4%BF%9D%E9%9A%9C/</guid>
      <description>高丙寅 淘系技术 导读 上海外滩建筑群包括古典主义风格的亚细亚大楼（1915年），英国古典式的上海总会大楼（1911年），欧洲古典折中主义的海关大楼（1925年），仿意大利文艺复兴风格的汇中饭店大楼（1906年）等，这些建筑历经百年风雨，仍巍然屹立固若堡垒，保持其原本风貌，让今人得以深</description>
    </item>
    <item>
      <title>深入剖析公平锁与非公平锁源码实现</title>
      <link>https://geek.zshipu.com/post/%E4%BA%92%E8%81%94%E7%BD%91/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90%E5%85%AC%E5%B9%B3%E9%94%81%E4%B8%8E%E9%9D%9E%E5%85%AC%E5%B9%B3%E9%94%81%E6%BA%90%E7%A0%81%E5%AE%9E%E7%8E%B0/</link>
      <pubDate>Tue, 15 Mar 2022 09:02:35 +0800</pubDate>
      <guid>https://geek.zshipu.com/post/%E4%BA%92%E8%81%94%E7%BD%91/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90%E5%85%AC%E5%B9%B3%E9%94%81%E4%B8%8E%E9%9D%9E%E5%85%AC%E5%B9%B3%E9%94%81%E6%BA%90%E7%A0%81%E5%AE%9E%E7%8E%B0/</guid>
      <description>原文地址： https://blog.csdn.net/lsgqjh/article/details/63685058 ReentrantLock是JUC包中重要的并发工具之一，支持中断和超时、还支持尝试机制获取锁， 并且是一种通过编程控制的可重入锁，尽可能减少死锁问题。本文以公平与非公平锁的加锁释放锁过程成为主线，分析ReentrantLock的重要内容。有问题可以加我微信。 目标 掌握A</description>
    </item>
    <item>
      <title>大话机制</title>
      <link>https://geek.zshipu.com/post/%E4%BA%92%E8%81%94%E7%BD%91/%E5%A4%A7%E8%AF%9D%E6%9C%BA%E5%88%B6/</link>
      <pubDate>Tue, 15 Mar 2022 09:02:24 +0800</pubDate>
      <guid>https://geek.zshipu.com/post/%E4%BA%92%E8%81%94%E7%BD%91/%E5%A4%A7%E8%AF%9D%E6%9C%BA%E5%88%B6/</guid>
      <description>转载自： https://cloud.tencent.com/developer/article/1005481 作者： 黄日成 提到select、poll、epoll相信大家都耳熟能详了，三个都是IO多路复用的机制，可以监视多个描述符的读/写等事件，一旦某个描述符就绪（一般是读或者写事件发生了），就能够将发生的事件通知给关心的应用程序去处理该事件。本质上，select、poll、ep</description>
    </item>
    <item>
      <title>高并发架构消息队列面试题解析</title>
      <link>https://geek.zshipu.com/post/%E4%BA%92%E8%81%94%E7%BD%91/%E9%AB%98%E5%B9%B6%E5%8F%91%E6%9E%B6%E6%9E%84%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97%E9%9D%A2%E8%AF%95%E9%A2%98%E8%A7%A3%E6%9E%90/</link>
      <pubDate>Tue, 15 Mar 2022 09:02:19 +0800</pubDate>
      <guid>https://geek.zshipu.com/post/%E4%BA%92%E8%81%94%E7%BD%91/%E9%AB%98%E5%B9%B6%E5%8F%91%E6%9E%B6%E6%9E%84%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97%E9%9D%A2%E8%AF%95%E9%A2%98%E8%A7%A3%E6%9E%90/</guid>
      <description>面试题 为什么使用消息队列？ 消息队列有什么优点和缺点？ Kafka、ActiveMQ、RabbitMQ、RocketMQ 都有什么区别，以及适合哪些场景？ 面试官心理分析 其实面试官主要是想看看： 第一，你知不知道你们系统里为什么要用消息队列这个东西？ 不少候选人，说自己项目里用了 Redis、</description>
    </item>
    <item>
      <title>一次生产系统问题分析与排查总结</title>
      <link>https://geek.zshipu.com/post/%E4%BA%92%E8%81%94%E7%BD%91/%E4%B8%80%E6%AC%A1%E7%94%9F%E4%BA%A7%E7%B3%BB%E7%BB%9F%E9%97%AE%E9%A2%98%E5%88%86%E6%9E%90%E4%B8%8E%E6%8E%92%E6%9F%A5%E6%80%BB%E7%BB%93/</link>
      <pubDate>Tue, 15 Mar 2022 08:59:34 +0800</pubDate>
      <guid>https://geek.zshipu.com/post/%E4%BA%92%E8%81%94%E7%BD%91/%E4%B8%80%E6%AC%A1%E7%94%9F%E4%BA%A7%E7%B3%BB%E7%BB%9F%E9%97%AE%E9%A2%98%E5%88%86%E6%9E%90%E4%B8%8E%E6%8E%92%E6%9F%A5%E6%80%BB%E7%BB%93/</guid>
      <description>一次生产系统Full GC问题分析与排查总结 背景 最近某线上业务系统生产环境频频CPU使用率过低，频繁告警，通过重启可以缓解，但是过了一段时间又会继续预警，线上两个服务节点相继出现CPU资源紧张，导致服务器卡死不可用，通过告警信息可以看到以下问题： 从上图可以看到，目前zabbix监控</description>
    </item>
    <item>
      <title>每日生产万亿消息数据入库腾讯如何突破大数据分析架构瓶颈</title>
      <link>https://geek.zshipu.com/post/%E4%BA%92%E8%81%94%E7%BD%91/%E6%AF%8F%E6%97%A5%E7%94%9F%E4%BA%A7%E4%B8%87%E4%BA%BF%E6%B6%88%E6%81%AF%E6%95%B0%E6%8D%AE%E5%85%A5%E5%BA%93%E8%85%BE%E8%AE%AF%E5%A6%82%E4%BD%95%E7%AA%81%E7%A0%B4%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E6%9E%B6%E6%9E%84%E7%93%B6%E9%A2%88/</link>
      <pubDate>Tue, 15 Mar 2022 08:59:02 +0800</pubDate>
      <guid>https://geek.zshipu.com/post/%E4%BA%92%E8%81%94%E7%BD%91/%E6%AF%8F%E6%97%A5%E7%94%9F%E4%BA%A7%E4%B8%87%E4%BA%BF%E6%B6%88%E6%81%AF%E6%95%B0%E6%8D%AE%E5%85%A5%E5%BA%93%E8%85%BE%E8%AE%AF%E5%A6%82%E4%BD%95%E7%AA%81%E7%A0%B4%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E6%9E%B6%E6%9E%84%E7%93%B6%E9%A2%88/</guid>
      <description>作者： 彭渊 2018 年 11 月 20 日 背景介绍 对于腾讯庞大的大数据分析业务，几千台的 Hadoop 集群，近百 P 级的存储总量，每日产生万亿的消息数据入库，需要针对几十亿 IMEI 手机设备去重，并关联数千亿的历史全表，进行曝光、点击、PV、UV、日活、新增、留存等统计指标分析，当前所有业务的 ETL 清洗、统计计算、用户画像都</description>
    </item>
    <item>
      <title>不到个提升逼格的命令</title>
      <link>https://geek.zshipu.com/post/%E4%BA%92%E8%81%94%E7%BD%91/%E4%B8%8D%E5%88%B0%E4%B8%AA%E6%8F%90%E5%8D%87%E9%80%BC%E6%A0%BC%E7%9A%84%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Tue, 15 Mar 2022 08:54:58 +0800</pubDate>
      <guid>https://geek.zshipu.com/post/%E4%BA%92%E8%81%94%E7%BD%91/%E4%B8%8D%E5%88%B0%E4%B8%AA%E6%8F%90%E5%8D%87%E9%80%BC%E6%A0%BC%E7%9A%84%E5%91%BD%E4%BB%A4/</guid>
      <description>keys 我把这个命令放在第一位，是因为笔者曾经做过的项目，以及一些朋友的项目，都因为使用 keys 这个命令，导致出现性能毛刺。这个命令的时间复杂度是O(N)，而且redis又是单线程执行，在执行keys时即使是时间复杂度只有O(1)例如SET或者GET这种简单命令也会堵塞，从而导致这个时间点性</description>
    </item>
    <item>
      <title>学习和进阶策略</title>
      <link>https://geek.zshipu.com/post/%E4%BA%92%E8%81%94%E7%BD%91/%E5%AD%A6%E4%B9%A0%E5%92%8C%E8%BF%9B%E9%98%B6%E7%AD%96%E7%95%A5/</link>
      <pubDate>Tue, 15 Mar 2022 08:54:33 +0800</pubDate>
      <guid>https://geek.zshipu.com/post/%E4%BA%92%E8%81%94%E7%BD%91/%E5%AD%A6%E4%B9%A0%E5%92%8C%E8%BF%9B%E9%98%B6%E7%AD%96%E7%95%A5/</guid>
      <description>作者 | 李林锋 编辑 | 小智 《Netty 进阶之路》、《分布式服务框架原理与实践》作者李林锋手把手教你 Netty 框架如何学习和进阶。李林锋此后还将在 InfoQ 公众号上开设 Netty 专题持续出稿，感兴趣的同学可以持续关注。 背 景 Netty 框架的特点 Netty 的一个特点就是入门相对比较容易，但是真正掌握并精通是非常困难的，原因有如下</description>
    </item>
    <item>
      <title>架构优秀架构师必须掌握的架构思维</title>
      <link>https://geek.zshipu.com/post/%E4%BA%92%E8%81%94%E7%BD%91/%E6%9E%B6%E6%9E%84%E4%BC%98%E7%A7%80%E6%9E%B6%E6%9E%84%E5%B8%88%E5%BF%85%E9%A1%BB%E6%8E%8C%E6%8F%A1%E7%9A%84%E6%9E%B6%E6%9E%84%E6%80%9D%E7%BB%B4/</link>
      <pubDate>Tue, 15 Mar 2022 07:51:02 +0800</pubDate>
      <guid>https://geek.zshipu.com/post/%E4%BA%92%E8%81%94%E7%BD%91/%E6%9E%B6%E6%9E%84%E4%BC%98%E7%A7%80%E6%9E%B6%E6%9E%84%E5%B8%88%E5%BF%85%E9%A1%BB%E6%8E%8C%E6%8F%A1%E7%9A%84%E6%9E%B6%E6%9E%84%E6%80%9D%E7%BB%B4/</guid>
      <description>一、抽象思维 如果要问软件研发/系统架构中最重要的能力是什么，我会毫不犹豫回答是抽象能力。抽象(abstraction)这个词大家经常听到，但是真正理解和能讲清楚什么是抽象的人少之又少。抽象其实是这样定义的： 对某种事物进行简化表示或描述的过程，抽象让我们关注要素，隐藏额外细节。 举一</description>
    </item>
    <item>
      <title>分布式事务的实现原理事务</title>
      <link>https://geek.zshipu.com/post/%E4%BA%92%E8%81%94%E7%BD%91/%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1%E7%9A%84%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%E4%BA%8B%E5%8A%A1/</link>
      <pubDate>Tue, 15 Mar 2022 05:44:47 +0800</pubDate>
      <guid>https://geek.zshipu.com/post/%E4%BA%92%E8%81%94%E7%BD%91/%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1%E7%9A%84%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%E4%BA%8B%E5%8A%A1/</guid>
      <description>本文转载自 架构文摘 公众号 事务是数据库系统中非常有趣也非常重要的概念，它是数据库管理系统执行过程中的一个逻辑单元，它能够保证一个事务中的所有操作要么全部执行，要么全不执行；在 SOA 与微服务架构大行其道的今天，在分布式的多个服务中保证业务的一致性就需要我们实现分布式事务。 在这篇文章中，我</description>
    </item>
    <item>
      <title>信用卡的个性化推荐体系</title>
      <link>https://geek.zshipu.com/post/%E4%BA%92%E8%81%94%E7%BD%91/%E4%BF%A1%E7%94%A8%E5%8D%A1%E7%9A%84%E4%B8%AA%E6%80%A7%E5%8C%96%E6%8E%A8%E8%8D%90%E4%BD%93%E7%B3%BB/</link>
      <pubDate>Tue, 15 Mar 2022 03:48:11 +0800</pubDate>
      <guid>https://geek.zshipu.com/post/%E4%BA%92%E8%81%94%E7%BD%91/%E4%BF%A1%E7%94%A8%E5%8D%A1%E7%9A%84%E4%B8%AA%E6%80%A7%E5%8C%96%E6%8E%A8%E8%8D%90%E4%BD%93%E7%B3%BB/</guid>
      <description>分享嘉宾： 陈兵强51信用卡 资深算法专家 内容来源： DataFun AI Talk《51信用卡的个性化推荐体系》 出品社区： DataFun 人工智能是当下金融产业转型的重要助力，本文主要介绍51信用卡管家在这方面如何搭建模型体系，如何发掘数据价值，如何成立自己私有的扫码平台或个性化体系。 51信用卡管家最开始以账单管理</description>
    </item>
    <item>
      <title>菜鸟下一代分布式体系架构的设计理念</title>
      <link>https://geek.zshipu.com/post/%E4%BA%92%E8%81%94%E7%BD%91/%E8%8F%9C%E9%B8%9F%E4%B8%8B%E4%B8%80%E4%BB%A3%E5%88%86%E5%B8%83%E5%BC%8F%E4%BD%93%E7%B3%BB%E6%9E%B6%E6%9E%84%E7%9A%84%E8%AE%BE%E8%AE%A1%E7%90%86%E5%BF%B5/</link>
      <pubDate>Tue, 15 Mar 2022 03:35:39 +0800</pubDate>
      <guid>https://geek.zshipu.com/post/%E4%BA%92%E8%81%94%E7%BD%91/%E8%8F%9C%E9%B8%9F%E4%B8%8B%E4%B8%80%E4%BB%A3%E5%88%86%E5%B8%83%E5%BC%8F%E4%BD%93%E7%B3%BB%E6%9E%B6%E6%9E%84%E7%9A%84%E8%AE%BE%E8%AE%A1%E7%90%86%E5%BF%B5/</guid>
      <description>作者： 黄浩 2018 年 11 月 22 日 二十年来，整个分布式系统架构的演进，从 C/S 到 B/S，再到分布式系统，当前广泛使用的是网格计算和云计算，包括目标、定位、场景。 菜鸟乃至阿里在全球化进程中，也面临着全球分布式架构问题，以及仓储系统中独特场景下云计算能力的不足。菜鸟资深技术专家 黄浩 老师目前带领团队在</description>
    </item>
    <item>
      <title>去哪儿网机票报价高并发实施的关键路径</title>
      <link>https://geek.zshipu.com/post/%E4%BA%92%E8%81%94%E7%BD%91/%E5%8E%BB%E5%93%AA%E5%84%BF%E7%BD%91%E6%9C%BA%E7%A5%A8%E6%8A%A5%E4%BB%B7%E9%AB%98%E5%B9%B6%E5%8F%91%E5%AE%9E%E6%96%BD%E7%9A%84%E5%85%B3%E9%94%AE%E8%B7%AF%E5%BE%84/</link>
      <pubDate>Mon, 14 Mar 2022 20:59:30 +0800</pubDate>
      <guid>https://geek.zshipu.com/post/%E4%BA%92%E8%81%94%E7%BD%91/%E5%8E%BB%E5%93%AA%E5%84%BF%E7%BD%91%E6%9C%BA%E7%A5%A8%E6%8A%A5%E4%BB%B7%E9%AB%98%E5%B9%B6%E5%8F%91%E5%AE%9E%E6%96%BD%E7%9A%84%E5%85%B3%E9%94%AE%E8%B7%AF%E5%BE%84/</guid>
      <description>机票报价承载机票主站搜索的流量请求，目前国内机票报价日搜索量达 2 亿+，国内航线数量超过 2W+，为了支撑用户在 qunar app 等渠道查询购买机票操作，报价系统作为机票搜索核心之一，力求在用户的购票流程上做到： 快速响应报价搜索请求； 合理设计报价缓存和闭环降低机票购买流程的拦截率。 要解决这两个问题</description>
    </item>
    <item>
      <title>架构知乎服务化的实践与思考</title>
      <link>https://geek.zshipu.com/post/%E4%BA%92%E8%81%94%E7%BD%91/%E6%9E%B6%E6%9E%84%E7%9F%A5%E4%B9%8E%E6%9C%8D%E5%8A%A1%E5%8C%96%E7%9A%84%E5%AE%9E%E8%B7%B5%E4%B8%8E%E6%80%9D%E8%80%83/</link>
      <pubDate>Mon, 14 Mar 2022 19:50:45 +0800</pubDate>
      <guid>https://geek.zshipu.com/post/%E4%BA%92%E8%81%94%E7%BD%91/%E6%9E%B6%E6%9E%84%E7%9F%A5%E4%B9%8E%E6%9C%8D%E5%8A%A1%E5%8C%96%E7%9A%84%E5%AE%9E%E8%B7%B5%E4%B8%8E%E6%80%9D%E8%80%83/</guid>
      <description>服务化是知乎几年来技术演进故事里的一个主角，公司规模从几十人到几百人，在监控、tracing、框架、容器等基础设施从无到有的同时，也扩展出多个后端技术团队。在服务化演进的过程里，我们也进行了一些新的思考。 服务化的愿景 「微服务」 是业内最近两三年业内很火的 buzzword，迁移到微服</description>
    </item>
    <item>
      <title>架构开发案例从到构建分布式秒杀系统</title>
      <link>https://geek.zshipu.com/post/%E4%BA%92%E8%81%94%E7%BD%91/%E6%9E%B6%E6%9E%84%E5%BC%80%E5%8F%91%E6%A1%88%E4%BE%8B%E4%BB%8E%E5%88%B0%E6%9E%84%E5%BB%BA%E5%88%86%E5%B8%83%E5%BC%8F%E7%A7%92%E6%9D%80%E7%B3%BB%E7%BB%9F/</link>
      <pubDate>Mon, 14 Mar 2022 18:17:08 +0800</pubDate>
      <guid>https://geek.zshipu.com/post/%E4%BA%92%E8%81%94%E7%BD%91/%E6%9E%B6%E6%9E%84%E5%BC%80%E5%8F%91%E6%A1%88%E4%BE%8B%E4%BB%8E%E5%88%B0%E6%9E%84%E5%BB%BA%E5%88%86%E5%B8%83%E5%BC%8F%E7%A7%92%E6%9D%80%E7%B3%BB%E7%BB%9F/</guid>
      <description>前言 最近，被推送了不少秒杀架构的文章，忙里偷闲自己也总结了一下互联网平台秒杀架构设计，当然也借鉴了不少同学的思路。俗话说，脱离案例讲架构都是耍流氓，最终使用SpringBoot模拟实现了部分秒杀场景，同时跟大家分享交流一下。 秒杀场景 秒杀场景无非就是多个用户在同时抢购一件或者多件商</description>
    </item>
    <item>
      <title>系统重构的道与术</title>
      <link>https://geek.zshipu.com/post/%E4%BA%92%E8%81%94%E7%BD%91/%E7%B3%BB%E7%BB%9F%E9%87%8D%E6%9E%84%E7%9A%84%E9%81%93%E4%B8%8E%E6%9C%AF/</link>
      <pubDate>Mon, 14 Mar 2022 17:43:47 +0800</pubDate>
      <guid>https://geek.zshipu.com/post/%E4%BA%92%E8%81%94%E7%BD%91/%E7%B3%BB%E7%BB%9F%E9%87%8D%E6%9E%84%E7%9A%84%E9%81%93%E4%B8%8E%E6%9C%AF/</guid>
      <description>阿里云云栖号 最近参与了很多重构项目，有以提高服务器资源利用率为目标的Gateway网关、AMAPS等服务的重构，也有以提升架构合理性和研发效率为目标的共享业务服务化拆分，借此机会把相关内容梳理一下，是分享更是自我总结和学习。准备以重构工作中容易产生误区的地方或容易被忽视的重点来聊</description>
    </item>
    <item>
      <title>干货蚂蚁金服科技一篇文章带你学习分布式事务</title>
      <link>https://geek.zshipu.com/post/%E4%BA%92%E8%81%94%E7%BD%91/%E5%B9%B2%E8%B4%A7%E8%9A%82%E8%9A%81%E9%87%91%E6%9C%8D%E7%A7%91%E6%8A%80%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0%E5%B8%A6%E4%BD%A0%E5%AD%A6%E4%B9%A0%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1/</link>
      <pubDate>Mon, 14 Mar 2022 17:43:35 +0800</pubDate>
      <guid>https://geek.zshipu.com/post/%E4%BA%92%E8%81%94%E7%BD%91/%E5%B9%B2%E8%B4%A7%E8%9A%82%E8%9A%81%E9%87%91%E6%9C%8D%E7%A7%91%E6%8A%80%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0%E5%B8%A6%E4%BD%A0%E5%AD%A6%E4%B9%A0%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1/</guid>
      <description>分布式事务是企业集成中的一个技术难点，也是每一个分布式系统架构中都会涉及到的一个东西，特别是在这几年越来越火的微服务架构中，几乎可以说是无法避免，本文就围绕分布式事务各方面与大家进行介绍。 一. 事务 1.1 什么是事务 数据库事务（简称：事务，Transaction）是指数据库执行过程中的一</description>
    </item>
    <item>
      <title>深入剖析源码设计二模式到底干了啥</title>
      <link>https://geek.zshipu.com/post/%E4%BA%92%E8%81%94%E7%BD%91/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90%E6%BA%90%E7%A0%81%E8%AE%BE%E8%AE%A1%E4%BA%8C%E6%A8%A1%E5%BC%8F%E5%88%B0%E5%BA%95%E5%B9%B2%E4%BA%86%E5%95%A5/</link>
      <pubDate>Mon, 14 Mar 2022 16:49:02 +0800</pubDate>
      <guid>https://geek.zshipu.com/post/%E4%BA%92%E8%81%94%E7%BD%91/%E6%B7%B1%E5%85%A5%E5%89%96%E6%9E%90%E6%BA%90%E7%A0%81%E8%AE%BE%E8%AE%A1%E4%BA%8C%E6%A8%A1%E5%BC%8F%E5%88%B0%E5%BA%95%E5%B9%B2%E4%BA%86%E5%95%A5/</guid>
      <description>前言 周末向往常一样睡了一上午，惆怅了一个中午，下午学了会习，梳理了下Netty的线程模型是如何体现Reactor模式的。继上一篇对一些通信底层IO的C函数学习，这一篇主要是总结Java里对底层IO不同层次的抽象，每一层都为了解决什么问题？为什么Reator模型使得现在Netty处</description>
    </item>
    <item>
      <title>架构程序员该如何突破瓶颈阿里小马哥十年架构师经验之谈文末送书</title>
      <link>https://geek.zshipu.com/post/%E4%BA%92%E8%81%94%E7%BD%91/%E6%9E%B6%E6%9E%84%E7%A8%8B%E5%BA%8F%E5%91%98%E8%AF%A5%E5%A6%82%E4%BD%95%E7%AA%81%E7%A0%B4%E7%93%B6%E9%A2%88%E9%98%BF%E9%87%8C%E5%B0%8F%E9%A9%AC%E5%93%A5%E5%8D%81%E5%B9%B4%E6%9E%B6%E6%9E%84%E5%B8%88%E7%BB%8F%E9%AA%8C%E4%B9%8B%E8%B0%88%E6%96%87%E6%9C%AB%E9%80%81%E4%B9%A6/</link>
      <pubDate>Mon, 14 Mar 2022 16:48:06 +0800</pubDate>
      <guid>https://geek.zshipu.com/post/%E4%BA%92%E8%81%94%E7%BD%91/%E6%9E%B6%E6%9E%84%E7%A8%8B%E5%BA%8F%E5%91%98%E8%AF%A5%E5%A6%82%E4%BD%95%E7%AA%81%E7%A0%B4%E7%93%B6%E9%A2%88%E9%98%BF%E9%87%8C%E5%B0%8F%E9%A9%AC%E5%93%A5%E5%8D%81%E5%B9%B4%E6%9E%B6%E6%9E%84%E5%B8%88%E7%BB%8F%E9%AA%8C%E4%B9%8B%E8%B0%88%E6%96%87%E6%9C%AB%E9%80%81%E4%B9%A6/</guid>
      <description>一、源码分析 源码分析是一种临界知识，掌握了这种临界知识，能不变应万变，源码分析对于很多人来说很枯燥，生涩难懂。 源码阅读，我觉得最核心有三点：技术基础+强烈的求知欲+耐心。 我认为是阅读源码的最核心驱动力，我见到绝大多数程序员，对学习的态度基本上就是这几个层次(很偏激哦)： ** ** 二、分</description>
    </item>
    <item>
      <title>滴滴出行基于构建企业级消息队列服务的实践</title>
      <link>https://geek.zshipu.com/post/%E4%BA%92%E8%81%94%E7%BD%91/%E6%BB%B4%E6%BB%B4%E5%87%BA%E8%A1%8C%E5%9F%BA%E4%BA%8E%E6%9E%84%E5%BB%BA%E4%BC%81%E4%B8%9A%E7%BA%A7%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97%E6%9C%8D%E5%8A%A1%E7%9A%84%E5%AE%9E%E8%B7%B5/</link>
      <pubDate>Mon, 14 Mar 2022 16:42:25 +0800</pubDate>
      <guid>https://geek.zshipu.com/post/%E4%BA%92%E8%81%94%E7%BD%91/%E6%BB%B4%E6%BB%B4%E5%87%BA%E8%A1%8C%E5%9F%BA%E4%BA%8E%E6%9E%84%E5%BB%BA%E4%BC%81%E4%B8%9A%E7%BA%A7%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97%E6%9C%8D%E5%8A%A1%E7%9A%84%E5%AE%9E%E8%B7%B5/</guid>
      <description>作者： 江海挺 2018-11-20 本文整理自滴滴出行消息队列负责人 江海挺 在 Apache RocketMQ 开发者沙龙北京站的分享。 滴滴出行的消息技术选型 历史 初期，公司内部没有专门的团队维护消息队列服务，所以消息队列使用方式较多，主要以 Kafka 为主，有业务直连的，也有通过独立的服务转发消息的。另外有一些团队也会用 RocketMQ、Re</description>
    </item>
    <item>
      <title>美团在美团系统中的应用演进</title>
      <link>https://geek.zshipu.com/post/%E4%BA%92%E8%81%94%E7%BD%91/%E7%BE%8E%E5%9B%A2%E5%9C%A8%E7%BE%8E%E5%9B%A2%E7%B3%BB%E7%BB%9F%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8%E6%BC%94%E8%BF%9B/</link>
      <pubDate>Mon, 14 Mar 2022 16:40:30 +0800</pubDate>
      <guid>https://geek.zshipu.com/post/%E4%BA%92%E8%81%94%E7%BD%91/%E7%BE%8E%E5%9B%A2%E5%9C%A8%E7%BE%8E%E5%9B%A2%E7%B3%BB%E7%BB%9F%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8%E6%BC%94%E8%BF%9B/</guid>
      <description>背景 DSP系统是互联网广告需求方平台，用于承接媒体流量，投放广告。业务特点是并发度高，平均响应低（百毫秒）。 为了能够有效提高DSP系统的性能，美团平台引入了一种带有清退机制的缓存结构LruCache(Least Recently Used Cache)，在目前的DSP系统中，使用LruCache + 键值存储</description>
    </item>
    <item>
      <title>架构软件服务架构的一些感悟</title>
      <link>https://geek.zshipu.com/post/%E4%BA%92%E8%81%94%E7%BD%91/%E6%9E%B6%E6%9E%84%E8%BD%AF%E4%BB%B6%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84%E7%9A%84%E4%B8%80%E4%BA%9B%E6%84%9F%E6%82%9F/</link>
      <pubDate>Mon, 14 Mar 2022 16:40:00 +0800</pubDate>
      <guid>https://geek.zshipu.com/post/%E4%BA%92%E8%81%94%E7%BD%91/%E6%9E%B6%E6%9E%84%E8%BD%AF%E4%BB%B6%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84%E7%9A%84%E4%B8%80%E4%BA%9B%E6%84%9F%E6%82%9F/</guid>
      <description>早想着要写一篇博客，但由于各种原因(其实因为懒)，迟迟没有动笔。今日下决心，写写关于软件服务架构的一点感悟。 三层架构 从读大学开始，老师就讲三层架构。后来的项目实施基本上也都是三层架构。对于小型项目，业务逻辑相对简单的项目，三层架构是快速迭代的利器。随着项目的迭代，功能越来越多，业</description>
    </item>
  </channel>
</rss>
