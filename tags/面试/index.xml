<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>面试 on 知识铺的博客</title>
    <link>https://geek.zshipu.com/tags/%E9%9D%A2%E8%AF%95/</link>
    <description>Recent content in 面试 on 知识铺的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Fri, 03 Feb 2023 14:12:33 +0800</lastBuildDate>
    
	<atom:link href="https://geek.zshipu.com/tags/%E9%9D%A2%E8%AF%95/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>华为篇-2.2.2 某32位系统下, C&#43;&#43;程序，请计算sizeof 的值</title>
      <link>https://geek.zshipu.com/post/%E9%9D%A2%E8%AF%95/02.%E5%8D%8E%E4%B8%BA%E7%AF%87/2.2.2-%E6%9F%9032%E4%BD%8D%E7%B3%BB%E7%BB%9F%E4%B8%8B-C&#43;&#43;%E7%A8%8B%E5%BA%8F%E8%AF%B7%E8%AE%A1%E7%AE%97sizeof-%E7%9A%84%E5%80%BC/</link>
      <pubDate>Fri, 03 Feb 2023 14:12:33 +0800</pubDate>
      
      <guid>https://geek.zshipu.com/post/%E9%9D%A2%E8%AF%95/02.%E5%8D%8E%E4%B8%BA%E7%AF%87/2.2.2-%E6%9F%9032%E4%BD%8D%E7%B3%BB%E7%BB%9F%E4%B8%8B-C&#43;&#43;%E7%A8%8B%E5%BA%8F%E8%AF%B7%E8%AE%A1%E7%AE%97sizeof-%E7%9A%84%E5%80%BC/</guid>
      <description>题目：某32位系统下, C++程序，请计算sizeof 的值. 参考答案： char str[] = “http://www.ibegroup.com/” char *p = str ; int n = 10; 请计算 sizeof (str ) = ？（1） sizeof ( p ) = ？（2） sizeof ( n ) = ？（3） void Foo ( char str[100]){ 请计算 sizeof( str ) = ？（4） } void *p = malloc( 100 ); 请计算 sizeof ( p ) = ？（5） （1）1</description>
    </item>
    
    <item>
      <title>华为篇-2.2.1 用户输入M,N值，从1至N开始顺序循环数数，每数到M输出该数值，直至全部输出。写出C程序</title>
      <link>https://geek.zshipu.com/post/%E9%9D%A2%E8%AF%95/02.%E5%8D%8E%E4%B8%BA%E7%AF%87/2.2.1-%E7%94%A8%E6%88%B7%E8%BE%93%E5%85%A5MN%E5%80%BC%E4%BB%8E1%E8%87%B3N%E5%BC%80%E5%A7%8B%E9%A1%BA%E5%BA%8F%E5%BE%AA%E7%8E%AF%E6%95%B0%E6%95%B0%E6%AF%8F%E6%95%B0%E5%88%B0M%E8%BE%93%E5%87%BA%E8%AF%A5%E6%95%B0%E5%80%BC%E7%9B%B4%E8%87%B3%E5%85%A8%E9%83%A8%E8%BE%93%E5%87%BA%E5%86%99%E5%87%BAC%E7%A8%8B%E5%BA%8F/</link>
      <pubDate>Fri, 03 Feb 2023 14:11:33 +0800</pubDate>
      
      <guid>https://geek.zshipu.com/post/%E9%9D%A2%E8%AF%95/02.%E5%8D%8E%E4%B8%BA%E7%AF%87/2.2.1-%E7%94%A8%E6%88%B7%E8%BE%93%E5%85%A5MN%E5%80%BC%E4%BB%8E1%E8%87%B3N%E5%BC%80%E5%A7%8B%E9%A1%BA%E5%BA%8F%E5%BE%AA%E7%8E%AF%E6%95%B0%E6%95%B0%E6%AF%8F%E6%95%B0%E5%88%B0M%E8%BE%93%E5%87%BA%E8%AF%A5%E6%95%B0%E5%80%BC%E7%9B%B4%E8%87%B3%E5%85%A8%E9%83%A8%E8%BE%93%E5%87%BA%E5%86%99%E5%87%BAC%E7%A8%8B%E5%BA%8F/</guid>
      <description>题目：用户输入M,N值，从1至N开始顺序循环数数，每数到M输出该数值，直至全部输出。写出C程序。 参考答案： 循环链表，用取余操作做</description>
    </item>
    
    <item>
      <title>华为篇-2.2.0 IP地址的编码分为哪俩部分？</title>
      <link>https://geek.zshipu.com/post/%E9%9D%A2%E8%AF%95/02.%E5%8D%8E%E4%B8%BA%E7%AF%87/2.2.0-IP%E5%9C%B0%E5%9D%80%E7%9A%84%E7%BC%96%E7%A0%81%E5%88%86%E4%B8%BA%E5%93%AA%E4%BF%A9%E9%83%A8%E5%88%86/</link>
      <pubDate>Fri, 03 Feb 2023 14:10:33 +0800</pubDate>
      
      <guid>https://geek.zshipu.com/post/%E9%9D%A2%E8%AF%95/02.%E5%8D%8E%E4%B8%BA%E7%AF%87/2.2.0-IP%E5%9C%B0%E5%9D%80%E7%9A%84%E7%BC%96%E7%A0%81%E5%88%86%E4%B8%BA%E5%93%AA%E4%BF%A9%E9%83%A8%E5%88%86/</guid>
      <description>题目：IP地址的编码分为哪俩部分？ 参考答案： IP地址由两部分组成，网络号和主机号。不过是要和“子网掩码”按位与上之后才能区分哪些是网络位哪些是主机位。</description>
    </item>
    
    <item>
      <title>华为篇-2.1.9. Internet采用哪种网络协议？该协议的主要层次结构？</title>
      <link>https://geek.zshipu.com/post/%E9%9D%A2%E8%AF%95/02.%E5%8D%8E%E4%B8%BA%E7%AF%87/2.1.9.-Internet%E9%87%87%E7%94%A8%E5%93%AA%E7%A7%8D%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE%E8%AF%A5%E5%8D%8F%E8%AE%AE%E7%9A%84%E4%B8%BB%E8%A6%81%E5%B1%82%E6%AC%A1%E7%BB%93%E6%9E%84/</link>
      <pubDate>Fri, 03 Feb 2023 14:09:33 +0800</pubDate>
      
      <guid>https://geek.zshipu.com/post/%E9%9D%A2%E8%AF%95/02.%E5%8D%8E%E4%B8%BA%E7%AF%87/2.1.9.-Internet%E9%87%87%E7%94%A8%E5%93%AA%E7%A7%8D%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE%E8%AF%A5%E5%8D%8F%E8%AE%AE%E7%9A%84%E4%B8%BB%E8%A6%81%E5%B1%82%E6%AC%A1%E7%BB%93%E6%9E%84/</guid>
      <description>题目：Internet采用哪种网络协议？该协议的主要层次结构？ 参考答案： Tcp/Ip协议 主要层次结构为： 应用层/传输层/网络层/数据链路层/物理层。</description>
    </item>
    
    <item>
      <title>华为篇-2.1.8 冒泡排序算法的时间复杂度是什么？</title>
      <link>https://geek.zshipu.com/post/%E9%9D%A2%E8%AF%95/02.%E5%8D%8E%E4%B8%BA%E7%AF%87/2.1.8-%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E7%9A%84%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6%E6%98%AF%E4%BB%80%E4%B9%88/</link>
      <pubDate>Fri, 03 Feb 2023 14:08:33 +0800</pubDate>
      
      <guid>https://geek.zshipu.com/post/%E9%9D%A2%E8%AF%95/02.%E5%8D%8E%E4%B8%BA%E7%AF%87/2.1.8-%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E7%9A%84%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6%E6%98%AF%E4%BB%80%E4%B9%88/</guid>
      <description>题目： 冒泡排序算法的时间复杂度是什么？ 参考答案： 时间复杂度是O(n^2)。</description>
    </item>
    
    <item>
      <title>华为篇-2.1.7 什么函数不能声明为虚函数？</title>
      <link>https://geek.zshipu.com/post/%E9%9D%A2%E8%AF%95/02.%E5%8D%8E%E4%B8%BA%E7%AF%87/2.1.7-%E4%BB%80%E4%B9%88%E5%87%BD%E6%95%B0%E4%B8%8D%E8%83%BD%E5%A3%B0%E6%98%8E%E4%B8%BA%E8%99%9A%E5%87%BD%E6%95%B0/</link>
      <pubDate>Fri, 03 Feb 2023 14:07:33 +0800</pubDate>
      
      <guid>https://geek.zshipu.com/post/%E9%9D%A2%E8%AF%95/02.%E5%8D%8E%E4%B8%BA%E7%AF%87/2.1.7-%E4%BB%80%E4%B9%88%E5%87%BD%E6%95%B0%E4%B8%8D%E8%83%BD%E5%A3%B0%E6%98%8E%E4%B8%BA%E8%99%9A%E5%87%BD%E6%95%B0/</guid>
      <description>题目：什么函数不能声明为虚函数？ 参考答案： constructor函数不能声明为虚函数。</description>
    </item>
    
    <item>
      <title>华为篇-2.1.6 堆栈溢出一般是由什么原因导致的？</title>
      <link>https://geek.zshipu.com/post/%E9%9D%A2%E8%AF%95/02.%E5%8D%8E%E4%B8%BA%E7%AF%87/2.1.6-%E5%A0%86%E6%A0%88%E6%BA%A2%E5%87%BA%E4%B8%80%E8%88%AC%E6%98%AF%E7%94%B1%E4%BB%80%E4%B9%88%E5%8E%9F%E5%9B%A0%E5%AF%BC%E8%87%B4%E7%9A%84/</link>
      <pubDate>Fri, 03 Feb 2023 14:06:33 +0800</pubDate>
      
      <guid>https://geek.zshipu.com/post/%E9%9D%A2%E8%AF%95/02.%E5%8D%8E%E4%B8%BA%E7%AF%87/2.1.6-%E5%A0%86%E6%A0%88%E6%BA%A2%E5%87%BA%E4%B8%80%E8%88%AC%E6%98%AF%E7%94%B1%E4%BB%80%E4%B9%88%E5%8E%9F%E5%9B%A0%E5%AF%BC%E8%87%B4%E7%9A%84/</guid>
      <description>题目：堆栈溢出一般是由什么原因导致的？ 参考答案： 没有回收垃圾资源。</description>
    </item>
    
    <item>
      <title>华为篇-2.1.5 什么是平衡二叉树？</title>
      <link>https://geek.zshipu.com/post/%E9%9D%A2%E8%AF%95/02.%E5%8D%8E%E4%B8%BA%E7%AF%87/2.1.5-%E4%BB%80%E4%B9%88%E6%98%AF%E5%B9%B3%E8%A1%A1%E4%BA%8C%E5%8F%89%E6%A0%91/</link>
      <pubDate>Fri, 03 Feb 2023 14:05:33 +0800</pubDate>
      
      <guid>https://geek.zshipu.com/post/%E9%9D%A2%E8%AF%95/02.%E5%8D%8E%E4%B8%BA%E7%AF%87/2.1.5-%E4%BB%80%E4%B9%88%E6%98%AF%E5%B9%B3%E8%A1%A1%E4%BA%8C%E5%8F%89%E6%A0%91/</guid>
      <description>题目：什么是平衡二叉树？ 参考答案： 左右子树都是平衡二叉树 且左右子树的深度差值的绝对值不大于1。 平衡二叉树（Balanced Binary Tree），也称为 AVL 树，是一种二叉搜索树，它的左右子树的高度差不超过 1，以保持树的平衡性。平衡二叉树的平衡性使得在树上进行查找、插入、删除等操作的时间复杂度</description>
    </item>
    
    <item>
      <title>华为篇-2.1.4 全局变量和局部变量在内存中是否有区别？如果有，是什么区别？</title>
      <link>https://geek.zshipu.com/post/%E9%9D%A2%E8%AF%95/02.%E5%8D%8E%E4%B8%BA%E7%AF%87/2.1.4-%E5%85%A8%E5%B1%80%E5%8F%98%E9%87%8F%E5%92%8C%E5%B1%80%E9%83%A8%E5%8F%98%E9%87%8F%E5%9C%A8%E5%86%85%E5%AD%98%E4%B8%AD%E6%98%AF%E5%90%A6%E6%9C%89%E5%8C%BA%E5%88%AB%E5%A6%82%E6%9E%9C%E6%9C%89%E6%98%AF%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB/</link>
      <pubDate>Fri, 03 Feb 2023 14:04:33 +0800</pubDate>
      
      <guid>https://geek.zshipu.com/post/%E9%9D%A2%E8%AF%95/02.%E5%8D%8E%E4%B8%BA%E7%AF%87/2.1.4-%E5%85%A8%E5%B1%80%E5%8F%98%E9%87%8F%E5%92%8C%E5%B1%80%E9%83%A8%E5%8F%98%E9%87%8F%E5%9C%A8%E5%86%85%E5%AD%98%E4%B8%AD%E6%98%AF%E5%90%A6%E6%9C%89%E5%8C%BA%E5%88%AB%E5%A6%82%E6%9E%9C%E6%9C%89%E6%98%AF%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB/</guid>
      <description>题目：全局变量和局部变量在内存中是否有区别？如果有，是什么区别？ 参考答案： 全局变量储存在静态数据库，局部变量在堆栈。 全局变量和局部变量在内存中确实有区别，这是因为它们在程序中的作用域和生命周期不同。 作用域：全局变量在整个程序中都是可见的，而局部变量仅在它们定义的函数或代码块中可见</description>
    </item>
    
    <item>
      <title>华为篇-2.1.3 描述实时系统的基本特性</title>
      <link>https://geek.zshipu.com/post/%E9%9D%A2%E8%AF%95/02.%E5%8D%8E%E4%B8%BA%E7%AF%87/2.1.3-%E6%8F%8F%E8%BF%B0%E5%AE%9E%E6%97%B6%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%9F%BA%E6%9C%AC%E7%89%B9%E6%80%A7/</link>
      <pubDate>Fri, 03 Feb 2023 14:03:33 +0800</pubDate>
      
      <guid>https://geek.zshipu.com/post/%E9%9D%A2%E8%AF%95/02.%E5%8D%8E%E4%B8%BA%E7%AF%87/2.1.3-%E6%8F%8F%E8%BF%B0%E5%AE%9E%E6%97%B6%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%9F%BA%E6%9C%AC%E7%89%B9%E6%80%A7/</guid>
      <description>题目：描述实时系统的基本特性 参考答案： 在特定时间内完成特定的任务，实时性与可靠性。 实时系统是指必须在规定的时间范围内完成一项任务或响应一项事件的计算机系统。它具有以下几个基本特性： 响应性：实时系统必须能够及时响应外部事件或任务请求。它必须在规定的时间范围内完成任务或事件响应，并且</description>
    </item>
    
    <item>
      <title>华为篇-2.1.2 引用与指针有什么区别？</title>
      <link>https://geek.zshipu.com/post/%E9%9D%A2%E8%AF%95/02.%E5%8D%8E%E4%B8%BA%E7%AF%87/2.1.2-%E5%BC%95%E7%94%A8%E4%B8%8E%E6%8C%87%E9%92%88%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB/</link>
      <pubDate>Fri, 03 Feb 2023 14:02:33 +0800</pubDate>
      
      <guid>https://geek.zshipu.com/post/%E9%9D%A2%E8%AF%95/02.%E5%8D%8E%E4%B8%BA%E7%AF%87/2.1.2-%E5%BC%95%E7%94%A8%E4%B8%8E%E6%8C%87%E9%92%88%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB/</guid>
      <description>题目：引用与指针有什么区别？ 参考答案： 1) 引用必须被初始化，指针不必。 2) 引用初始化以后不能被改变，指针可以改变所指的对象。 3) 不存在指向空值的引用，但是存在指向空值的指针。 引用和指针都是C++语言中用于间接访问数据的机制，但它们有一些重要的区别。 操作符：指针使用*和-&amp;gt;操作符进</description>
    </item>
    
    <item>
      <title>华为篇-2.1.1 static有什么用途？（请至少说明两种）</title>
      <link>https://geek.zshipu.com/post/%E9%9D%A2%E8%AF%95/02.%E5%8D%8E%E4%B8%BA%E7%AF%87/2.1.1-static%E6%9C%89%E4%BB%80%E4%B9%88%E7%94%A8%E9%80%94%E8%AF%B7%E8%87%B3%E5%B0%91%E8%AF%B4%E6%98%8E%E4%B8%A4%E7%A7%8D/</link>
      <pubDate>Fri, 03 Feb 2023 14:01:33 +0800</pubDate>
      
      <guid>https://geek.zshipu.com/post/%E9%9D%A2%E8%AF%95/02.%E5%8D%8E%E4%B8%BA%E7%AF%87/2.1.1-static%E6%9C%89%E4%BB%80%E4%B9%88%E7%94%A8%E9%80%94%E8%AF%B7%E8%87%B3%E5%B0%91%E8%AF%B4%E6%98%8E%E4%B8%A4%E7%A7%8D/</guid>
      <description>题目： static有什么用途？（请至少说明两种） 参考答案： 1) 在函数体，一个被声明为静态的变量在这一函数被调用过程中维持其值不变。 2) 在模块内（但在函数体外），一个被声明为静态的变量可以被模块内所用函数访问，但不能被模块外其它函数访问。它是一个本地的全局变量。 3) 在模块内，一个被声明为</description>
    </item>
    
    <item>
      <title>阿里篇-1.3.9 如何判断两个链表是否相交</title>
      <link>https://geek.zshipu.com/post/%E9%9D%A2%E8%AF%95/01.%E9%98%BF%E9%87%8C%E7%AF%87/1.3.9-%E5%A6%82%E4%BD%95%E5%88%A4%E6%96%AD%E4%B8%A4%E4%B8%AA%E9%93%BE%E8%A1%A8%E6%98%AF%E5%90%A6%E7%9B%B8%E4%BA%A4/</link>
      <pubDate>Thu, 02 Feb 2023 14:39:33 +0800</pubDate>
      
      <guid>https://geek.zshipu.com/post/%E9%9D%A2%E8%AF%95/01.%E9%98%BF%E9%87%8C%E7%AF%87/1.3.9-%E5%A6%82%E4%BD%95%E5%88%A4%E6%96%AD%E4%B8%A4%E4%B8%AA%E9%93%BE%E8%A1%A8%E6%98%AF%E5%90%A6%E7%9B%B8%E4%BA%A4/</guid>
      <description>题目：如何判断两个链表是否相交 出题人：阿里巴巴新零售技术质量部 参考答案： $O(n^2)$: 两层遍历，总能发现是否相交 $O(n)$: 一层遍历，遍历完两个链表，如果两个链表的最后一个结点指针相同，则相交，否则不相交</description>
    </item>
    
    <item>
      <title>阿里篇-1.3.8 如何测试一辆自行车</title>
      <link>https://geek.zshipu.com/post/%E9%9D%A2%E8%AF%95/01.%E9%98%BF%E9%87%8C%E7%AF%87/1.3.8-%E5%A6%82%E4%BD%95%E6%B5%8B%E8%AF%95%E4%B8%80%E8%BE%86%E8%87%AA%E8%A1%8C%E8%BD%A6/</link>
      <pubDate>Thu, 02 Feb 2023 14:38:33 +0800</pubDate>
      
      <guid>https://geek.zshipu.com/post/%E9%9D%A2%E8%AF%95/01.%E9%98%BF%E9%87%8C%E7%AF%87/1.3.8-%E5%A6%82%E4%BD%95%E6%B5%8B%E8%AF%95%E4%B8%80%E8%BE%86%E8%87%AA%E8%A1%8C%E8%BD%A6/</guid>
      <description>题目：如何测试一辆自行车 出题人：阿里巴巴新零售技术质量部 参考答案： 开放性问题，如果联系到测试角度上看的话，可以这么作答： 骑车试一试，看有没有问题，对应测试能不能跑通 看看车的核心部件，例如车闸，车把等，对应软件的核心功能 看看车是否安全，配锁质量如何，对应软件是否有安全问题</description>
    </item>
    
    <item>
      <title>阿里篇-1.3.7 请评估一下程序的执行结果？</title>
      <link>https://geek.zshipu.com/post/%E9%9D%A2%E8%AF%95/01.%E9%98%BF%E9%87%8C%E7%AF%87/1.3.7-%E8%AF%B7%E8%AF%84%E4%BC%B0%E4%B8%80%E4%B8%8B%E7%A8%8B%E5%BA%8F%E7%9A%84%E6%89%A7%E8%A1%8C%E7%BB%93%E6%9E%9C/</link>
      <pubDate>Thu, 02 Feb 2023 14:37:33 +0800</pubDate>
      
      <guid>https://geek.zshipu.com/post/%E9%9D%A2%E8%AF%95/01.%E9%98%BF%E9%87%8C%E7%AF%87/1.3.7-%E8%AF%B7%E8%AF%84%E4%BC%B0%E4%B8%80%E4%B8%8B%E7%A8%8B%E5%BA%8F%E7%9A%84%E6%89%A7%E8%A1%8C%E7%BB%93%E6%9E%9C/</guid>
      <description>题目：请评估一下程序的执行结果？ public class SynchronousQueueQuiz { public static void main(String[] args) throws Exception { BlockingQueue&amp;lt;Integer&amp;gt; queue = new SynchronousQueue&amp;lt;&amp;gt;(); System. out .print(queue.offer(1) + &amp;quot; &amp;quot;); System. out .print(queue.offer(2) + &amp;quot; &amp;quot;); System. out .print(queue.offer(3) + &amp;quot; &amp;quot;); System. out .print(queue.take() + &amp;quot; &amp;quot;); System. out .println(queue.size()); } } A. true true true 1 3 B. true true true (阻塞) C. false false false null 0 D. false false false (阻塞) 出题人：阿里巴巴出题专家：桃谷／阿里云中间件技术专家 参考答案：D</description>
    </item>
    
    <item>
      <title>阿里篇-1.3.6 假如给你一个新产品，你将从哪些方面来保障它的质量？</title>
      <link>https://geek.zshipu.com/post/%E9%9D%A2%E8%AF%95/01.%E9%98%BF%E9%87%8C%E7%AF%87/1.3.6-%E5%81%87%E5%A6%82%E7%BB%99%E4%BD%A0%E4%B8%80%E4%B8%AA%E6%96%B0%E4%BA%A7%E5%93%81%E4%BD%A0%E5%B0%86%E4%BB%8E%E5%93%AA%E4%BA%9B%E6%96%B9%E9%9D%A2%E6%9D%A5%E4%BF%9D%E9%9A%9C%E5%AE%83%E7%9A%84%E8%B4%A8%E9%87%8F/</link>
      <pubDate>Thu, 02 Feb 2023 14:36:33 +0800</pubDate>
      
      <guid>https://geek.zshipu.com/post/%E9%9D%A2%E8%AF%95/01.%E9%98%BF%E9%87%8C%E7%AF%87/1.3.6-%E5%81%87%E5%A6%82%E7%BB%99%E4%BD%A0%E4%B8%80%E4%B8%AA%E6%96%B0%E4%BA%A7%E5%93%81%E4%BD%A0%E5%B0%86%E4%BB%8E%E5%93%AA%E4%BA%9B%E6%96%B9%E9%9D%A2%E6%9D%A5%E4%BF%9D%E9%9A%9C%E5%AE%83%E7%9A%84%E8%B4%A8%E9%87%8F/</guid>
      <description>题目：假如给你一个新产品，你将从哪些方面来保障它的质量？ 出题人：阿里巴巴出题专家：晨晖 ／阿里云中间件技术部测试开发专家 参考答案： 可以从代码开发、测试保障、线上质量三个方面来保障。 在代码开发阶段，有单元测试、代码Review、静态代码扫描等； 测试保障阶段，有功能测试、性能测试、高可</description>
    </item>
    
    <item>
      <title>阿里篇-1.3.5 给定一个整数数组和一个整数，返回两个数组的索引，这两个索引指向的数字的加和等于指定的整数。需要最优的算法，分析算法的空间和时间复杂度</title>
      <link>https://geek.zshipu.com/post/%E9%9D%A2%E8%AF%95/01.%E9%98%BF%E9%87%8C%E7%AF%87/1.3.5-%E7%BB%99%E5%AE%9A%E4%B8%80%E4%B8%AA%E6%95%B4%E6%95%B0%E6%95%B0%E7%BB%84%E5%92%8C%E4%B8%80%E4%B8%AA%E6%95%B4%E6%95%B0%E8%BF%94%E5%9B%9E%E4%B8%A4%E4%B8%AA%E6%95%B0%E7%BB%84%E7%9A%84%E7%B4%A2%E5%BC%95%E8%BF%99%E4%B8%A4%E4%B8%AA%E7%B4%A2%E5%BC%95%E6%8C%87%E5%90%91%E7%9A%84%E6%95%B0%E5%AD%97%E7%9A%84%E5%8A%A0%E5%92%8C%E7%AD%89%E4%BA%8E%E6%8C%87%E5%AE%9A%E7%9A%84%E6%95%B4%E6%95%B0%E9%9C%80%E8%A6%81%E6%9C%80%E4%BC%98%E7%9A%84%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90%E7%AE%97%E6%B3%95%E7%9A%84%E7%A9%BA%E9%97%B4%E5%92%8C%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6/</link>
      <pubDate>Thu, 02 Feb 2023 14:35:33 +0800</pubDate>
      
      <guid>https://geek.zshipu.com/post/%E9%9D%A2%E8%AF%95/01.%E9%98%BF%E9%87%8C%E7%AF%87/1.3.5-%E7%BB%99%E5%AE%9A%E4%B8%80%E4%B8%AA%E6%95%B4%E6%95%B0%E6%95%B0%E7%BB%84%E5%92%8C%E4%B8%80%E4%B8%AA%E6%95%B4%E6%95%B0%E8%BF%94%E5%9B%9E%E4%B8%A4%E4%B8%AA%E6%95%B0%E7%BB%84%E7%9A%84%E7%B4%A2%E5%BC%95%E8%BF%99%E4%B8%A4%E4%B8%AA%E7%B4%A2%E5%BC%95%E6%8C%87%E5%90%91%E7%9A%84%E6%95%B0%E5%AD%97%E7%9A%84%E5%8A%A0%E5%92%8C%E7%AD%89%E4%BA%8E%E6%8C%87%E5%AE%9A%E7%9A%84%E6%95%B4%E6%95%B0%E9%9C%80%E8%A6%81%E6%9C%80%E4%BC%98%E7%9A%84%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90%E7%AE%97%E6%B3%95%E7%9A%84%E7%A9%BA%E9%97%B4%E5%92%8C%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6/</guid>
      <description>题目：给定一个整数数组和一个整数，返回两个数组的索引，这两个索引指向的数字的加和等于指定的整数。需要最优的算法，分析算法的空间和时间复杂度 参考答案： public int[] twoSum(int[] nums, int target) { if(nums==null || nums.length&amp;lt;2) return new int[]{0,0}; HashMap&amp;lt;Integer, Integer&amp;gt; map = new HashMap&amp;lt;Integer, Integer&amp;gt;(); for(int i=0; i&amp;lt;nums.length; i++){ if(map.containsKey(nums[i])){ return new int[]{map.get(nums[i]), i}; }else{ map.put(target-nums[i], i); } } return new int[]{0,0}; } 分析：空间复杂度和时间复杂度均为 O(n)</description>
    </item>
    
    <item>
      <title>阿里篇-1.3.4 如果让你来设计一个支持数据库、NOSQL 和大数据之间数据实时流动的数据流及处理的系统，你会考虑哪些问题？如何设计？</title>
      <link>https://geek.zshipu.com/post/%E9%9D%A2%E8%AF%95/01.%E9%98%BF%E9%87%8C%E7%AF%87/1.3.4-%E5%A6%82%E6%9E%9C%E8%AE%A9%E4%BD%A0%E6%9D%A5%E8%AE%BE%E8%AE%A1%E4%B8%80%E4%B8%AA%E6%94%AF%E6%8C%81%E6%95%B0%E6%8D%AE%E5%BA%93NOSQL-%E5%92%8C%E5%A4%A7%E6%95%B0%E6%8D%AE%E4%B9%8B%E9%97%B4%E6%95%B0%E6%8D%AE%E5%AE%9E%E6%97%B6%E6%B5%81%E5%8A%A8%E7%9A%84%E6%95%B0%E6%8D%AE%E6%B5%81%E5%8F%8A%E5%A4%84%E7%90%86%E7%9A%84%E7%B3%BB%E7%BB%9F%E4%BD%A0%E4%BC%9A%E8%80%83%E8%99%91%E5%93%AA%E4%BA%9B%E9%97%AE%E9%A2%98%E5%A6%82%E4%BD%95%E8%AE%BE%E8%AE%A1/</link>
      <pubDate>Thu, 02 Feb 2023 14:34:33 +0800</pubDate>
      
      <guid>https://geek.zshipu.com/post/%E9%9D%A2%E8%AF%95/01.%E9%98%BF%E9%87%8C%E7%AF%87/1.3.4-%E5%A6%82%E6%9E%9C%E8%AE%A9%E4%BD%A0%E6%9D%A5%E8%AE%BE%E8%AE%A1%E4%B8%80%E4%B8%AA%E6%94%AF%E6%8C%81%E6%95%B0%E6%8D%AE%E5%BA%93NOSQL-%E5%92%8C%E5%A4%A7%E6%95%B0%E6%8D%AE%E4%B9%8B%E9%97%B4%E6%95%B0%E6%8D%AE%E5%AE%9E%E6%97%B6%E6%B5%81%E5%8A%A8%E7%9A%84%E6%95%B0%E6%8D%AE%E6%B5%81%E5%8F%8A%E5%A4%84%E7%90%86%E7%9A%84%E7%B3%BB%E7%BB%9F%E4%BD%A0%E4%BC%9A%E8%80%83%E8%99%91%E5%93%AA%E4%BA%9B%E9%97%AE%E9%A2%98%E5%A6%82%E4%BD%95%E8%AE%BE%E8%AE%A1/</guid>
      <description>题目：如果让你来设计一个支持数据库、NOSQL 和大数据之间数据实时流动的数据流及处理的系统，你会考虑哪些问题？如何设计？ 出题人：阿里巴巴出题专家：千震／阿里云数据库高级技术专家 参考答案：开放性问题，无标准答案。</description>
    </item>
    
    <item>
      <title>阿里篇-1.3.3 如果让你设计一个通用的、支持各种数据库秒级备份和恢复的系统，你会如何设计</title>
      <link>https://geek.zshipu.com/post/%E9%9D%A2%E8%AF%95/01.%E9%98%BF%E9%87%8C%E7%AF%87/1.3.3-%E5%A6%82%E6%9E%9C%E8%AE%A9%E4%BD%A0%E8%AE%BE%E8%AE%A1%E4%B8%80%E4%B8%AA%E9%80%9A%E7%94%A8%E7%9A%84%E6%94%AF%E6%8C%81%E5%90%84%E7%A7%8D%E6%95%B0%E6%8D%AE%E5%BA%93%E7%A7%92%E7%BA%A7%E5%A4%87%E4%BB%BD%E5%92%8C%E6%81%A2%E5%A4%8D%E7%9A%84%E7%B3%BB%E7%BB%9F%E4%BD%A0%E4%BC%9A%E5%A6%82%E4%BD%95%E8%AE%BE%E8%AE%A1/</link>
      <pubDate>Thu, 02 Feb 2023 14:33:33 +0800</pubDate>
      
      <guid>https://geek.zshipu.com/post/%E9%9D%A2%E8%AF%95/01.%E9%98%BF%E9%87%8C%E7%AF%87/1.3.3-%E5%A6%82%E6%9E%9C%E8%AE%A9%E4%BD%A0%E8%AE%BE%E8%AE%A1%E4%B8%80%E4%B8%AA%E9%80%9A%E7%94%A8%E7%9A%84%E6%94%AF%E6%8C%81%E5%90%84%E7%A7%8D%E6%95%B0%E6%8D%AE%E5%BA%93%E7%A7%92%E7%BA%A7%E5%A4%87%E4%BB%BD%E5%92%8C%E6%81%A2%E5%A4%8D%E7%9A%84%E7%B3%BB%E7%BB%9F%E4%BD%A0%E4%BC%9A%E5%A6%82%E4%BD%95%E8%AE%BE%E8%AE%A1/</guid>
      <description>题目：如果让你设计一个通用的、支持各种数据库秒级备份和恢复的系统，你会如何设计？ 出题人：阿里巴巴出题专家：千震／阿里云数据库高级技术专家 参考答案：开放性问题，无标准答案。</description>
    </item>
    
    <item>
      <title>阿里篇-1.3.2 给定一个链表，删除链表的倒数第N个节点，并且返回链表的头结点</title>
      <link>https://geek.zshipu.com/post/%E9%9D%A2%E8%AF%95/01.%E9%98%BF%E9%87%8C%E7%AF%87/1.3.2-%E7%BB%99%E5%AE%9A%E4%B8%80%E4%B8%AA%E9%93%BE%E8%A1%A8%E5%88%A0%E9%99%A4%E9%93%BE%E8%A1%A8%E7%9A%84%E5%80%92%E6%95%B0%E7%AC%ACN%E4%B8%AA%E8%8A%82%E7%82%B9%E5%B9%B6%E4%B8%94%E8%BF%94%E5%9B%9E%E9%93%BE%E8%A1%A8%E7%9A%84%E5%A4%B4%E7%BB%93%E7%82%B9/</link>
      <pubDate>Thu, 02 Feb 2023 14:32:33 +0800</pubDate>
      
      <guid>https://geek.zshipu.com/post/%E9%9D%A2%E8%AF%95/01.%E9%98%BF%E9%87%8C%E7%AF%87/1.3.2-%E7%BB%99%E5%AE%9A%E4%B8%80%E4%B8%AA%E9%93%BE%E8%A1%A8%E5%88%A0%E9%99%A4%E9%93%BE%E8%A1%A8%E7%9A%84%E5%80%92%E6%95%B0%E7%AC%ACN%E4%B8%AA%E8%8A%82%E7%82%B9%E5%B9%B6%E4%B8%94%E8%BF%94%E5%9B%9E%E9%93%BE%E8%A1%A8%E7%9A%84%E5%A4%B4%E7%BB%93%E7%82%B9/</guid>
      <description>题目：给定一个链表，删除链表的倒数第 N 个节点，并且返回链表的头结点。 ◼ 示例： 给定一个链表: 1-&amp;gt;2-&amp;gt;3-&amp;gt;4-&amp;gt;5, 和 n = 2. 当删除了倒数第二个节点后，链表变为 1-&amp;gt;2-&amp;gt;3-&amp;gt;5. 说明： 给定的 n 保证是有效的。 要求： 只允许对链表进行一次遍历。 出题人：阿里巴巴出题专家：屹平／阿里云视频云边缘计算高级技术专家 参考答案： 我们可以使</description>
    </item>
    
    <item>
      <title>阿里篇-1.3.1 最大频率栈</title>
      <link>https://geek.zshipu.com/post/%E9%9D%A2%E8%AF%95/01.%E9%98%BF%E9%87%8C%E7%AF%87/1.3.1-%E6%9C%80%E5%A4%A7%E9%A2%91%E7%8E%87%E6%A0%88/</link>
      <pubDate>Thu, 02 Feb 2023 14:31:33 +0800</pubDate>
      
      <guid>https://geek.zshipu.com/post/%E9%9D%A2%E8%AF%95/01.%E9%98%BF%E9%87%8C%E7%AF%87/1.3.1-%E6%9C%80%E5%A4%A7%E9%A2%91%E7%8E%87%E6%A0%88/</guid>
      <description>题目：最大频率栈。 实现 FreqStack，模拟类似栈的数据结构的操作的一个类。FreqStack 有两个函数： push(int x)，将整数 x 推入栈中。pop()，它移除并返回栈中出现最频繁的元素。如果最频繁的元素不只一个，则移除并返回最接近栈顶的元素。 ◼ 示例： push [5,7,5,7,4,5] pop() -&amp;gt; 返回 5，因为 5 是出现频率最高</description>
    </item>
    
    <item>
      <title>阿里篇-1.3.0 在云计算大数据处理场景中，每天运行着成千上万的任务，每个任务都要进行 IO 读写</title>
      <link>https://geek.zshipu.com/post/%E9%9D%A2%E8%AF%95/01.%E9%98%BF%E9%87%8C%E7%AF%87/1.3.0-%E5%9C%A8%E4%BA%91%E8%AE%A1%E7%AE%97%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E5%9C%BA%E6%99%AF%E4%B8%AD%E6%AF%8F%E5%A4%A9%E8%BF%90%E8%A1%8C%E7%9D%80%E6%88%90%E5%8D%83%E4%B8%8A%E4%B8%87%E7%9A%84%E4%BB%BB%E5%8A%A1%E6%AF%8F%E4%B8%AA%E4%BB%BB%E5%8A%A1%E9%83%BD%E8%A6%81%E8%BF%9B%E8%A1%8C-IO-%E8%AF%BB%E5%86%99/</link>
      <pubDate>Thu, 02 Feb 2023 14:30:33 +0800</pubDate>
      
      <guid>https://geek.zshipu.com/post/%E9%9D%A2%E8%AF%95/01.%E9%98%BF%E9%87%8C%E7%AF%87/1.3.0-%E5%9C%A8%E4%BA%91%E8%AE%A1%E7%AE%97%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E5%9C%BA%E6%99%AF%E4%B8%AD%E6%AF%8F%E5%A4%A9%E8%BF%90%E8%A1%8C%E7%9D%80%E6%88%90%E5%8D%83%E4%B8%8A%E4%B8%87%E7%9A%84%E4%BB%BB%E5%8A%A1%E6%AF%8F%E4%B8%AA%E4%BB%BB%E5%8A%A1%E9%83%BD%E8%A6%81%E8%BF%9B%E8%A1%8C-IO-%E8%AF%BB%E5%86%99/</guid>
      <description>题目：在云计算大数据处理场景中，每天运行着成千上万的任务，每个任务都要进行 IO 读写。存储系统为了更好的服务，经常会保证高优先级的任务优先执行。当多个作业或用户访问存储系统时，如何保证优先级和公平性。 出题人：阿里巴巴出题专家：田磊磊／阿里云文件存储高级技术专家 参考答案：开放性问题，无</description>
    </item>
    
    <item>
      <title>阿里篇-1.2.9 你理解常见如阿里，和友商大数据平台的技术体系差异以及发展趋势和技术瓶颈，在存储和计算两个方面进行概述</title>
      <link>https://geek.zshipu.com/post/%E9%9D%A2%E8%AF%95/01.%E9%98%BF%E9%87%8C%E7%AF%87/1.2.9-%E4%BD%A0%E7%90%86%E8%A7%A3%E5%B8%B8%E8%A7%81%E5%A6%82%E9%98%BF%E9%87%8C%E5%92%8C%E5%8F%8B%E5%95%86%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%B9%B3%E5%8F%B0%E7%9A%84%E6%8A%80%E6%9C%AF%E4%BD%93%E7%B3%BB%E5%B7%AE%E5%BC%82%E4%BB%A5%E5%8F%8A%E5%8F%91%E5%B1%95%E8%B6%8B%E5%8A%BF%E5%92%8C%E6%8A%80%E6%9C%AF%E7%93%B6%E9%A2%88%E5%9C%A8%E5%AD%98%E5%82%A8%E5%92%8C%E8%AE%A1%E7%AE%97%E4%B8%A4%E4%B8%AA%E6%96%B9%E9%9D%A2%E8%BF%9B%E8%A1%8C%E6%A6%82%E8%BF%B0/</link>
      <pubDate>Thu, 02 Feb 2023 14:29:33 +0800</pubDate>
      
      <guid>https://geek.zshipu.com/post/%E9%9D%A2%E8%AF%95/01.%E9%98%BF%E9%87%8C%E7%AF%87/1.2.9-%E4%BD%A0%E7%90%86%E8%A7%A3%E5%B8%B8%E8%A7%81%E5%A6%82%E9%98%BF%E9%87%8C%E5%92%8C%E5%8F%8B%E5%95%86%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%B9%B3%E5%8F%B0%E7%9A%84%E6%8A%80%E6%9C%AF%E4%BD%93%E7%B3%BB%E5%B7%AE%E5%BC%82%E4%BB%A5%E5%8F%8A%E5%8F%91%E5%B1%95%E8%B6%8B%E5%8A%BF%E5%92%8C%E6%8A%80%E6%9C%AF%E7%93%B6%E9%A2%88%E5%9C%A8%E5%AD%98%E5%82%A8%E5%92%8C%E8%AE%A1%E7%AE%97%E4%B8%A4%E4%B8%AA%E6%96%B9%E9%9D%A2%E8%BF%9B%E8%A1%8C%E6%A6%82%E8%BF%B0/</guid>
      <description>题目： 你理解常见如阿里，和友商大数据平台的技术体系差异以及发展趋势和技术瓶颈，在存储和计算两个方面进行概述。 出题人： 阿里巴巴出题专家：映泉／阿里巴巴高级技术专家 参考答案：开放性问题，无标准答案。</description>
    </item>
    
    <item>
      <title>阿里篇-1.2.8 对大数据平台中的元数据管理是怎么理解的，元数据收集管理体系是怎么样的，会对大数据应用有什么样的影响</title>
      <link>https://geek.zshipu.com/post/%E9%9D%A2%E8%AF%95/01.%E9%98%BF%E9%87%8C%E7%AF%87/1.2.8-%E5%AF%B9%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%B9%B3%E5%8F%B0%E4%B8%AD%E7%9A%84%E5%85%83%E6%95%B0%E6%8D%AE%E7%AE%A1%E7%90%86%E6%98%AF%E6%80%8E%E4%B9%88%E7%90%86%E8%A7%A3%E7%9A%84%E5%85%83%E6%95%B0%E6%8D%AE%E6%94%B6%E9%9B%86%E7%AE%A1%E7%90%86%E4%BD%93%E7%B3%BB%E6%98%AF%E6%80%8E%E4%B9%88%E6%A0%B7%E7%9A%84%E4%BC%9A%E5%AF%B9%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%BA%94%E7%94%A8%E6%9C%89%E4%BB%80%E4%B9%88%E6%A0%B7%E7%9A%84%E5%BD%B1%E5%93%8D/</link>
      <pubDate>Thu, 02 Feb 2023 14:28:33 +0800</pubDate>
      
      <guid>https://geek.zshipu.com/post/%E9%9D%A2%E8%AF%95/01.%E9%98%BF%E9%87%8C%E7%AF%87/1.2.8-%E5%AF%B9%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%B9%B3%E5%8F%B0%E4%B8%AD%E7%9A%84%E5%85%83%E6%95%B0%E6%8D%AE%E7%AE%A1%E7%90%86%E6%98%AF%E6%80%8E%E4%B9%88%E7%90%86%E8%A7%A3%E7%9A%84%E5%85%83%E6%95%B0%E6%8D%AE%E6%94%B6%E9%9B%86%E7%AE%A1%E7%90%86%E4%BD%93%E7%B3%BB%E6%98%AF%E6%80%8E%E4%B9%88%E6%A0%B7%E7%9A%84%E4%BC%9A%E5%AF%B9%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%BA%94%E7%94%A8%E6%9C%89%E4%BB%80%E4%B9%88%E6%A0%B7%E7%9A%84%E5%BD%B1%E5%93%8D/</guid>
      <description>题目： 对大数据平台中的元数据管理是怎么理解的，元数据收集管理体系是怎么样的，会对大数据应用有什么样的影响。 出题人： 阿里巴巴出题专家：映泉／阿里巴巴高级技术专家 参考答案：开放性问题，无标准答案。</description>
    </item>
    
    <item>
      <title>阿里篇-1.2.7 请分析 MaxCompute 产品与分布式技术的关系、当前大数据计算平台类产品的市场现状和发展趋势</title>
      <link>https://geek.zshipu.com/post/%E9%9D%A2%E8%AF%95/01.%E9%98%BF%E9%87%8C%E7%AF%87/1.2.7-%E8%AF%B7%E5%88%86%E6%9E%90-MaxCompute-%E4%BA%A7%E5%93%81%E4%B8%8E%E5%88%86%E5%B8%83%E5%BC%8F%E6%8A%80%E6%9C%AF%E7%9A%84%E5%85%B3%E7%B3%BB%E5%BD%93%E5%89%8D%E5%A4%A7%E6%95%B0%E6%8D%AE%E8%AE%A1%E7%AE%97%E5%B9%B3%E5%8F%B0%E7%B1%BB%E4%BA%A7%E5%93%81%E7%9A%84%E5%B8%82%E5%9C%BA%E7%8E%B0%E7%8A%B6%E5%92%8C%E5%8F%91%E5%B1%95%E8%B6%8B%E5%8A%BF/</link>
      <pubDate>Thu, 02 Feb 2023 14:27:33 +0800</pubDate>
      
      <guid>https://geek.zshipu.com/post/%E9%9D%A2%E8%AF%95/01.%E9%98%BF%E9%87%8C%E7%AF%87/1.2.7-%E8%AF%B7%E5%88%86%E6%9E%90-MaxCompute-%E4%BA%A7%E5%93%81%E4%B8%8E%E5%88%86%E5%B8%83%E5%BC%8F%E6%8A%80%E6%9C%AF%E7%9A%84%E5%85%B3%E7%B3%BB%E5%BD%93%E5%89%8D%E5%A4%A7%E6%95%B0%E6%8D%AE%E8%AE%A1%E7%AE%97%E5%B9%B3%E5%8F%B0%E7%B1%BB%E4%BA%A7%E5%93%81%E7%9A%84%E5%B8%82%E5%9C%BA%E7%8E%B0%E7%8A%B6%E5%92%8C%E5%8F%91%E5%B1%95%E8%B6%8B%E5%8A%BF/</guid>
      <description>题目：请分析 MaxCompute 产品与分布式技术的关系、当前大数据计算平台类产品的市场现状和发展趋势。 出题人：阿里巴巴出题专家：云郎／阿里 MaxCompute 高级产品专家 参考答案： 开放性问题，无标准答案。</description>
    </item>
    
    <item>
      <title>阿里篇-1.2.6 一颗现代处理器，每秒大概可以执行多少条简单的MOV指令，有哪些主要的影响因素</title>
      <link>https://geek.zshipu.com/post/%E9%9D%A2%E8%AF%95/01.%E9%98%BF%E9%87%8C%E7%AF%87/1.2.6-%E4%B8%80%E9%A2%97%E7%8E%B0%E4%BB%A3%E5%A4%84%E7%90%86%E5%99%A8%E6%AF%8F%E7%A7%92%E5%A4%A7%E6%A6%82%E5%8F%AF%E4%BB%A5%E6%89%A7%E8%A1%8C%E5%A4%9A%E5%B0%91%E6%9D%A1%E7%AE%80%E5%8D%95%E7%9A%84MOV%E6%8C%87%E4%BB%A4%E6%9C%89%E5%93%AA%E4%BA%9B%E4%B8%BB%E8%A6%81%E7%9A%84%E5%BD%B1%E5%93%8D%E5%9B%A0%E7%B4%A0/</link>
      <pubDate>Thu, 02 Feb 2023 14:26:33 +0800</pubDate>
      
      <guid>https://geek.zshipu.com/post/%E9%9D%A2%E8%AF%95/01.%E9%98%BF%E9%87%8C%E7%AF%87/1.2.6-%E4%B8%80%E9%A2%97%E7%8E%B0%E4%BB%A3%E5%A4%84%E7%90%86%E5%99%A8%E6%AF%8F%E7%A7%92%E5%A4%A7%E6%A6%82%E5%8F%AF%E4%BB%A5%E6%89%A7%E8%A1%8C%E5%A4%9A%E5%B0%91%E6%9D%A1%E7%AE%80%E5%8D%95%E7%9A%84MOV%E6%8C%87%E4%BB%A4%E6%9C%89%E5%93%AA%E4%BA%9B%E4%B8%BB%E8%A6%81%E7%9A%84%E5%BD%B1%E5%93%8D%E5%9B%A0%E7%B4%A0/</guid>
      <description>题目：一颗现代处理器，每秒大概可以执行多少条简单的MOV指令，有哪些主要的影响因素？ 出题人：阿里巴巴出题专家：子团／创新产品虚拟化&amp;amp;稳定性资深技术专家 参考答案： 及格： 每执行一条mov指令需要消耗1个时钟周期，所以每秒执行的mov指令和CPU主频相关。 加分： 在CPU微架构上</description>
    </item>
    
    <item>
      <title>阿里篇-1.2.5 请计算XILINX公司VU9P芯片的算力相当于多少TOPS，给出计算过程与公式</title>
      <link>https://geek.zshipu.com/post/%E9%9D%A2%E8%AF%95/01.%E9%98%BF%E9%87%8C%E7%AF%87/1.2.5-%E8%AF%B7%E8%AE%A1%E7%AE%97XILINX%E5%85%AC%E5%8F%B8VU9P%E8%8A%AF%E7%89%87%E7%9A%84%E7%AE%97%E5%8A%9B%E7%9B%B8%E5%BD%93%E4%BA%8E%E5%A4%9A%E5%B0%91TOPS%E7%BB%99%E5%87%BA%E8%AE%A1%E7%AE%97%E8%BF%87%E7%A8%8B%E4%B8%8E%E5%85%AC%E5%BC%8F/</link>
      <pubDate>Thu, 02 Feb 2023 14:25:33 +0800</pubDate>
      
      <guid>https://geek.zshipu.com/post/%E9%9D%A2%E8%AF%95/01.%E9%98%BF%E9%87%8C%E7%AF%87/1.2.5-%E8%AF%B7%E8%AE%A1%E7%AE%97XILINX%E5%85%AC%E5%8F%B8VU9P%E8%8A%AF%E7%89%87%E7%9A%84%E7%AE%97%E5%8A%9B%E7%9B%B8%E5%BD%93%E4%BA%8E%E5%A4%9A%E5%B0%91TOPS%E7%BB%99%E5%87%BA%E8%AE%A1%E7%AE%97%E8%BF%87%E7%A8%8B%E4%B8%8E%E5%85%AC%E5%BC%8F/</guid>
      <description>题目：请计算XILINX公司VU9P芯片的算力相当于多少TOPS，给出计算过程与公式。 出题人： 阿里巴巴出题专家：隐达／阿里云异构计算资深专家 参考答案：基于不同的算法，这个值在十几到几百之间。但是，如果只是单纯比算力，FPGA和ASIC、GPU相比并无太大优势，甚至大多时候有较大劣</description>
    </item>
    
    <item>
      <title>阿里篇-1.2.4 关于并行计算的一些基础开放问题</title>
      <link>https://geek.zshipu.com/post/%E9%9D%A2%E8%AF%95/01.%E9%98%BF%E9%87%8C%E7%AF%87/1.2.4-%E5%85%B3%E4%BA%8E%E5%B9%B6%E8%A1%8C%E8%AE%A1%E7%AE%97%E7%9A%84%E4%B8%80%E4%BA%9B%E5%9F%BA%E7%A1%80%E5%BC%80%E6%94%BE%E9%97%AE%E9%A2%98/</link>
      <pubDate>Thu, 02 Feb 2023 14:24:33 +0800</pubDate>
      
      <guid>https://geek.zshipu.com/post/%E9%9D%A2%E8%AF%95/01.%E9%98%BF%E9%87%8C%E7%AF%87/1.2.4-%E5%85%B3%E4%BA%8E%E5%B9%B6%E8%A1%8C%E8%AE%A1%E7%AE%97%E7%9A%84%E4%B8%80%E4%BA%9B%E5%9F%BA%E7%A1%80%E5%BC%80%E6%94%BE%E9%97%AE%E9%A2%98/</guid>
      <description>题目： 关于并行计算的一些基础开放问题。 ◼ 如何定义并计算，请分别阐述分布式内存到共享内存模式行编程的区别和实现（例子代码）？ ◼ 请使用 MPI 和 OpenMP 分别实现 N 个处理器对 M 个变量的求和？ ◼ 请说明 SIMD 指令在循环中使用的权限？向量化优化有哪些手段？ ◼ 请用 Amdahl 定律说明什么是并行效率以及并行算法的扩展性？</description>
    </item>
    
    <item>
      <title>阿里篇-1.2.3 如何实现两金额数据相加（最多小数点两位）</title>
      <link>https://geek.zshipu.com/post/%E9%9D%A2%E8%AF%95/01.%E9%98%BF%E9%87%8C%E7%AF%87/1.2.3-%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E4%B8%A4%E9%87%91%E9%A2%9D%E6%95%B0%E6%8D%AE%E7%9B%B8%E5%8A%A0%E6%9C%80%E5%A4%9A%E5%B0%8F%E6%95%B0%E7%82%B9%E4%B8%A4%E4%BD%8D/</link>
      <pubDate>Thu, 02 Feb 2023 14:23:33 +0800</pubDate>
      
      <guid>https://geek.zshipu.com/post/%E9%9D%A2%E8%AF%95/01.%E9%98%BF%E9%87%8C%E7%AF%87/1.2.3-%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E4%B8%A4%E9%87%91%E9%A2%9D%E6%95%B0%E6%8D%AE%E7%9B%B8%E5%8A%A0%E6%9C%80%E5%A4%9A%E5%B0%8F%E6%95%B0%E7%82%B9%E4%B8%A4%E4%BD%8D/</guid>
      <description>题目：如何实现两金额数据相加（最多小数点两位）？ 出题人：阿里巴巴出题专家：御术／蚂蚁金服数据可视化高级技术专家 参考答案： 其实问题并不难，就是考察候选人对 JavaScript 数据运算上的认知以及考虑问题的缜密程度，有很多坑，可以用在笔试题，如果用在面试，回答过程中还可以随机加入有很多计算机基础的延伸</description>
    </item>
    
    <item>
      <title>阿里篇-1.2.2 有一批气象观测站，现需要获取这些站点的观测数据，并存储到 Hive 中。但是气象局只提供了 api 查询，每次只能查询单个观测点。那么如果能够方便快速地获取到所有的观测点的数据？</title>
      <link>https://geek.zshipu.com/post/%E9%9D%A2%E8%AF%95/01.%E9%98%BF%E9%87%8C%E7%AF%87/1.2.2-%E6%9C%89%E4%B8%80%E6%89%B9%E6%B0%94%E8%B1%A1%E8%A7%82%E6%B5%8B%E7%AB%99%E7%8E%B0%E9%9C%80%E8%A6%81%E8%8E%B7%E5%8F%96%E8%BF%99%E4%BA%9B%E7%AB%99%E7%82%B9%E7%9A%84%E8%A7%82%E6%B5%8B%E6%95%B0%E6%8D%AE%E5%B9%B6%E5%AD%98%E5%82%A8%E5%88%B0-Hive-%E4%B8%AD%E4%BD%86%E6%98%AF%E6%B0%94%E8%B1%A1%E5%B1%80%E5%8F%AA%E6%8F%90%E4%BE%9B%E4%BA%86-api-%E6%9F%A5%E8%AF%A2%E6%AF%8F%E6%AC%A1%E5%8F%AA%E8%83%BD%E6%9F%A5%E8%AF%A2%E5%8D%95%E4%B8%AA%E8%A7%82%E6%B5%8B%E7%82%B9%E9%82%A3%E4%B9%88%E5%A6%82%E6%9E%9C%E8%83%BD%E5%A4%9F%E6%96%B9%E4%BE%BF%E5%BF%AB%E9%80%9F%E5%9C%B0%E8%8E%B7%E5%8F%96%E5%88%B0%E6%89%80%E6%9C%89%E7%9A%84%E8%A7%82%E6%B5%8B%E7%82%B9%E7%9A%84%E6%95%B0%E6%8D%AE/</link>
      <pubDate>Thu, 02 Feb 2023 14:22:33 +0800</pubDate>
      
      <guid>https://geek.zshipu.com/post/%E9%9D%A2%E8%AF%95/01.%E9%98%BF%E9%87%8C%E7%AF%87/1.2.2-%E6%9C%89%E4%B8%80%E6%89%B9%E6%B0%94%E8%B1%A1%E8%A7%82%E6%B5%8B%E7%AB%99%E7%8E%B0%E9%9C%80%E8%A6%81%E8%8E%B7%E5%8F%96%E8%BF%99%E4%BA%9B%E7%AB%99%E7%82%B9%E7%9A%84%E8%A7%82%E6%B5%8B%E6%95%B0%E6%8D%AE%E5%B9%B6%E5%AD%98%E5%82%A8%E5%88%B0-Hive-%E4%B8%AD%E4%BD%86%E6%98%AF%E6%B0%94%E8%B1%A1%E5%B1%80%E5%8F%AA%E6%8F%90%E4%BE%9B%E4%BA%86-api-%E6%9F%A5%E8%AF%A2%E6%AF%8F%E6%AC%A1%E5%8F%AA%E8%83%BD%E6%9F%A5%E8%AF%A2%E5%8D%95%E4%B8%AA%E8%A7%82%E6%B5%8B%E7%82%B9%E9%82%A3%E4%B9%88%E5%A6%82%E6%9E%9C%E8%83%BD%E5%A4%9F%E6%96%B9%E4%BE%BF%E5%BF%AB%E9%80%9F%E5%9C%B0%E8%8E%B7%E5%8F%96%E5%88%B0%E6%89%80%E6%9C%89%E7%9A%84%E8%A7%82%E6%B5%8B%E7%82%B9%E7%9A%84%E6%95%B0%E6%8D%AE/</guid>
      <description>题目：有一批气象观测站，现需要获取这些站点的观测数据，并存储到 Hive 中。但是气象局只提供了 api 查询，每次只能查询单个观测点。那么如果能够方便快速地获取到所有的观测点的数据？ 出题人：阿里巴巴出题专家：江岚／阿里巴巴数据技术高级技术专家 参考答案： A. 通过 shell 或 python 等调用 api，结果先暂存本地，最</description>
    </item>
    
    <item>
      <title>阿里篇-1.2.1 现有一批邮件需要发送给订阅顾客，且有一个集群（集群的节点数不定，会动态扩容缩容）来负责具体的邮件发送任务，如何让系统尽快地完成发送？</title>
      <link>https://geek.zshipu.com/post/%E9%9D%A2%E8%AF%95/01.%E9%98%BF%E9%87%8C%E7%AF%87/1.2.1-%E7%8E%B0%E6%9C%89%E4%B8%80%E6%89%B9%E9%82%AE%E4%BB%B6%E9%9C%80%E8%A6%81%E5%8F%91%E9%80%81%E7%BB%99%E8%AE%A2%E9%98%85%E9%A1%BE%E5%AE%A2%E4%B8%94%E6%9C%89%E4%B8%80%E4%B8%AA%E9%9B%86%E7%BE%A4%E9%9B%86%E7%BE%A4%E7%9A%84%E8%8A%82%E7%82%B9%E6%95%B0%E4%B8%8D%E5%AE%9A%E4%BC%9A%E5%8A%A8%E6%80%81%E6%89%A9%E5%AE%B9%E7%BC%A9%E5%AE%B9%E6%9D%A5%E8%B4%9F%E8%B4%A3%E5%85%B7%E4%BD%93%E7%9A%84%E9%82%AE%E4%BB%B6%E5%8F%91%E9%80%81%E4%BB%BB%E5%8A%A1%E5%A6%82%E4%BD%95%E8%AE%A9%E7%B3%BB%E7%BB%9F%E5%B0%BD%E5%BF%AB%E5%9C%B0%E5%AE%8C%E6%88%90%E5%8F%91%E9%80%81/</link>
      <pubDate>Thu, 02 Feb 2023 14:21:33 +0800</pubDate>
      
      <guid>https://geek.zshipu.com/post/%E9%9D%A2%E8%AF%95/01.%E9%98%BF%E9%87%8C%E7%AF%87/1.2.1-%E7%8E%B0%E6%9C%89%E4%B8%80%E6%89%B9%E9%82%AE%E4%BB%B6%E9%9C%80%E8%A6%81%E5%8F%91%E9%80%81%E7%BB%99%E8%AE%A2%E9%98%85%E9%A1%BE%E5%AE%A2%E4%B8%94%E6%9C%89%E4%B8%80%E4%B8%AA%E9%9B%86%E7%BE%A4%E9%9B%86%E7%BE%A4%E7%9A%84%E8%8A%82%E7%82%B9%E6%95%B0%E4%B8%8D%E5%AE%9A%E4%BC%9A%E5%8A%A8%E6%80%81%E6%89%A9%E5%AE%B9%E7%BC%A9%E5%AE%B9%E6%9D%A5%E8%B4%9F%E8%B4%A3%E5%85%B7%E4%BD%93%E7%9A%84%E9%82%AE%E4%BB%B6%E5%8F%91%E9%80%81%E4%BB%BB%E5%8A%A1%E5%A6%82%E4%BD%95%E8%AE%A9%E7%B3%BB%E7%BB%9F%E5%B0%BD%E5%BF%AB%E5%9C%B0%E5%AE%8C%E6%88%90%E5%8F%91%E9%80%81/</guid>
      <description>题目：现有一批邮件需要发送给订阅顾客，且有一个集群（集群的节点数不定，会动态扩容缩容）来负责具体的邮件发送任务，如何让系统尽快地完成发送？请详述技术方案！ 出题人：阿里巴巴出题专家：江岚／阿里巴巴数据技术高级技术专家 参考答案： A. 借助消息中间件，通过发布者订阅者模式来进行任务分配 B. master-slave</description>
    </item>
    
    <item>
      <title>阿里篇-1.2.0 请解释下为什么鹿晗发布恋情的时候，微博系统会崩溃，如何解决？</title>
      <link>https://geek.zshipu.com/post/%E9%9D%A2%E8%AF%95/01.%E9%98%BF%E9%87%8C%E7%AF%87/1.2.0-%E8%AF%B7%E8%A7%A3%E9%87%8A%E4%B8%8B%E4%B8%BA%E4%BB%80%E4%B9%88%E9%B9%BF%E6%99%97%E5%8F%91%E5%B8%83%E6%81%8B%E6%83%85%E7%9A%84%E6%97%B6%E5%80%99%E5%BE%AE%E5%8D%9A%E7%B3%BB%E7%BB%9F%E4%BC%9A%E5%B4%A9%E6%BA%83%E5%A6%82%E4%BD%95%E8%A7%A3%E5%86%B3/</link>
      <pubDate>Thu, 02 Feb 2023 14:20:33 +0800</pubDate>
      
      <guid>https://geek.zshipu.com/post/%E9%9D%A2%E8%AF%95/01.%E9%98%BF%E9%87%8C%E7%AF%87/1.2.0-%E8%AF%B7%E8%A7%A3%E9%87%8A%E4%B8%8B%E4%B8%BA%E4%BB%80%E4%B9%88%E9%B9%BF%E6%99%97%E5%8F%91%E5%B8%83%E6%81%8B%E6%83%85%E7%9A%84%E6%97%B6%E5%80%99%E5%BE%AE%E5%8D%9A%E7%B3%BB%E7%BB%9F%E4%BC%9A%E5%B4%A9%E6%BA%83%E5%A6%82%E4%BD%95%E8%A7%A3%E5%86%B3/</guid>
      <description>题目：请解释下为什么鹿晗发布恋情的时候，微博系统会崩溃，如何解决？ 出题人：阿里巴巴出题专家：江岚／阿里巴巴数据技术高级技术专家 参考答案： A. 获取微博通过 pull 方式还是 push 方式 B. 发布微博的频率要远小于阅读微博 C. 流量明星的发微博，和普通博主要区分对待，比如在 sharding的时候，也要考虑这</description>
    </item>
    
    <item>
      <title>阿里篇-1.1.9 输入 ping IP 后敲回车，发包前会发生什么？</title>
      <link>https://geek.zshipu.com/post/%E9%9D%A2%E8%AF%95/01.%E9%98%BF%E9%87%8C%E7%AF%87/1.1.9-%E8%BE%93%E5%85%A5-ping-IP-%E5%90%8E%E6%95%B2%E5%9B%9E%E8%BD%A6%E5%8F%91%E5%8C%85%E5%89%8D%E4%BC%9A%E5%8F%91%E7%94%9F%E4%BB%80%E4%B9%88/</link>
      <pubDate>Thu, 02 Feb 2023 14:19:33 +0800</pubDate>
      
      <guid>https://geek.zshipu.com/post/%E9%9D%A2%E8%AF%95/01.%E9%98%BF%E9%87%8C%E7%AF%87/1.1.9-%E8%BE%93%E5%85%A5-ping-IP-%E5%90%8E%E6%95%B2%E5%9B%9E%E8%BD%A6%E5%8F%91%E5%8C%85%E5%89%8D%E4%BC%9A%E5%8F%91%E7%94%9F%E4%BB%80%E4%B9%88/</guid>
      <description>题目：输入 ping IP 后敲回车，发包前会发生什么？ 出题人：阿里巴巴出题专家：怀虎／阿里云云效平台负责人 参考答案： ping目标ip时，先查路由表，确定出接口 - 如果落在直连接口子网内，此时若为以太网等 多路访问网络 则先查询arp缓存，命中则直接发出，否则在该接口上发arp询问目标ip的mac地</description>
    </item>
    
    <item>
      <title>阿里篇-1.1.8 NFS与SMB的区别？</title>
      <link>https://geek.zshipu.com/post/%E9%9D%A2%E8%AF%95/01.%E9%98%BF%E9%87%8C%E7%AF%87/1.1.8-NFS%E4%B8%8ESMB%E7%9A%84%E5%8C%BA%E5%88%AB/</link>
      <pubDate>Thu, 02 Feb 2023 14:18:33 +0800</pubDate>
      
      <guid>https://geek.zshipu.com/post/%E9%9D%A2%E8%AF%95/01.%E9%98%BF%E9%87%8C%E7%AF%87/1.1.8-NFS%E4%B8%8ESMB%E7%9A%84%E5%8C%BA%E5%88%AB/</guid>
      <description>题目：NFS 和 SMB 是最常见的两种 NAS（Network Attached Storage）协议，当把一个文件系统同时通过 NFS 和 SMB 协议共享给多个主机访问时，以下哪些说法是错误的：（多选） A. 不可能有这样的操作，即把一个文件系统同时通过 NFS 和 SMB协议共享给多个主机访问。 B. 主机 a 的用户通过NFS 协议创建的文件</description>
    </item>
    
    <item>
      <title>阿里篇-1.1.7 MySQL的数据如何恢复到任意时间点？</title>
      <link>https://geek.zshipu.com/post/%E9%9D%A2%E8%AF%95/01.%E9%98%BF%E9%87%8C%E7%AF%87/1.1.7-MySQL%E7%9A%84%E6%95%B0%E6%8D%AE%E5%A6%82%E4%BD%95%E6%81%A2%E5%A4%8D%E5%88%B0%E4%BB%BB%E6%84%8F%E6%97%B6%E9%97%B4%E7%82%B9/</link>
      <pubDate>Thu, 02 Feb 2023 14:17:33 +0800</pubDate>
      
      <guid>https://geek.zshipu.com/post/%E9%9D%A2%E8%AF%95/01.%E9%98%BF%E9%87%8C%E7%AF%87/1.1.7-MySQL%E7%9A%84%E6%95%B0%E6%8D%AE%E5%A6%82%E4%BD%95%E6%81%A2%E5%A4%8D%E5%88%B0%E4%BB%BB%E6%84%8F%E6%97%B6%E9%97%B4%E7%82%B9/</guid>
      <description>题目：MySQL 的数据如何恢复到任意时间点？ 出题人：阿里巴巴出题专家：近秋／阿里云数据库产品技术部技术专家参考答案 参考答案：恢复到任意时间点以定时的做全量备份，以及备份增量的 binlog 日志为前提。恢复到任意时间点首先将全量备份恢复之后，再此基础上回放增加的 binlog 直至指定的时间点。</description>
    </item>
    
    <item>
      <title>阿里篇-1.1.6 从innodb的索引结构分析，为什么索引的 key 长度不能太长</title>
      <link>https://geek.zshipu.com/post/%E9%9D%A2%E8%AF%95/01.%E9%98%BF%E9%87%8C%E7%AF%87/1.1.6-%E4%BB%8Einnodb%E7%9A%84%E7%B4%A2%E5%BC%95%E7%BB%93%E6%9E%84%E5%88%86%E6%9E%90%E4%B8%BA%E4%BB%80%E4%B9%88%E7%B4%A2%E5%BC%95%E7%9A%84-key-%E9%95%BF%E5%BA%A6%E4%B8%8D%E8%83%BD%E5%A4%AA%E9%95%BF/</link>
      <pubDate>Thu, 02 Feb 2023 14:16:33 +0800</pubDate>
      
      <guid>https://geek.zshipu.com/post/%E9%9D%A2%E8%AF%95/01.%E9%98%BF%E9%87%8C%E7%AF%87/1.1.6-%E4%BB%8Einnodb%E7%9A%84%E7%B4%A2%E5%BC%95%E7%BB%93%E6%9E%84%E5%88%86%E6%9E%90%E4%B8%BA%E4%BB%80%E4%B9%88%E7%B4%A2%E5%BC%95%E7%9A%84-key-%E9%95%BF%E5%BA%A6%E4%B8%8D%E8%83%BD%E5%A4%AA%E9%95%BF/</guid>
      <description>题目：从 innodb 的索引结构分析，为什么索引的 key 长度不能太长？ 出题人：阿里巴巴出题专家：近秋／阿里云数据库产品技术部技术专家 参考答案：key 太长会导致一个页当中能够存放的 key 的数目变少，间接导致索引树的页数目变多，索引层次增加，从而影响整体查询变更的效率。</description>
    </item>
    
    <item>
      <title>阿里篇-1.1.5 关于epoll和select的区别，以下哪些说法是正确的</title>
      <link>https://geek.zshipu.com/post/%E9%9D%A2%E8%AF%95/01.%E9%98%BF%E9%87%8C%E7%AF%87/1.1.5-%E5%85%B3%E4%BA%8Eepoll%E5%92%8Cselect%E7%9A%84%E5%8C%BA%E5%88%AB%E4%BB%A5%E4%B8%8B%E5%93%AA%E4%BA%9B%E8%AF%B4%E6%B3%95%E6%98%AF%E6%AD%A3%E7%A1%AE%E7%9A%84/</link>
      <pubDate>Thu, 02 Feb 2023 14:14:33 +0800</pubDate>
      
      <guid>https://geek.zshipu.com/post/%E9%9D%A2%E8%AF%95/01.%E9%98%BF%E9%87%8C%E7%AF%87/1.1.5-%E5%85%B3%E4%BA%8Eepoll%E5%92%8Cselect%E7%9A%84%E5%8C%BA%E5%88%AB%E4%BB%A5%E4%B8%8B%E5%93%AA%E4%BA%9B%E8%AF%B4%E6%B3%95%E6%98%AF%E6%AD%A3%E7%A1%AE%E7%9A%84/</guid>
      <description>问题：关于 epoll 和 select 的区别，哪些说法是正确的？（多选） A. epoll 和 select 都是 I/O 多路复用的技术，都可以实现同时监听多个 I/O 事件的状态。 B. epoll 相比 select 效率更高，主要是基于其操作系统支持的I/O事件通知机制，而 select 是基于轮询机制。 C. epoll 支持水平触发和边沿触发两种模式。 D. select 能并行支持 I/O 比较小，且无法修改。 出题人</description>
    </item>
    
    <item>
      <title>阿里篇-1.1.4 LRU缓存机制</title>
      <link>https://geek.zshipu.com/post/%E9%9D%A2%E8%AF%95/01.%E9%98%BF%E9%87%8C%E7%AF%87/1.1.4-LRU%E7%BC%93%E5%AD%98%E6%9C%BA%E5%88%B6/</link>
      <pubDate>Thu, 02 Feb 2023 14:13:33 +0800</pubDate>
      
      <guid>https://geek.zshipu.com/post/%E9%9D%A2%E8%AF%95/01.%E9%98%BF%E9%87%8C%E7%AF%87/1.1.4-LRU%E7%BC%93%E5%AD%98%E6%9C%BA%E5%88%B6/</guid>
      <description>题目：LRU 缓存机制 设计和实现一个 LRU（最近最少使用）缓存数据结构，使它应该支持一下操作：get 和 put。 get(key) - 如果 key 存在于缓存中，则获取 key 的 value（总是正数），否则返回 -1。 put(key,value) - 如果 key 不存在，请设置或插入 value。当缓存达到其容量时，它应该在插入新项目之前使最近最少使用的</description>
    </item>
    
    <item>
      <title>阿里篇-1.1.3 给定一个二叉搜索树(BST)，找到树中第 K 小的节点</title>
      <link>https://geek.zshipu.com/post/%E9%9D%A2%E8%AF%95/01.%E9%98%BF%E9%87%8C%E7%AF%87/1.1.3-%E7%BB%99%E5%AE%9A%E4%B8%80%E4%B8%AA%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91BST%E6%89%BE%E5%88%B0%E6%A0%91%E4%B8%AD%E7%AC%AC-K-%E5%B0%8F%E7%9A%84%E8%8A%82%E7%82%B9/</link>
      <pubDate>Thu, 02 Feb 2023 14:12:33 +0800</pubDate>
      
      <guid>https://geek.zshipu.com/post/%E9%9D%A2%E8%AF%95/01.%E9%98%BF%E9%87%8C%E7%AF%87/1.1.3-%E7%BB%99%E5%AE%9A%E4%B8%80%E4%B8%AA%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91BST%E6%89%BE%E5%88%B0%E6%A0%91%E4%B8%AD%E7%AC%AC-K-%E5%B0%8F%E7%9A%84%E8%8A%82%E7%82%B9/</guid>
      <description>题目：给定一个二叉搜索树(BST)，找到树中第 K 小的节点。 出题人：阿里巴巴出题专家：文景／阿里云 CDN 资深技术专家 参考答案： * 考察点 基础数据结构的理解和编码能力 递归使用 * 示例 5 / \ 3 6 / \ 2 4 / 1 说明：保证输入的 K 满足 1&amp;lt;=K&amp;lt;=(节点数目） 解法1：树相关的题目，第一眼就</description>
    </item>
    
    <item>
      <title>阿里篇-1.1.2 已知sqrt(2)约等于1.414，要求不用数学库，求sqrt(2)精确到小数点后10位</title>
      <link>https://geek.zshipu.com/post/%E9%9D%A2%E8%AF%95/01.%E9%98%BF%E9%87%8C%E7%AF%87/1.1.2-%E5%B7%B2%E7%9F%A5sqrt2%E7%BA%A6%E7%AD%89%E4%BA%8E1.414%E8%A6%81%E6%B1%82%E4%B8%8D%E7%94%A8%E6%95%B0%E5%AD%A6%E5%BA%93%E6%B1%82sqrt2%E7%B2%BE%E7%A1%AE%E5%88%B0%E5%B0%8F%E6%95%B0%E7%82%B9%E5%90%8E10%E4%BD%8D/</link>
      <pubDate>Wed, 01 Feb 2023 14:11:33 +0800</pubDate>
      
      <guid>https://geek.zshipu.com/post/%E9%9D%A2%E8%AF%95/01.%E9%98%BF%E9%87%8C%E7%AF%87/1.1.2-%E5%B7%B2%E7%9F%A5sqrt2%E7%BA%A6%E7%AD%89%E4%BA%8E1.414%E8%A6%81%E6%B1%82%E4%B8%8D%E7%94%A8%E6%95%B0%E5%AD%A6%E5%BA%93%E6%B1%82sqrt2%E7%B2%BE%E7%A1%AE%E5%88%B0%E5%B0%8F%E6%95%B0%E7%82%B9%E5%90%8E10%E4%BD%8D/</guid>
      <description>题目：已知 sqrt (2)约等于 1.414，要求不用数学库，求 sqrt (2)精确到小数点后 10 位。 出题人：——阿里巴巴出题专家：文景／阿里云 CDN 资深技术专家 参考答案： * 考察点 基础算法的灵活应用能力（二分法学过数据结构的同学都知道，但不一定往这个方向考虑；如果学过数值计算的同学，应该还要能想到牛顿迭</description>
    </item>
    
    <item>
      <title>阿里篇-1.1.1 如何实现一个高效的单向链表逆序输出？</title>
      <link>https://geek.zshipu.com/post/%E9%9D%A2%E8%AF%95/01.%E9%98%BF%E9%87%8C%E7%AF%87/1.1.1-%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E9%AB%98%E6%95%88%E7%9A%84%E5%8D%95%E5%90%91%E9%93%BE%E8%A1%A8%E9%80%86%E5%BA%8F%E8%BE%93%E5%87%BA/</link>
      <pubDate>Wed, 01 Feb 2023 14:10:33 +0800</pubDate>
      
      <guid>https://geek.zshipu.com/post/%E9%9D%A2%E8%AF%95/01.%E9%98%BF%E9%87%8C%E7%AF%87/1.1.1-%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E9%AB%98%E6%95%88%E7%9A%84%E5%8D%95%E5%90%91%E9%93%BE%E8%A1%A8%E9%80%86%E5%BA%8F%E8%BE%93%E5%87%BA/</guid>
      <description>问题：如何实现一个高效的单向链表逆序输出？ 出题人：阿里巴巴出题专家：昀龙／阿里云弹性人工智能负责人 参考答案：下面是其中一种写法，也可以有不同的写法，比如递归等。供参考。 typedef struct node{ int data; struct node* next; node(int d):data(d), next(NULL){} }node; void reverse(node* head) { if(head == NULL){ return; } node* pleft = NULL; node* pcurrent = head; node* pright = head-&amp;gt;next; while(pright){ pcurrent-&amp;gt;next = pleft; node *ptemp = pright-&amp;gt;next; pright-&amp;gt;next = pcurrent; pleft = pcurrent; pcurrent = pright; pright = ptemp; } while(pcurrent !=</description>
    </item>
    
  </channel>
</rss>